Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Regression),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Language),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
MyPageDrawer#getPaint may produce UnsupportedOperationException,PDFBOX-5596,13535305,Bug,Resolved,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,sundw,sundw,07/May/23 13:18,07/May/23 16:06,07/May/23 20:05,07/May/23 15:27,2.0.24,2.0.28,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.29,3.0.0 PDFBox,,Rendering,Utilities,,,0,,,,"this is the detail message:
Exception in thread ""main"" java.lang.UnsupportedOperationException
	at org.apache.pdfbox.pdmodel.graphics.color.PDPattern.toRGB(PDPattern.java:95)
	at org.apache.pdfbox.pdmodel.graphics.color.PDColor.toRGB(PDColor.java:153)
	at org.apache.pdfbox.examples.rendering.CustomPageDrawer$MyPageDrawer.getPaint(CustomPageDrawer.java:109)
	at org.apache.pdfbox.rendering.PageDrawer.getNonStrokingPaint(PageDrawer.java:748)
	at org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:880)
	at org.apache.pdfbox.examples.rendering.CustomPageDrawer$MyPageDrawer.fillPath(CustomPageDrawer.java:163)
	at org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule.process(FillEvenOddRule.java:37)
	at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933)
	at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:514)
	at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:492)
	at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:155)
	at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:280)
	at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:347)
	at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:268)
	at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:228)
	at org.apache.pdfbox.examples.rendering.CustomPageDrawer.main(CustomPageDrawer.java:67)

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun May 07 16:06:46 UTC 2023,,,,,,,,,,"0|z1hqso:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/May/23 14:39;tilman;Does it work if you add
{code:java}
!(color.getColorSpace() instanceof PDPattern) &&
{code}
at the beginning of the ""if"" statement in {{{}getPaint(){}}}? The method in the {{PageDrawer}} class does this.;;;","07/May/23 15:24;jira-bot;Commit 1909661 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1909661 ]

PDFBOX-5596: avoid toRGB() call for PDPattern; change output directory; add test for more code coverage;;;","07/May/23 15:24;jira-bot;Commit 1909662 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1909662 ]

PDFBOX-5596: avoid toRGB() call for PDPattern; change output directory; add test for more code coverage;;;","07/May/23 15:27;tilman;After my first comment I was a able to reproduce the problem by rendering with a different file and it went away with the change. Thank you for reporting this.;;;","07/May/23 15:30;sundw;Thank you! It works.;;;","07/May/23 16:04;jira-bot;Commit 1909663 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1909663 ]

PDFBOX-5596: fix test;;;","07/May/23 16:06;jira-bot;Commit 1909664 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1909664 ]

PDFBOX-5596: fix test;;;","07/May/23 16:06;jira-bot;Commit 1909665 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1909665 ]

PDFBOX-5596: fix test;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding new Field to form during saveIncremental invalidates prior signatures,PDFBOX-5585,13532400,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,newhouse-anvil,newhouse-anvil,12/Apr/23 19:05,20/Apr/23 18:59,07/May/23 20:06,17/Apr/23 18:22,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AcroForm,PDModel,,,0,,,,"It's possible that this is expected behavior, and that what I'm trying to do is just not possible, but:

When I have some fields in a document, then sign the document, then add a new field to the document and `saveIncremental` sign it, the prior signatures are invalidated.

 

The message is ""Document has been altered or corrupted since it was signed"".

 

The final signature on top of that is good, and the new field is there...but the old signatures are invalid. Is it possible to add a new field and not invalidate the old signatures? I've successfully edited existing fields, but can't get it a to be OK after adding a new field.

 

I've attached a sample document.

 

Thank you for your help!",,,,,,,,,,,,,,,,"12/Apr/23 19:04;newhouse-anvil;signed-then-new-field-added-save-incremental.pdf;https://issues.apache.org/jira/secure/attachment/13057223/signed-then-new-field-added-save-incremental.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,English,Thu Apr 20 18:59:11 UTC 2023,,,,,,,,,,"0|z1h8yg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Apr/23 14:58;mkl;{quote}
It's possible that this is expected behavior, and that what I'm trying to do is just not possible, but:

When I have some fields in a document, then sign the document, then add a new field to the document and `saveIncremental` sign it, the prior signatures are invalidated.
{quote}

Indeed, that's the expected behavior.

After a document is signed, only very few changes remain allowed. While form fill-in may or may not be allowed, structural change of the form (like the addition of new form fields) always is forbidden. The only exception can be the addition of new signature fields.

For details see [this stack overflow answer|https://stackoverflow.com/a/16711745/1729265].;;;","17/Apr/23 18:22;tilman;Closing as this isn't a bug. Thanks [~mkl]mkl for your help. [~newhouse-anvil] the current version is 2.0.28.;;;","20/Apr/23 18:59;newhouse-anvil;Understood. Thank you and thanks for the reference!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding font (or changing font subset) not coming through in saveIncremental,PDFBOX-5583,13530689,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,newhouse-anvil,newhouse-anvil,29/Mar/23 21:24,21/Apr/23 14:55,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AcroForm,PDModel,Signing,,0,,,,"In an effort to keep file sizes small, we leverage Font Subsets in our PDFs.

Also, we already have ""incremental change and signing"" (where fields are changed _after_ a signature, without voiding the prior signature thanks to using `saveIncremental` and signing the changes) working just fine in most cases.

However, when the Font on a field is changed or a new Font Subset must be added to the document because the characters used in a field with a tightly-subsetted Font, things don't work correctly:
 * The signatures stay valid, which is great
 * But the new Font information does not appear to get written to new version appendix, so you get nonsense rendering in a PDF viewer since the field still points to a Font resource that is either not there or is a subset that does not contain all the necessary characters. I'm not super proficient in this so I don't know exactly what's going on.

 

I have ensured that the fields we update are getting marked as `setNeedToBeUpdated(true)` (this is, I believe, why the fields changes _do_ end up in the version changes), it just seems that the Font resources are not getting updated in the version.

I have also tried to mark the document's PDResource as `setNeedToBeUpdated(true)` but to no avail.

 

Is this behavior possible/allowed? Is it a bug or am I doing something wrong?

 

I have included an example file where the field named `incrementalChangeField` goes from `NotoSans-Regular` to `NotoSansCJK-Regular` during the incremental change, but the font resource does not get added.

Thanks for your time!",,,,,,,,,,,,,,,,"01/Apr/23 00:40;newhouse-anvil;image-2023-03-31-17-40-48-710.png;https://issues.apache.org/jira/secure/attachment/13056962/image-2023-03-31-17-40-48-710.png","29/Mar/23 21:22;newhouse-anvil;update-after-signature-includes-font-change.pdf;https://issues.apache.org/jira/secure/attachment/13056901/update-after-signature-includes-font-change.pdf","01/Apr/23 00:44;newhouse-anvil;update-after-signature-that-changes-font-two.pdf;https://issues.apache.org/jira/secure/attachment/13056963/update-after-signature-that-changes-font-two.pdf",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 21 14:55:23 UTC 2023,,,,,,,,,,"0|z1gyfk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Mar/23 23:17;newhouse-anvil;Related-ish: a similar-ish thing happens when I add a new field to the document after the first signing. In this case, I can see some bits and pieces of the new field in the version change, but something about it is missing and it won't render the new field in Preview, etc.;;;","30/Mar/23 16:36;mkl;{quote}I have included an example file where the field named `incrementalChangeField` goes from `NotoSans-Regular` to `NotoSansCJK-Regular` during the incremental change, but the font resource does not get added.{quote}

Indeed, the font resources of that field do not change. Most likely you forgot a {{setNeedToBeUpdated}} somewhere. You say you _have also tried to mark the document's PDResource as `setNeedToBeUpdated(true)` but to no avail._ It does not suffice to mark the overall *Resources* dictionary as changed, you also have to mark the dictionaries therein, in particular the value of *Font*.

{quote}Related-ish: a similar-ish thing happens when I add a new field to the document after the first signing. In this case, I can see some bits and pieces of the new field in the version change, but something about it is missing and it won't render the new field in Preview, etc.{quote}

Most likely you here also forgot to mark some objects as changed.;;;","01/Apr/23 00:43;newhouse-anvil;[~mkl] thank you for your help!

OK, so I believe I just got the `Font` to be added to the resources in the change - a very promising bit of progress - but it looks like the `AP` value of the changed field/widget is not updating to reference the new font or something? I've attached the PDF again so hopefully you can make sense of it?  Perhaps I need to update the widgets more completely or something?

 

Again, this is a field that was already there where I want to change the field text and the field font.

 

And, again, thank you for your help!

 

!image-2023-03-31-17-40-48-710.png!;;;","02/Apr/23 11:15;mkl;{quote}but it looks like the `AP` value of the changed field/widget is not updating to reference the new font or something? I've attached the PDF again so hopefully you can make sense of it?  Perhaps I need to update the widgets more completely or something?{quote}
Unfortunately you don't show your pivotal code, so I don't know what it does or not does, and in particular not what is needed additionally. Thus, I can merely guess.

Your first question in the quote appears to indicate that your code updates some font objects and references (*DA*, *DR*) and you expect the existing appearance stream to automatically use those new values. *DA* and *DR* are there for creating a new appearance stream whenever the underlying field value changes. Do you probably first change the value of the field and only thereafter default appearance and default resources?;;;","06/Apr/23 18:57;newhouse-anvil;Been working away over here with the help you've given...thank you so much! I am still having additional problems, so I'll be back here to post another comment once I've gathered my thoughts a bit more [~mkl] ;;;","10/Apr/23 17:46;newhouse-anvil;OK so I've managed to get things working, but in the name of clarity and optimization, I would love some more information and help if you could provide it. [~mkl] 

 

Again, the general use-case and question(s) are: how do we optimally, correctly, and minimally handle the addition or changing of (1) Fonts and Font-subsets in the AcroForm, (2) the value and possibly Font of existing Fields in the AcroForm, or (3) both...in an _*incremental save*_ situation?

 

Goals are: keep file size to a minimum, do not invalidate signatures, proper rendering in common viewers, no errors or warnings from PDFDebugger as well as Acrobat Pro's Pre-Flight Font check (etc).

 

Here's a gist I created that shows an oversimplified bit of code that we're using currently:

[https://gist.github.com/newhouse/20982eb2487faffdc8574b41b20b186c]

 

The `handleAddOrUpdateFont` method will be called anytime a new Font is added to the form by our code, or when we think that an existing Font's subset has been expanded upon. (I would also appreciate any guidance on how to re-use an existing subset, or easily know what characters are in an already-embedded subset, but may not actually be present in any Field value).

 

The `handleFieldUpdated` method will be called whenever the value or Font of a field is changed (or set), and will be called on every Field that uses a previously existing Font that was updated by the `handleAddOrUpdateFont` method above. Again, I'm not sure what things I'm missing doing, and what things may be overkill. Or if I only need to make certain calls when I change the `value` vs the `font`, or the `value` and the `font`.

I suspect in my code I'm either doing too much, or not enough, in either all or some cases.

 

As always, thank you very much for your help!;;;","16/Apr/23 13:18;mkl;I think you overestimate what {{setNeedToBeUpdated}} does.

In your code there is the assumption that that method updates the _contents_ of the object in question to match changes in related properties. In particular you seem to assume that the method updates an appearance to use updated default appearance strings and updated default resources.

This is not the case. {{setNeedToBeUpdated}} merely marks the object to be included in an incremental update if the document is saved incrementally. But the object will be included with the contents it has at the time of saving. So if you don't update the contents of the appearance stream you marked, the appearance stream will be stored with the old contents. Thus, you will not see any differences in the displayed PDF.

Furthermore, I'm not sure how exactly new font subsets are actually created. It's automatically done for fonts used on pages, but for fonts used only elsewhere you may have to do some extra housekeeping...

Essentially the method is a bit mis-named, it probably should have been something like {{setNeedToBeStored}}.;;;","20/Apr/23 18:57;newhouse-anvil;Perhaps I should have stated this, but the code in the gist is not comprehensive and does not show the creation of new (or updating of existing) fields. There is other code for that, and we also call `refreshAppearances()` at the end of all the creation and updates.

 

I guess to re-frame the reason I included the code, it would be: ""To be evaluated solely for its sufficiency around marking the necessary things with `setNeedtoBeUpdate(true)` when we (1) add or update a Font subset or (2) add or update a field in the form. The code to actually update the Font and Fields is separate.""

 

Given that re-statement, do you think I'm missing anything when it comes to marking things during a `saveIncremental` scenario?;;;","21/Apr/23 14:55;mkl;{quote}Given that re-statement, do you think I'm missing anything when it comes to marking things during a `saveIncremental` scenario?{quote}

Looking at your code I see that you use {{PDAcroForm.getFields}} to iterate over the fields. This only retrieves the root fields, for general use you may want to walk the {{PDAcroForm.getFieldTree}} instead. Don't forget to mark intermediary fields.

When iterating over the widgets of a field you forget to mark the *AP* and the *N* values.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Long Render Time and Freezing when Printing Document,PDFBOX-5570,13526973,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,vmerkel,vmerkel,03/Mar/23 11:03,07/Mar/23 03:04,07/May/23 20:06,,2.0.24,2.0.27,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"Opening the attached PDF document in the PDFBox PDF Debugger can take up to 3 seconds on average to render the page. However, attempting to print the PDF document in the PDF Debugger using the ""Microsoft Print to PDF"" printer will cause the entire application to freeze and become unresponsive to mouse inputs.

During the freeze, a thread dump was generated, and it was observed that the AWT-EventQueue-0 seems to be stuck at a fillPath procedure. The full stacktrace is provided below:
 
{noformat}
""AWT-EventQueue-0"" #22 prio=6 os_prio=0 cpu=17875.00ms elapsed=80.86s tid=0x000002e137734000 nid=0x51f4 runnable  [0x000000e85cbf8000]
   java.lang.Thread.State: RUNNABLE
        at org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute(InstructionSequence.java:83)
        at org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute(InstructionSequence.java:108)
        at org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval(PDFunctionType4.java:78)
        at org.apache.pdfbox.pdmodel.graphics.shading.PDShading.evalFunction(PDShading.java:410)
        at org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext.getRaster(Type1ShadingContext.java:134)
        at sun.java2d.pipe.AlphaPaintPipe.renderPathTile(java.desktop@11.0.14.10.1/AlphaPaintPipe.java:124)
        at sun.java2d.pipe.SpanShapeRenderer$Composite.renderBox(java.desktop@11.0.14.10.1/SpanShapeRenderer.java:60)
        at sun.java2d.pipe.SpanShapeRenderer.spanClipLoop(java.desktop@11.0.14.10.1/SpanShapeRenderer.java:213)
        at sun.java2d.pipe.SpanShapeRenderer.renderSpans(java.desktop@11.0.14.10.1/SpanShapeRenderer.java:196)
        at sun.java2d.pipe.SpanShapeRenderer.fill(java.desktop@11.0.14.10.1/SpanShapeRenderer.java:116)
        at sun.java2d.pipe.ValidatePipe.fill(java.desktop@11.0.14.10.1/ValidatePipe.java:160)
        at sun.java2d.SunGraphics2D.fill(java.desktop@11.0.14.10.1/SunGraphics2D.java:2533)
        at org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:910)
        at org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule.process(FillEvenOddRule.java:37)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:514)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processTransparencyGroup(PDFStreamEngine.java:244)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processSoftMask(PDFStreamEngine.java:202)
        at org.apache.pdfbox.rendering.PageDrawer.access$20(PageDrawer.java:1)
        at org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.<init>(PageDrawer.java:1805)
        at org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.<init>(PageDrawer.java:1668)
        at org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint(PageDrawer.java:658)
        at org.apache.pdfbox.rendering.PageDrawer.getNonStrokingPaint(PageDrawer.java:745)
        at org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:878)
        at org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule.process(FillEvenOddRule.java:37)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:514)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processTilingPattern(PDFStreamEngine.java:413)
        at org.apache.pdfbox.rendering.PageDrawer.drawTilingPattern(PageDrawer.java:317)
        at org.apache.pdfbox.rendering.TilingPaint.getImage(TilingPaint.java:177)
        at org.apache.pdfbox.rendering.TilingPaint.<init>(TilingPaint.java:103)
        at org.apache.pdfbox.rendering.TilingPaintFactory.create(TilingPaintFactory.java:60)
        at org.apache.pdfbox.rendering.PageDrawer.getPaint(PageDrawer.java:364)
        at org.apache.pdfbox.rendering.PageDrawer.getNonStrokingPaint(PageDrawer.java:746)
        at org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:878)
        at org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule.process(FillNonZeroRule.java:37)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:514)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:492)
        at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:155)
        at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:277)
        at org.apache.pdfbox.rendering.PDFRenderer.renderPageToGraphics(PDFRenderer.java:458)
        at org.apache.pdfbox.printing.PDFPrintable.print(PDFPrintable.java:264)
        at sun.print.RasterPrinterJob.printPage(java.desktop@11.0.14.10.1/RasterPrinterJob.java:2275)
        at sun.print.RasterPrinterJob.print(java.desktop@11.0.14.10.1/RasterPrinterJob.java:1654)
        at org.apache.pdfbox.debugger.PDFDebugger.printMenuItemActionPerformed(PDFDebugger.java:1182)
        at org.apache.pdfbox.debugger.PDFDebugger.access$8(PDFDebugger.java:1142)
        at org.apache.pdfbox.debugger.PDFDebugger$7.actionPerformed(PDFDebugger.java:433)
        at javax.swing.AbstractButton.fireActionPerformed(java.desktop@11.0.14.10.1/AbstractButton.java:1967)
        at javax.swing.AbstractButton$Handler.actionPerformed(java.desktop@11.0.14.10.1/AbstractButton.java:2308)
        at javax.swing.DefaultButtonModel.fireActionPerformed(java.desktop@11.0.14.10.1/DefaultButtonModel.java:405)
        at javax.swing.DefaultButtonModel.setPressed(java.desktop@11.0.14.10.1/DefaultButtonModel.java:262)
        at javax.swing.AbstractButton.doClick(java.desktop@11.0.14.10.1/AbstractButton.java:369)
        at javax.swing.plaf.basic.BasicMenuItemUI.doClick(java.desktop@11.0.14.10.1/BasicMenuItemUI.java:1020)
        at javax.swing.plaf.basic.BasicMenuItemUI$Handler.mouseReleased(java.desktop@11.0.14.10.1/BasicMenuItemUI.java:1064)
        at java.awt.Component.processMouseEvent(java.desktop@11.0.14.10.1/Component.java:6635)
        at javax.swing.JComponent.processMouseEvent(java.desktop@11.0.14.10.1/JComponent.java:3342)
        at java.awt.Component.processEvent(java.desktop@11.0.14.10.1/Component.java:6400)
        at java.awt.Container.processEvent(java.desktop@11.0.14.10.1/Container.java:2263)
        at java.awt.Component.dispatchEventImpl(java.desktop@11.0.14.10.1/Component.java:5011)
        at java.awt.Container.dispatchEventImpl(java.desktop@11.0.14.10.1/Container.java:2321)
        at java.awt.Component.dispatchEvent(java.desktop@11.0.14.10.1/Component.java:4843)
        at java.awt.LightweightDispatcher.retargetMouseEvent(java.desktop@11.0.14.10.1/Container.java:4918)
        at java.awt.LightweightDispatcher.processMouseEvent(java.desktop@11.0.14.10.1/Container.java:4547)
        at java.awt.LightweightDispatcher.dispatchEvent(java.desktop@11.0.14.10.1/Container.java:4488)
        at java.awt.Container.dispatchEventImpl(java.desktop@11.0.14.10.1/Container.java:2307)
        at java.awt.Window.dispatchEventImpl(java.desktop@11.0.14.10.1/Window.java:2772)
        at java.awt.Component.dispatchEvent(java.desktop@11.0.14.10.1/Component.java:4843)
        at java.awt.EventQueue.dispatchEventImpl(java.desktop@11.0.14.10.1/EventQueue.java:772)
        at java.awt.EventQueue$4.run(java.desktop@11.0.14.10.1/EventQueue.java:721)
        at java.awt.EventQueue$4.run(java.desktop@11.0.14.10.1/EventQueue.java:715)
        at java.security.AccessController.doPrivileged(java.base@11.0.14.10.1/Native Method)
        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.base@11.0.14.10.1/ProtectionDomain.java:85)
        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.base@11.0.14.10.1/ProtectionDomain.java:95)
        at java.awt.EventQueue$5.run(java.desktop@11.0.14.10.1/EventQueue.java:745)
        at java.awt.EventQueue$5.run(java.desktop@11.0.14.10.1/EventQueue.java:743)
        at java.security.AccessController.doPrivileged(java.base@11.0.14.10.1/Native Method)
        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.base@11.0.14.10.1/ProtectionDomain.java:85)
        at java.awt.EventQueue.dispatchEvent(java.desktop@11.0.14.10.1/EventQueue.java:742)
        at java.awt.EventDispatchThread.pumpOneEventForFilters(java.desktop@11.0.14.10.1/EventDispatchThread.java:203)
        at java.awt.EventDispatchThread.pumpEventsForFilter(java.desktop@11.0.14.10.1/EventDispatchThread.java:124)
        at java.awt.EventDispatchThread.pumpEventsForHierarchy(java.desktop@11.0.14.10.1/EventDispatchThread.java:113)
        at java.awt.EventDispatchThread.pumpEvents(java.desktop@11.0.14.10.1/EventDispatchThread.java:109)
        at java.awt.EventDispatchThread.pumpEvents(java.desktop@11.0.14.10.1/EventDispatchThread.java:101)
        at java.awt.EventDispatchThread.run(java.desktop@11.0.14.10.1/EventDispatchThread.java:90){noformat}


Acrobat Reader renders the document much faster and printing with the same printer is done quickly.

It was discovered that commenting out the following lines in the function fillPath(int windingRule) in org.apache.pdfbox.rendering.PageDrawer makes printing possible again. However, this leads to the disadvantage that some elements will not be drawn (of course):
{code:java}
        Shape shape;
        if (!(graphics.getPaint() instanceof Color))
        {
            // apply clip to path to avoid oversized device bounds in shading contexts (PDFBOX-2901)
            Area area = new Area(linePath);
            area.intersect(new Area(graphics.getClip()));
            intersectShadingBBox(getGraphicsState().getNonStrokingColor(), area);
            shape = area;
        }
        else
        {
            shape = linePath;
        }
// when commenting this out, print works again
//        if (isContentRendered())
//        {
//            graphics.fill(shape);
//        } {code}
Does anyone know of a permanent solution to this problem?
 ","Windows 10
Amazon Corretto Windows x64 JDK 11",,,,,,,,,,,,,,,"03/Mar/23 11:02;vmerkel;non-printable.pdf;https://issues.apache.org/jira/secure/attachment/13056007/non-printable.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Tue Mar 07 03:04:33 UTC 2023,,,,,,,,,,"0|z1gbio:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Mar/23 11:05;tilman;692 seconds to render at 1000%, which would be 720dpi. Something very inefficient is happening related to the type 4 function used by a type 1 (functional) shading that goes over almost the entire page.;;;","07/Mar/23 03:04;tilman;I looked at the input and output values. The output values are always the same, the input values are not. Maybe Adobe looks at the PostScript code of the function and realizes it's all useless?!

PDF.js is also fast, but they [don't support|https://github.com/mozilla/pdf.js/issues/5046] type 1 shading.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't open PDF with PDFBox: java.awt.color.CMMException: LCMS error 13: Couldn't link the profiles,PDFBOX-5563,13522794,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,vmerkel,vmerkel,02/Feb/23 13:57,13/Apr/23 14:54,07/May/23 20:06,03/Feb/23 04:13,2.0.24,2.0.27,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.28,3.0.0 PDFBox,,Rendering,,,,0,,,,"If I try to open the attached PDF document face the following error message and the document will not be displayed:

 
{noformat}
java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.awt.color.CMMException: LCMS error 13: Couldn't link the profiles
    org.apache.pdfbox.debugger.pagepane.PagePane$RenderWorker.done(PagePane.java:481)
    java.desktop/sun.swing.AccumulativeRunnable.run(AccumulativeRunnable.java:112)
    java.base/java.security.AccessController.doPrivileged(Native Method)
    java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
Caused by: java.util.concurrent.ExecutionException: java.awt.color.CMMException: LCMS error 13: Couldn't link the profiles
    org.apache.pdfbox.debugger.pagepane.PagePane$RenderWorker.done(PagePane.java:461)
    java.desktop/sun.swing.AccumulativeRunnable.run(AccumulativeRunnable.java:112)
    java.base/java.security.AccessController.doPrivileged(Native Method)
    java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
Caused by: java.awt.color.CMMException: LCMS error 13: Couldn't link the profiles
    java.desktop/sun.java2d.cmm.lcms.LCMS.createNativeTransform(Native Method)
    java.desktop/sun.java2d.cmm.lcms.LCMS.createTransform(LCMS.java:156)
    java.desktop/sun.java2d.cmm.lcms.LCMSTransform.doTransform(LCMSTransform.java:150)
    java.desktop/sun.java2d.cmm.lcms.LCMSTransform.colorConvert(LCMSTransform.java:624)
    org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.toRGB(PDICCBased.java:351)
    org.apache.pdfbox.rendering.PageDrawer.getPaint(PageDrawer.java:350)
    org.apache.pdfbox.rendering.PageDrawer.getNonStrokingPaint(PageDrawer.java:746)
    org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:878)
    org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule.process(FillNonZeroRule.java:37)
    org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933)
    org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:514)
    org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:492)
    org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:155)
    org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:277)
    org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:347)
    org.apache.pdfbox.debugger.pagepane.PagePane$RenderWorker.doInBackground(PagePane.java:449)
    org.apache.pdfbox.debugger.pagepane.PagePane$RenderWorker.doInBackground(PagePane.java:1)
    java.base/java.lang.Thread.run(Thread.java:829)
{noformat}
The same document can be successfully opened with Adobe's Acrobat Reader.

If I add a try catch statement in the affected toRGB function of org.apache.pdfbox.pdmodel.graphics.color.PDICCBased and return the value from the input I'm able to display display the document but the upper and lower bar is yellow instead blue (like in Acrobat Reader).
{code:java}
@Override
    public float[] toRGB(float[] value) throws IOException
    {
        if (isRGB)
        {
            return value;
        }
        if (awtColorSpace != null)
        {
            // PDFBOX-2142: clamp bad values
            // WARNING: toRGB is very slow when used with LUT-based ICC profiles
            try {
                return awtColorSpace.toRGB(clampColors(awtColorSpace, value));
            } catch (Exception ex) {
                return value;
            }
        }
        else
        {
            return alternateColorSpace.toRGB(value);
        }
    } {code}
Unfortunately I'm not familiar with color profiles and color spaces.

Any suggest how to overcome this problem?

Thanks in advance.","Java: Amazon corretto windows x64 jdk
OS: Windows 10",,,,,,,,,,,,,,,"03/Feb/23 04:20;tilman;PDFBOX-5563.icc;https://issues.apache.org/jira/secure/attachment/13055078/PDFBOX-5563.icc","02/Feb/23 13:46;vmerkel;problem-1.pdf;https://issues.apache.org/jira/secure/attachment/13055058/problem-1.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Fri Feb 03 07:51:41 UTC 2023,,,,,,,,,,"0|z1flrs:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Feb/23 16:29;tilman;Yet another troublesome ICC profile java bug. We'll have to add something to the ""do things that trigger a ProfileDataException"" section to fall back to the alternate colorspace.;;;","02/Feb/23 18:47;jira-bot;Commit 1907225 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1907225 ]

PDFBOX-5563: refactor and trigger a ProfileDataException;;;","02/Feb/23 18:47;jira-bot;Commit 1907226 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1907226 ]

PDFBOX-5563: refactor and trigger a ProfileDataException;;;","02/Feb/23 18:48;tilman;[~itai] This might undo some of your optimizations from PDFBOX-4392;;;","03/Feb/23 04:13;tilman;[~vmerkel] thanks for reporting it. A snapshot is available here
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.28-SNAPSHOT/;;;","03/Feb/23 04:34;tilman;Submitted to Oracle, [JDK-8301837|https://bugs.openjdk.org/browse/JDK-8301837]

{code}
public class PDFBOX5563CMM
{
    public static void main(String[] args) throws IOException
    {
        System.out.println(System.getProperty(""java.version""));
        InputStream is = new URL(""https://issues.apache.org/jira/secure/attachment/13055078/PDFBOX-5563.icc"").openStream();
        ICC_Profile profile = ICC_Profile.getInstance(is);
        ICC_ColorSpace cs = new ICC_ColorSpace(profile);
        cs.toRGB(new float[cs.getNumComponents()]);
    }
}
{code}
;;;","03/Feb/23 07:51;vmerkel;My pleasure. Thank you for fixing the problem so quickly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The font name displayed in the exported PDF is incorrect,PDFBOX-5556,13516261,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,berylbai,berylbai,03/Jan/23 05:48,21/Jan/23 13:01,07/May/23 20:06,21/Jan/23 13:01,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"Load the attach ttf font and save this document
{code:java}
PDDocument doc = new PDDocument();
PDPage page = new PDPage();
doc.addPage(page);
PDPageContentStream stream = new PDPageContentStream(doc, page);
TrueTypeFont ttFont = new TTFParser().parse(""resources//fonts//Swiss 721 Bold BT.ttf"");
PDFont font = PDType0Font.load(doc, ttFont, true);

stream.setFont(font, 14);
stream.beginText();
stream.newLineAtOffset(100, 700);
stream.setNonStrokingColor(Color.BLACK);
String text = ""Lazy dog"";
stream.showText(text);
stream.endText();
stream.stroke();
stream.close();

doc.save(""test.pdf"");
doc.close(); {code}
Open the exported document with Adobe Acrobat Pro, the font name is incorrect. It should be ""Swis721 BT"", but it is ""Swiss 72 1 BT"". !fontName.png!",,,,,,,,,,,,,,,,"03/Jan/23 05:47;berylbai;Swiss 721 Bold BT.ttf;https://issues.apache.org/jira/secure/attachment/13054265/Swiss+721+Bold+BT.ttf","03/Jan/23 05:49;berylbai;fontName.png;https://issues.apache.org/jira/secure/attachment/13054266/fontName.png","03/Jan/23 07:11;tilman;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13054273/screenshot-1.png","03/Jan/23 07:13;tilman;screenshot-2.png;https://issues.apache.org/jira/secure/attachment/13054274/screenshot-2.png","03/Jan/23 05:48;berylbai;test.pdf;https://issues.apache.org/jira/secure/attachment/13054264/test.pdf",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jan 03 10:24:21 UTC 2023,,,,,,,,,,"0|z1ehqw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Jan/23 07:11;tilman;Here's what Adobe Reader shows: 
 !screenshot-1.png! ;;;","03/Jan/23 07:13;tilman;And here is what PDFDebugger shows:
 !screenshot-2.png! ;;;","03/Jan/23 10:24;mkl;The embedded subset font does not include a *name* table.
Maybe the Acrobat Edit tool without that table guesses a name but can be persuaded to use a specific name by adding that table with the desired name entries.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong Text Extraction - Unwanted Extra Spaces in the middle of words,PDFBOX-5529,13486915,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,cmaya,cmaya,18/Oct/22 21:27,20/Oct/22 16:47,07/May/23 20:06,,2.0.0,2.0.1,2.0.10,2.0.11,2.0.12,2.0.13,2.0.14,2.0.15,2.0.16,2.0.17,2.0.18,2.0.19,2.0.2,2.0.20,2.0.21,2.0.22,2.0.23,2.0.24,2.0.25,2.0.26,2.0.27,2.0.3,2.0.4,2.0.5,2.0.6,2.0.7,2.0.8,2.0.9,,,,Text extraction,,,,0,,,,"*Overview:* 
We are using PDFBOX as a third party API to extract text from financial PDF documents.

We have been using PDFBox since a long time back, and we have detected a problem related to a bad text extraction on PDFs from a Customer. 

Since we worked with Customer Data we cannot shared the PDF besides that are signed and we cannot even edit them.

*Description of the problem:*

By opening the PDF in Adobe Reader we can see several cases like the following screenshot:
!image-2022-10-18-15-53-06-512.png|width=221,height=211!

Visually it appears to have spaces between words, but if we copy the text from Adobe Reader and paste it into a text editor there is no extra spaces. 

The following is the output that PDFBOX generates at the moment of doing text extraction:
{code:java}
Da te
In v oice number
Ou r r eference
You r reference
Con tact person{code}
(!) *Important note: this behavior is present in all the versions of PDFBox.*

*Analysis:*

By downloading the PDFBOX source code 2.0.27 (this was checked as well in 2.0.26, 2.0.25 and 2.0.24) and testing/debugging we detected that the method _*writePage()* inside *PDFTextStripper.java*_ declared a list of objects:
{code:java}
List<LineItem> line = new ArrayList<LineItem>();{code}
Which subsequently the code add elements into the list:
{code:java}
line.add(LineItem.getWordSeparator()); 
.
.
.
line.add(new LineItem(position));{code}
 

And at some point it passes the list as a parameter into the following statement:
{code:java}
writeLine(normalize(line));{code}
(!) *The important about this list called ""line"" is that somehow the ""LineItem"" objects are having NULL values inserted into it, and this values are at some point interpreted as ""blank spaces"" causing the behavior described above.*

Here is an screenshot of how it is showed in the debugger:

!image-2022-10-18-16-23-00-123.png|width=621,height=195!

!image-2022-10-18-16-26-15-001.png|width=620,height=431!

 

We tried to look for a method that manipulates this list and that we can override, but all of these methods that modified or access the list are protected.

 

(!) *This is an example of how it displayed in the PDF Debugger:*
{code:java}
    q
      94.525 545.32 141 11.2 re
      W*
      n
      BT
        /F3 8.8 Tf
        1 0 0 1 99.325 547.72 Tm
        0 g
        0 G
        [ (D) 22 (a) -131 (t) -109 (e) ] TJ
      ET
    Q 

    q
      94.525 530.9 141 11.225 re
      W*
      n
      BT
        /F3 8.8 Tf
        1 0 0 1 99.325 533.3 Tm
        0 G
        [ (I) 26 (n) -135 (v) -229 (o) -5 (i) 20 (ce) -62 ( ) 59 (n) -44 (u) 30 (m) -27 (b) -75 (e) 28 (r) ] TJ
      ET
    Q

    q
      94.525 516.5 141 11.2 re
      W*
      n
      BT
        /F3 8.8 Tf
        1 0 0 1 99.325 519.7 Tm
        0 G
        [ (O) -73 (u) -151 (r) -44 ( ) 59 (r) -134 (e) 28 (f) -38 (e) 28 (r) -44 (e) 28 (n) -44 (ce) ] TJ
      ET
    Q{code}
 

 ",,,,,,,,,,,,,,,,"18/Oct/22 20:53;cmaya;image-2022-10-18-15-53-06-512.png;https://issues.apache.org/jira/secure/attachment/13051104/image-2022-10-18-15-53-06-512.png","18/Oct/22 21:23;cmaya;image-2022-10-18-16-23-00-123.png;https://issues.apache.org/jira/secure/attachment/13051103/image-2022-10-18-16-23-00-123.png","18/Oct/22 21:26;cmaya;image-2022-10-18-16-26-15-001.png;https://issues.apache.org/jira/secure/attachment/13051102/image-2022-10-18-16-26-15-001.png","19/Oct/22 21:48;cmaya;image-2022-10-19-16-48-36-198.png;https://issues.apache.org/jira/secure/attachment/13051213/image-2022-10-19-16-48-36-198.png",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 20 16:47:46 UTC 2022,,,,,,,,,,"0|z19h2w:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Oct/22 10:42;lehmi;Most likely those empty LineItems are WordSeparator-items. Those special items don't have a text position. 

The more interesting question is, why does PDFBox insert a WordSeparator within a word. I guess the additional values within the {{TJ}} operator hit some threshold which triggers the insertion of the separator. But I'm afraid we can't answer that by staring at the code. We'll need some sort of a sample pdf to debug that piece of code.


;;;","19/Oct/22 17:26;tilman;Maybe try some code change that you think solves the problem. Run the build tests and see the differences. If there are none, or if they are useful, please share them, I'll run them on my larger set.
(In most cases, changes have some drawback)
The diff files appear in pdfbox/target/test-output

However the screenshot of your PDF shows a terrible layout, so you get a terrible text extraction. I don't know why Adobe gets correct text. Maybe they use a dictionary approach.;;;","19/Oct/22 17:29;mkl;Looking at the screen shot it is clear why an extractor would add those spaces, after all you say yourself:
{quote}Visually it appears to have spaces between words,{quote}
And you only wonder why the spaces are there after observing
{quote}but if we copy the text from Adobe Reader and paste it into a text editor there is no extra spaces.{quote}
Please be aware that Adobe Acrobat also takes tagging information into account; if there are *ActualText* information, Acrobat uses them and not heuristics based on the appearance. PDFBox on the other hand does not use the tagging information in its text stripper.

Thus, please check whether your example file has such tags or not. The easiest option would be for you to share the file (or at least a page of it with that behavior).;;;","19/Oct/22 21:54;cmaya;Thanks for replying back!

After analyzing a little bit deeper in the code, I found out that indeed, the PDFTextStripper.java in the writePage method has a validation in which if a threshold is hit then we add an element into the ""line"" list. This if condition is to check it the current text position starts after a new word would be expected to start.
Below is an screenshot of this section of the code, I added a check just to see at which point the TextPosition from the LineItem is null, and seems that this NULL value is coming from the ""LineItem.getWordSeparator"".

*(!) This particular example showed below is from the label ""Date"" showed in description of this ticket.*

If I left the code with that particular condition avoiding the insertion of LineItems with a null TextPosition, the text is extracted correctly.

!image-2022-10-19-16-48-36-198.png|width=924,height=506!

I am trying to see if we have a similar document with the same behavior that we can edit in order to remove the customer sensitive data. The document we are testing at this moment is signed, and due to this I am unable to edit it and remove the sensitive data.;;;","19/Oct/22 22:05;cmaya;I looked for *ActualText* information, but I didn't find any tag like this in the PDF content.;;;","20/Oct/22 16:47;mkl;{quote}I looked for *ActualText* information, but I didn't find any tag like this in the PDF content.{quote}
Then please share the PDF for further analysis.
While you're right that in case of your document the text extraction result would improve by _not_ trying to identify gaps, in general one needs this gap detection.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
U+015F ('scedilla') is not available in this font Times-Roman encoding: WinAnsiEncoding,PDFBOX-5503,13480883,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Not A Bug,,atch,atch,09/Sep/22 14:15,10/Sep/22 02:24,07/May/23 20:06,10/Sep/22 02:24,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FontBox,Rendering,,,0,,,,"2022-09-09T09:26:06.494    ERROR    Idle pool thread    Error executing client request: U+015F (scedilla) is not available in this font Times-Roman encoding: WinAnsiEncoding
java.lang.IllegalArgumentException: U+015F ('scedilla') is not available in this font Times-Roman encoding: WinAnsiEncoding
    at org.apache.pdfbox.pdmodel.font.PDType1Font.encode(PDType1Font.java:427)
    at org.apache.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:333)
    at org.apache.pdfbox.pdmodel.font.PDFont.getStringWidth(PDFont.java:364)

 

I also tried to use all fonts available in PDType1Font, e.g. Helvetica, but I always get the same error (('scedilla') is not available in this font <font name> encoding: WinAnsiEncoding)

 

Possibly this is a similar ""issue"" as here: https://issues.apache.org/jira/browse/PDFBOX-5115?actionOrder=desc",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Sep 10 02:24:51 UTC 2022,,,,,,,,,,"0|z18g54:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Sep/22 18:15;tilman;https://stackoverflow.com/a/46352055/535646;;;","10/Sep/22 02:24;tilman;Closing this one, the ""ş"" isn't part of WinAnsiEncoding. Load a TrueType font like described in the link I posted yesterday.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't get the family font name of the specified font.,PDFBOX-5473,13470047,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Won't Do,,berylbai,berylbai,05/Jul/22 06:03,06/Jul/22 15:53,07/May/23 20:06,06/Jul/22 15:53,2.0.24,2.0.26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"Run the following code, you will see the family name of this font is null.
{code:java}
System.setProperty(""sun.java2d.cmm"", ""sun.java2d.cmm.kcms.KcmsServiceProvider"");  

PDDocument doc = new PDDocument();
PDPage page = new PDPage(PDRectangle.A4);
doc.addPage(page);
PDPageContentStream contentStream = new PDPageContentStream(doc, page);        TrueTypeFont ttFont = new TTFParser().parse(new File(""현대하모니 L.ttf""));
PDFont font = PDType0Font.load(doc, ttFont, true);        

String name = ttFont.getNaming().getFontFamily();

contentStream.beginText();
contentStream.newLineAtOffset(50, 800);
contentStream.setFont(font, 48);
contentStream.showText(""abc"");
contentStream.endText();       
contentStream.close();

doc.save(""pdfbox.pdf"");
doc.close();
System.out.println(name); {code}",,,,,,,,,,,,,,,,"06/Jul/22 03:54;tilman;image-2022-07-06-05-54-22-068.png;https://issues.apache.org/jira/secure/attachment/13046335/image-2022-07-06-05-54-22-068.png","05/Jul/22 06:03;berylbai;현대하모니 L.ttf;https://issues.apache.org/jira/secure/attachment/13046251/%ED%98%84%EB%8C%80%ED%95%98%EB%AA%A8%EB%8B%88+L.ttf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 06 15:53:41 UTC 2022,,,,,,,,,,"0|z16lps:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Jul/22 07:00;tilman;That's because this information isn't in the font in the unicode platformid, {-}which is the only one we consider{-}. We do support other platformIDs but only the 1033 languageID. Note the missing ""1"" nameID in the first series. The 2nd series has a ""1"" but it has a unusual language value. I tried to hard-code it -but got junk so that's a deeper problem- then we get the correct text (I was confused by my IDE).

!image-2022-07-06-05-54-22-068.png!;;;","06/Jul/22 15:52;tilman;IMHO this font table has been botched. I entered the Korean ""font family"" into google translate and it means ""Hyundai Harmony L"". Thus nothing surprising, or that would make no sense in english. They used ""harmony"" in other parts of the english table so I don't understand why they skipped it. Maybe try to find a more recent version of that font.

You can get the font family name with this code:
{code:java}
String name = ttFont.getName(NameRecord.NAME_FONT_FAMILY_NAME, NameRecord.PLATFORM_WINDOWS, NameRecord.ENCODING_WINDOWS_UNICODE_BMP, 1042)
{code}
You could also implement a more general ""desperate"" fallback if the name is null:
{code:java}
for (NameRecord nr : ttf.getNaming().getNameRecords())
{
	if (nr.getNameId() == NameRecord.NAME_FONT_FAMILY_NAME)
	{
		name = nr.getString();
	}
}
{code};;;","06/Jul/22 15:53;tilman;Closing because IMHO the workaround is good enough as a solution for now. You can still comment or reopen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException when rendering image,PDFBOX-5468,13469257,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Critical,Duplicate,,FrankZzz,FrankZzz,29/Jun/22 23:21,08/Jul/22 06:36,07/May/23 20:06,08/Jul/22 06:36,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"Hi team, we hit ArrayIndexOutOfBoundsException when calling pdfRenderer.renderImage(). Could you help provide a solution or work around? Thank you so much!!

!ErrorLog.png|width=705,height=348!

 

!ApplicationCode.png|width=580,height=425!",Software service in production,,,,,,,,,PDFBOX-5339,,,,,,"29/Jun/22 23:20;FrankZzz;ApplicationCode.png;https://issues.apache.org/jira/secure/attachment/13045967/ApplicationCode.png","29/Jun/22 23:20;FrankZzz;ErrorLog.png;https://issues.apache.org/jira/secure/attachment/13045968/ErrorLog.png",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,9223372036854775807,,,,Fri Jul 08 06:36:57 UTC 2022,,,,,,,,,,"0|z16h7k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Jun/22 04:00;tilman;Please retry with the current version (2.0.26) and if it still happens, please share your file and post an updated stack trace. I believe this was fixed in PDFBOX-5339.;;;","08/Jul/22 06:36;tilman;Closing because of no reaction and because I believe this was fixed in PDFBOX-5339. You can still comment or reopen. Always test with the latest version before making a report.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError (PDColorSpace.java:224),PDFBOX-5467,13468622,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Duplicate,,John Petersam,John Petersam,27/Jun/22 14:20,27/Jun/22 17:08,07/May/23 20:06,27/Jun/22 17:08,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PDModel,,,,0,,,,"We received a document in our production system that throws a StackOverFlowError.  Looking at the code, it appears as though it may have been introduced with a fix for PDFBOX-4833.

Unfortunately, we do not generate the PDFs ourselves and our documents contain sensitive information so I am unable to provide the example.  I can confirm, however, that I was able to open in Acrobat Reader and that the page has one area of highlighted text and 3 links (one of which is an email).

 

*java.lang.StackOverflowError*
at org.apache.pdfbox.util.SmallMap.containsKey(SmallMap.java:113)
at org.apache.pdfbox.cos.COSDictionary.containsKey(COSDictionary:1459)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:224)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:227)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:227)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:227)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:227)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:227)
at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:227)",,,,,,,,,,PDFBOX-5315,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 27 15:59:10 UTC 2022,,,,,,,,,,"0|z16e74:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jun/22 15:02;msahyoun;Could you provide a screenshoot similar to the one in PDFBOX-4833 of the color space in question?;;;","27/Jun/22 15:02;tilman;Please retry with 2.0.26 and post the new stack trace if it still happens. I suspect this is a duplicate of PDFBOX-5315 which has been fixed.;;;","27/Jun/22 15:59;John Petersam;That worked perfectly.  You can close this issue.  I will upgrade our version.  Thanks so much for the quick resolution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Print to PDF printer results in large PDF + text content is not selectable anymore,PDFBOX-5466,13468603,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Not A Bug,,ksondermann,ksondermann,27/Jun/22 13:18,08/Jul/22 16:22,07/May/23 20:06,08/Jul/22 16:22,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Utilities,,,,0,,,,"When printing a PDF to Pdf Printer, the resulting PDF is much larger than the original (e.g. 140 KB original vs 955 KB printed with PDFBox to a PDF printer), furthermore the text content of the original can no longer be selected in a viewer (e.g. Acrrobat Reader), content seems to be rendered as image.

 

Is there a chance to solve this? 

 

The priting is called with the following code:

int dpi = 600; // tested various values here, also 0

PDDocument document = loadMyPdDocument();
PDFPageable pdfPageable = new PDFPageable(document, Orientation.AUTO, false, dpi);
PrinterJob.getPrinterJob().setPageable(pdfPageable);",,,,,,,,,,,,,PDFBOX-5093,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 08 16:22:59 UTC 2022,,,,,,,,,,"0|z16e2w:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jun/22 15:11;tilman;Yes we convert it into vector graphics or raster graphics for printing. 1.8.* used the java font API but this didn't work well enough so we do our own rendering. There is a JIRA issue where Alexandr Scherbatiy, (former oracle java developer) pointed to some code modification in PDFBox itself to revert it to the old behavior, but I can't find which issue.;;;","27/Jun/22 17:13;tilman;It's also here: https://bugs.openjdk.org/browse/JDK-8265761;;;","08/Jul/22 16:22;tilman;I found it, it's PDFBOX-5093 and his solution is
https://github.com/AlexanderScherbatiy/pdfbox/commit/b806d44f9514a7b5fededfa49c98ad2858b93a92

Closing because this isn't a bug, but I hope the links I added have helped you. You can still comment.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException (PDColor.java:66),PDFBOX-5453,13448801,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,John Petersam,John Petersam,07/Jun/22 13:35,29/Sep/22 17:57,07/May/23 20:06,07/Jun/22 19:06,2.0.24,2.0.26,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.27,3.0.0 PDFBox,,PDModel,,,,0,,,,"We are currently running PDFBox 2.0.24 & 2.0.26, but I see the code is identical in the trunk.

Certain PDFs are throwing the exception shown below in our production system.  In these cases,  rather than the array containing a list of COSNumbers, it actually contains a single item - another COSArray.

That COSArray then has an array of COSNumbers.  If I insert the following lines of code at line 62 to use the inner COSArray, the PDF renders properly.

{{            *if ((array.size() == 1) && (array.get(0) instanceof COSArray))*}}
{{                *array = (COSArray) array.get(0);*}}

 

Unfortunately, we do not generate the PDFs ourselves and our documents contain sensitive information so I am unable to provide an example.

 

*Exception:*

{{java.lang.ClassCastException: class org.apache.pdfbox.cos.COSArray cannot be cast to class org.apache.pdfbox.cos.COSNumber (org.apache.pdfbox.cos.COSArray and org.apache.pdfbox.cos.COSNumber are in unnamed module of loader 'app')}}
{{at org.apache.pdfbox.pdmodel.graphics.color.PDColor.(PDColor.java:66)}}
{{at org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler.extractNonStrokingColor(PDFreeTextAppearanceHandler.java:424)}}
{{at org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler.generateNormalAppearance(PDFreeTextAppearanceHandler.java:111)}}
{{at org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler.generateAppearanceStreams(PDFreeTextAppearanceHandler.java:75)}}
{{at org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.constructAppearances(PDAnnotationMarkup.java:897)}}
{{at org.apache.pdfbox.rendering.PageDrawer.showAnnotation(PageDrawer.java:1521)}}
{{at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:281)}}
{{at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:347)}}
{{at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:268)}}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 07 19:06:20 UTC 2022,,,,,,,,,,"0|z130ps:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jun/22 15:51;jira-bot;Commit 1901730 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1901730 ]

PDFBOX-5453: avoid ClassCastException;;;","07/Jun/22 15:51;jira-bot;Commit 1901731 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1901731 ]

PDFBOX-5453: avoid ClassCastException;;;","07/Jun/22 16:01;tilman;I don't want to support something that is clearly wrong, but a ClassCastException is also a no-no. I've fixed that, please try rendering your PDF again. The result is likely that some color will be black.

Snapshot build here:
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.27-SNAPSHOT/;;;","07/Jun/22 16:34;John Petersam;Hi Tilman,
Thanks for making quick work of this.  I can confirm that it is resolved.

Thanks again!;;;","07/Jun/22 19:06;tilman;Thanks for the feedback!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blurry PDF results from Tif Conversion,PDFBOX-5438,13445712,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Critical,Not A Bug,,FrankZzz,FrankZzz,18/May/22 20:38,25/May/22 18:32,07/May/23 20:06,25/May/22 18:31,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"When converting a tif/tiff file to a pdf using PDImageXObject, we noticed that the final result could be completely or partially blurry sometimes. It happens on our server hosted on the cloud randomly but never happens on the server that runs on the local machine (laptop).

What could be the causes for this rendering issue, and could you help us with any suggestive actions we could take to investigate further and resolve the issue? We can't attach the result file because it contains our customer information.

Thanks for your understanding, and we appreciate your help and support!

 
{code:java}
// Tiff -> PDF conversion
final ImageReader reader = iterator.next();
reader.setInput(imageInputStream);
final int numPages = reader.getNumImages(true);

for (int i = 0; i < numPages; i++) {
    final BufferedImage bufferedImage = reader.read(i);
    final PDRectangle pageSize =
            new PDRectangle(bufferedImage.getWidth(), bufferedImage.getHeight());
    final PDPage page = new PDPage(pageSize);
    document.addPage(page);
    PDImageXObject pdImageXObject =
            LosslessFactory.createFromImage(document, bufferedImage);
    PDPageContentStream content = new PDPageContentStream(document, page);
    content.drawImage(
            pdImageXObject,
            0,
            0,
            page.getMediaBox().getWidth(),
            page.getMediaBox().getHeight());
    content.close();
}

ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
document.save(byteArrayOutputStream);
document.close();
return byteArrayOutputStream.toByteArray(); {code}",,,,,,,,,,,,,,,,"18/May/22 20:36;FrankZzz;PartialBlurryResult.png;https://issues.apache.org/jira/secure/attachment/13043872/PartialBlurryResult.png",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 25 18:32:13 UTC 2022,,,,,,,,,,"0|z12hq0:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/May/22 02:46;tilman;Where do the TIFF files come from? Fax? Scanning? With ""randomly"" does this mean it isn't reproducible for the same files or not?

From the code, this looks like you're processing TIFF files... can you save the intermediate files?

I'm also wondering why you're not using the {{CCITTFactory}} class, is it because these are color files? Or not G4 encoded?

Don't forget to update to 2.0.26, although I don't think your issue is affected.;;;","19/May/22 17:02;FrankZzz;Hi [~tilman], thanks for your reply.

TIFF files came from scanning, and ""randomly"" means it is reproducible for the same files. Sometimes the result is completely blurry and sometimes is partially blurry, as shown in the screenshot. 

We used the code block to get the byte[] of the converted pdf file, the input tiff file could be colored.;;;","19/May/22 17:14;tilman;Ok, then I suspect a problem with the source file, or a problem with the TIFF decoder in java. Try using the twelvemonkeys library: https://github.com/haraldk/TwelveMonkeys/;;;","19/May/22 18:55;FrankZzz;Hi [~tilman] could you help provide a java example for tiff -> pdf conversion using twelvemonkeys? Thanks

Also, since we never see this blurry issue on our local machine, could the blurry issue caused by the font library difference between local and remote systems?;;;","19/May/22 19:00;tilman;See the website, you only have to replace the JAI jar file(s) with the ones from twelvemonkeys.

The font library is not relevant, because no fonts are involved in what you describe.

If it always happens on one machine and not on the other, then find out the difference; maybe different java versions?;;;","25/May/22 18:30;FrankZzz;Thanks for all your suggestions, the issue is resolved by replacing javax imageIO with JAI.;;;","25/May/22 18:32;tilman;👍;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
COSStream has been closed Exception on saving PDF document,PDFBOX-5437,13445648,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,sanjivaninikam,sanjivaninikam,18/May/22 13:48,18/May/22 18:35,07/May/23 20:06,,2.0.24,2.0.25,2.0.26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PDModel,,,,0,,,,"Below exception occurs on saving created pdf,

java.io.IOException: COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed?
    at org.apache.pdfbox.cos.COSStream.checkClosed(COSStream.java:83) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.cos.COSStream.createRawInputStream(COSStream.java:133) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream(COSWriter.java:1268) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.cos.COSStream.accept(COSStream.java:416) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject(COSWriter.java:570) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects(COSWriter.java:496) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody(COSWriter.java:480) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument(COSWriter.java:1162) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.cos.COSDocument.accept(COSDocument.java:452) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1435) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1322) ~[pdfbox-2.0.26.jar:2.0.26]
    at org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:1377) ~[pdfbox-2.0.26.jar:2.0.26]",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 18 18:35:05 UTC 2022,,,,,,,,,,"0|z12hbs:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/May/22 14:26;mkl;This sounds like you work with two documents at a time, say A and B, add an object of document A to document B, close A (explicitly or via garbage collection), and then save B.

This cannot work.

You should _clone_ the object from A and only add the clone to B, or you should keep document A open and referenced until after you save B.

The PDFBox {{PDFCloneUtility}} gives you a hint how cloning is done.;;;","18/May/22 18:35;tilman;The clone class will no longer be available in 3.*, it was too ""dangerous"" 😂 (but it can be copied). In most cases changing the sequence of closing (like you suggested) solves these problems.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler logIfStrongEncryptionMissing,PDFBOX-5423,13441986,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Blocker,Not A Bug,,cooldudedatta@gmail.com,cooldudedatta@gmail.com,27/Apr/22 06:55,30/Apr/22 04:06,07/May/23 20:06,30/Apr/22 04:04,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Crypto,,,,0,,,,"Hi
I am using pdfbox-2.024.jar and java is 1.8. 
I am unable download the pdf.
Even after adding the unlimited jce policy it is not working. throwing same error. 
Kindly advice the fix for the same. I am blocked as I am unable to download the content.
Execption:-
WARNING: JCE unlimited strength jurisdiction policy files are not installed
2022-04-25 14:43:15 [p: default-threadpool; w: Idle] ERROR Trace:58 - Errors occurred on downloading care plan.
java.io.IOException: java.security.InvalidKeyException: Illegal key size
at org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.prepareEncryptionDictRev6(StandardSecurityHandler.java:474) ~[pdfbox-app-2.0.24.jar:2.0.24]
at org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.prepareDocumentForEncryption(StandardSecurityHandler.java:378) ~[pdfbox-app-2.0.24.jar:2.0.24]

 

Code:-


*int keyLength=256;*
*final* StandardProtectionPolicy policy = *new* StandardProtectionPolicy(""pdf"",

        """", accessPermission);

    policy.setEncryptionKeyLength(keyLength);

    policy.setPreferAES(*true*);

    policy.setPermissions(accessPermission);

    *return* policy;

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Apr 30 04:06:28 UTC 2022,,,,,,,,,,"0|z11uvk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Apr/22 17:05;tilman;What java version are you using? The current jdk8 is at 332 (amazon corretto). Strong encryption is included by default.;;;","28/Apr/22 04:48;cooldudedatta@gmail.com;Hi Tilman,

java version is ""1.8.0_112"";;;","28/Apr/22 06:32;tilman;Then update it! That version is many years old.;;;","28/Apr/22 07:24;cooldudedatta@gmail.com;Updating the java version would be little difficult as we need to assess the product impact in production. Any other option to fix this ?;;;","28/Apr/22 17:26;tilman;The main ""impact in production"" would be that you'd have less potential security risks, and thus lessen the probability to have your employer in the news like this
https://en.wikipedia.org/wiki/2017_Equifax_data_breach
From your previous issue your application seems to deal with personal records so security should be taken very seriously.

The other ""option"" is to install the JCE as described. Be sure to download the ""8"" JCE and not to use an older one.
https://www.oracle.com/de/java/technologies/javase-jce8-downloads.html;;;","29/Apr/22 03:09;cooldudedatta@gmail.com;Thanks for the information;;;","30/Apr/22 04:04;tilman;Closing as this isn't a PDFBox problem, it's a java installation problem. Good luck.;;;","30/Apr/22 04:06;tilman;Here's the link for amazon corretto
https://docs.aws.amazon.com/corretto/latest/corretto-8-ug/downloads-list.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No unicode mapping ArialBoldMt,PDFBOX-5422,13441564,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Not A Bug,,docmaillou,docmaillou,25/Apr/22 13:40,14/May/22 11:54,07/May/23 20:06,14/May/22 11:54,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"WARNING: No Unicode mapping for CID+7 (7) in font LGFECF+Arial-BoldMT
I have this error code.",Java blank.,,,,,,,,,,,,,,,"25/Apr/22 18:21;tilman;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13042905/screenshot-1.png","25/Apr/22 18:01;docmaillou;try_this.pdf;https://issues.apache.org/jira/secure/attachment/13042904/try_this.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat May 14 11:54:05 UTC 2022,,,,,,,,,,"0|z11sa8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Apr/22 17:22;tilman;This means just that, i.e. that the PDF doesn't have unicode mapping so text extraction won't work for that font. It is a warning, not an error. If you're only doing rendering, then all will be fine. Btw the current version is 2.0.26.;;;","25/Apr/22 17:50;docmaillou;The problem it that I want to text extracted to, after it's red, use It to retrieve some data inside the pdf.

(I want to use the email from the pdf file to find that person inside my database);;;","25/Apr/22 17:55;tilman;Please retry with 2.0.26 and if it doesn't work, attach the PDF.;;;","25/Apr/22 18:01;docmaillou;It still doesn't work, I can't attach the pdf itself(confidential), but Ill give a [^try_this.pdf];;;","25/Apr/22 18:21;tilman;The /ToUnicode stream is definitely missing and there's no way to guess it.
 !screenshot-1.png! ;;;","14/May/22 11:54;tilman;Closing because this isn't a bug, but a poorly created PDF. (Or maybe this was done to prevent scraping) You'll have to use OCR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fields visible on click if NeedAppearances = false,PDFBOX-5407,13437620,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,,,Jornwer,Jornwer,04/Apr/22 12:48,07/Apr/22 07:17,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AcroForm,Rendering,,,0,Appearance,,,"We have an issue that if we use NeedAppearances = false some of the input field values only visible on click.
This happens only on few viewers like in safari and MacOS default pdf viewer.
The problem is that we cannot use NeedAppearances = true and similar issues suggests to use it.

Pdfbox version - 2.0.24, JDK - 11.
Video shows an example of invisible values in MacOS default pdf viewer and visible values in chrome.",,,,,,,,,,,,,,,,"04/Apr/22 12:29;Jornwer;Main.java;https://issues.apache.org/jira/secure/attachment/13041977/Main.java","07/Apr/22 06:50;msahyoun;Safari.png;https://issues.apache.org/jira/secure/attachment/13042103/Safari.png","04/Apr/22 12:30;Jornwer;input.pdf;https://issues.apache.org/jira/secure/attachment/13041976/input.pdf","04/Apr/22 12:41;Jornwer;invisible_fields.mov;https://issues.apache.org/jira/secure/attachment/13041974/invisible_fields.mov","07/Apr/22 06:50;msahyoun;macOS-Preview.png;https://issues.apache.org/jira/secure/attachment/13042104/macOS-Preview.png","07/Apr/22 06:33;msahyoun;output-acrobat.pdf;https://issues.apache.org/jira/secure/attachment/13042099/output-acrobat.pdf","07/Apr/22 07:12;msahyoun;output-pdfbox-macOS-preview.png;https://issues.apache.org/jira/secure/attachment/13042106/output-pdfbox-macOS-preview.png","07/Apr/22 07:12;msahyoun;output-pdfbox-safari.png;https://issues.apache.org/jira/secure/attachment/13042107/output-pdfbox-safari.png","07/Apr/22 07:06;msahyoun;output-pdfbox.pdf;https://issues.apache.org/jira/secure/attachment/13042105/output-pdfbox.pdf","05/Apr/22 15:05;Jornwer;output.pdf;https://issues.apache.org/jira/secure/attachment/13042025/output.pdf",,10.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Apr 07 07:17:30 UTC 2022,,,,,,,,,,"0|z114i0:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Apr/22 15:09;msahyoun;This is intented. Setting {{needAppearances(false)}} will skip generating the visual content of the field (the appearance). So when opening the form the field will appear empty. What happens in this case is dependent on the viewer. Note that from PDF 2.0 on it's mandatory to generate an appearance.

Why can't you use {{needAppearances(true)}}?;;;","04/Apr/22 18:50;mkl;[~msahyoun],
{quote}
This is intented. Setting {{needAppearances(false)}} will skip generating the visual content of the field (the appearance).
{quote}

Hhmmm, the JavaDocs of {{PDAcroForm.setNeedAppearances(Boolean)}} claim that for {{false}} PDFBox *does generate the visual contents*:

{code:java}
    /**
     * Set the NeedAppearances value. If this is false, PDFBox will create appearances for all field
     * widget.
     * 
     * @param value the value for NeedAppearances
     */
    public void setNeedAppearances(Boolean value)
    {
        dictionary.setBoolean(COSName.NEED_APPEARANCES, value);
    }
{code}

And this makes sense, setting *NeedAppearances* to *false* in the *AcroForm* dictionary effectively tells the next PDF processor that all the widget appearances are there and up-to-date...;;;","04/Apr/22 18:59;tilman;I think it is a problem with these viewers. The output file has appearances.;;;","04/Apr/22 20:23;msahyoun;[~mkl]  my bad. Of course it works as documented and not as I wrongly claimed it would do. Thanks for pointing that out.;;;","06/Apr/22 17:19;tilman;I noticed that the new output file has almost empty appearances. But it has NeedAppearances true which means that the viewer should set the appearances.;;;","07/Apr/22 07:17;msahyoun;I've tested the appearance generation using the upcoming 2.0 version. Results look fine to me.

Generation was done using my Linux Workstation. Viewing was done using a macOS 12 desktop. I've also installed Roboto to the Linux workstation to be able to use that font.

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assumption of Identity Not Valid for Text Extraction,PDFBOX-5406,13436950,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,tighemf,tighemf,31/Mar/22 16:11,01/Apr/22 15:30,07/May/23 20:06,01/Apr/22 15:30,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"PDF BOX issue 1090 (closed years ago) makes an assumption that can lead to serious issues when the text extraction process returns garbage.

Version: PDFBOX v2.0.24

PDFBOX -> PDFont.java -> loadUnicodeCMap line 150

The code distinctly KNOWS that there is no UNICODE map.

It then makes a number of guesses - runs out of options, and explicitly makes an assumption that silently creates bad output.{{{}{}}}

{{    LOG.warn(""Invalid ToUnicode CMap in font "" + getName());}}

{{    ...}}

{{    LOG.warn(""Using predefined identity CMap instead"");}}

Every document that I've seen that produces that WARNING has bad text returned for the document when you use PDFBOX to do text extraction.

My logic is that the CMap is being ignored by the producer of that PDF, and assuming that it's possible to use the reverse causes silent failure on the part of PDFBOX.  The software package calling PDFBOX gets no warning that there is an issue.

I propose that this code throw an exception rather than a warning.

That way the extraction caller KNOWS that the text is wrong.

I have examples identical to those shown in the original issue.

Is there any more recent work on this issue?  E.g., parameters that could be set to say ""I want perfect extraction or no extraction""? ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 01 15:18:00 UTC 2022,,,,,,,,,,"0|z110rk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Apr/22 15:13;tilman;Yes sometimes we get trash. But there are also cases where Adobe Reader brings trash. Some files have a /ToUnicode map and still return trash.

We don't have a ""strict"" setting because there's no simple solution. Use a word dictionary to detect whether the output is trash, and then run OCR.;;;","01/Apr/22 15:18;Michael.Tighe;Thanks for your reply.  Your insight is valuable:  ""Some files have a /ToUnicode map and still return trash"".

I had already thought about the ""use a word dictionary"" solution and will use your input to push it through my product pipeline.

Thanks!

-- Michael


﻿On 4/1/22, 11:14 AM, ""Tilman Hausherr (Jira)"" <jira@apache.org> wrote:


        [ https://issues.apache.org/jira/browse/PDFBOX-5406?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=17515961#comment-17515961  ] 

    Tilman Hausherr commented on PDFBOX-5406:
    -----------------------------------------

    Yes sometimes we get trash. But there are also cases where Adobe Reader brings trash. Some files have a /ToUnicode map and still return trash.

    We don't have a ""strict"" setting because there's no simple solution. Use a word dictionary to detect whether the output is trash, and then run OCR.

    > Assumption of Identity Not Valid for Text Extraction
    > ----------------------------------------------------
    >
    >                 Key: PDFBOX-5406
    >                 URL: https://issues.apache.org/jira/browse/PDFBOX-5406 
    >             Project: PDFBox
    >          Issue Type: Bug
    >    Affects Versions: 2.0.24
    >            Reporter: Michael Tighe
    >            Priority: Major
    >
    > PDF BOX issue 1090 (closed years ago) makes an assumption that can lead to serious issues when the text extraction process returns garbage.
    > Version: PDFBOX v2.0.24
    > PDFBOX -> PDFont.java -> loadUnicodeCMap line 150
    > The code distinctly KNOWS that there is no UNICODE map.
    > It then makes a number of guesses - runs out of options, and explicitly makes an assumption that silently creates bad output.{{{}{}}}
    > {{    LOG.warn(""Invalid ToUnicode CMap in font "" + getName());}}
    > {{    ...}}
    > {{    LOG.warn(""Using predefined identity CMap instead"");}}
    > Every document that I've seen that produces that WARNING has bad text returned for the document when you use PDFBOX to do text extraction.
    > My logic is that the CMap is being ignored by the producer of that PDF, and assuming that it's possible to use the reverse causes silent failure on the part of PDFBOX.  The software package calling PDFBOX gets no warning that there is an issue.
    > I propose that this code throw an exception rather than a warning.
    > That way the extraction caller KNOWS that the text is wrong.
    > I have examples identical to those shown in the original issue.
    > Is there any more recent work on this issue?  E.g., parameters that could be set to say ""I want perfect extraction or no extraction""? 



    --
    This message was sent by Atlassian Jira
    (v8.20.1#820001)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDF color changed after converting to image using PDFRenderer,PDFBOX-5404,13436516,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,apsubramanian,apsubramanian,29/Mar/22 19:39,30/Mar/22 06:18,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"When attempting to convert pages from a PDF to images, I notice that the background color of the rendered image is different from the original PDF's background color.

I used PDFRenderer.renderImageWithDPI(...) to convert the page to an image.

The pdf used is attached with this ticket, along with a sample output image where the background color changed (purple in the original pdf, blue in the rendered image).

PDFBox version: 2.0.24

 ",,,,,,,,,,,,,,,,"29/Mar/22 19:43;apsubramanian;output_color_is_different.jpeg;https://issues.apache.org/jira/secure/attachment/13041738/output_color_is_different.jpeg","29/Mar/22 19:40;apsubramanian;rendering_color_changed.pdf;https://issues.apache.org/jira/secure/attachment/13041737/rendering_color_changed.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 30 06:18:45 UTC 2022,,,,,,,,,,"0|z10y3k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Mar/22 06:18;tilman;Maybe related to PDFBOX-4077 or PDFBOX-5065.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POCIDFontType2 (Wingdings) encode throws a NullPointerException,PDFBOX-5402,13435880,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,mbayerPK,mbayerPK,25/Mar/22 19:25,21/Apr/22 15:38,07/May/23 20:06,26/Mar/22 04:22,2.0.21,2.0.22,2.0.23,2.0.24,2.0.25,,,,,,,,,,,,,,,,,,,,,,,,2.0.26,3.0.0 PDFBox,,FontBox,,,,0,,,,"Problem;
 * It is known that wingdings based fonts do not support encoding from https://issues.apache.org/jira/browse/PDFBOX-4714. However it is unexpected that a call to encode on a wingdings POCIDFontType2 returns a NullPointerException.

Notes:
 * The issue seems to lie within PDFont POCIDFontType2
 * The POCIDFontType2 encode function is only known to throw IOException or UnsupportedOperationException(s)
 * Please see the attached test file with the font in question that causes the NullPointerException to be thrown
 * Stacktrace: 
{code:java}
java.lang.NullPointerException
	at org.apache.pdfbox.pdmodel.font.PDCIDFontType2.encode(PDCIDFontType2.java:359)
	at org.apache.pdfbox.pdmodel.font.PDType0Font.encode(PDType0Font.java:424)
	at org.apache.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:333)
{code}",PDFBox 2.0.25 used via a gradle plugin (has been tested as far back as PDFBox 2.0.21),,,,,,,,,,,,,,,"25/Mar/22 19:23;mbayerPK;Wingdings.pdf;https://issues.apache.org/jira/secure/attachment/13041623/Wingdings.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 28 16:04:38 UTC 2022,,,,,,,,,,"0|z10u7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Mar/22 19:30;tilman;Please post some minimal code. You mention ""encoding"", but reusing fonts from a PDF doesn't work because these subsets are not meant to do that.;;;","25/Mar/22 19:34;mbayerPK;will do, give me a bit to get a sample posted here;;;","25/Mar/22 21:39;mbayerPK;{code:none}
import org.apache.pdfbox.cos.COSName
import org.apache.pdfbox.pdmodel.PDDocument
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.assertDoesNotThrow
import java.io.IOException
import java.nio.file.Files
import java.nio.file.Paths
import java.util.HashSet
import kotlin.io.path.div

class WingdingsTest {
    @Test
    fun `test for wingdings`() {
        // Get Wingdings.pdf from current working directory
        val path = Paths.get("""").toAbsolutePath() / ""Wingdings.pdf""

        val testChar = '*'
        val testSet = HashSet<COSName>()

        val inMemoryPdf = PDDocument.load(Files.newInputStream(path).buffered(64 * 1024))

        assertDoesNotThrow {
            inMemoryPdf.use { document ->

                for (page in document.pages) {
                    val resources = page.resources
                    for (name in resources.fontNames) {
                        val font = resources.getFont(name)
                        try {
                            if (font.encode(testChar.toString()) != null) testSet.add(name)
                        } catch (expected: IOException) {
                            // handled
                        } catch (expected: IllegalArgumentException) {
                            // handled
                        } catch (expected: UnsupportedOperationException) {
                            // handled
                        }
                        // NPE not handled
                    }
                }
            }
        }
    }
}
{code}

the sample is a junit test written in kotlin;;;","26/Mar/22 04:18;jira-bot;Commit 1899202 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1899202 ]

PDFBOX-5402: avoid NPE;;;","26/Mar/22 04:18;jira-bot;Commit 1899203 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1899203 ]

PDFBOX-5402: avoid NPE;;;","26/Mar/22 04:22;tilman;Thanks for the report!;;;","28/Mar/22 16:04;mbayerPK;Thank you for the fix!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certain PDF cannot be processed,PDFBOX-5397,13435162,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Blocker,Fixed,tilman,th@pmgnet.de,th@pmgnet.de,22/Mar/22 16:45,21/Apr/22 15:38,07/May/23 20:06,30/Mar/22 03:01,2.0.24,2.0.25,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.26,3.0.0 PDFBox,,Rendering,,,,0,,,,"!https://cdn.discordapp.com/attachments/381016918703996928/955833631484563566/unknown.png|width=570,height=291!

For certain PDFs where we use PDFBox to open a PDF, scan for defined dummy QR codes on it, and then replace the dummy with a real QR code, we either get the above error, or the process does not terminate.

A sample file TET_5_4xxx_GR_00_00_XX_14_F.pdf or TSA_5_BF2x_GR_-1_01_XX_09_F.pdf .
They both lead to the above problem.

Our own analysis so far is that it might be the same issue as mentionend in [https://stackoverflow.com/questions/69237146/pdfbox-renderimagewithdpi-hangs-sometimes]

 

For our company PMG Projektraum GmbH, Munich, Germany, this is an essential function. Currently users cannot download PDFs in most cases because of this: The download tries to add a QR code and never ends.

It could be that the QR code on these PDFs causes issues because it is in a certain layer. We observed that in Adobe Reader we see a QR Code but with or own viewer it is invisible:


This is TSA_5_4xxx_SH_XX_05_XX_03_F.pdf

where we have the same issues


Any idea, what this might be and how to solve it?",,,,,,,,,,,,,,,,"22/Mar/22 16:24;th@pmgnet.de;TET_5_4xxx_GR_00_00_XX_14_F.pdf;https://issues.apache.org/jira/secure/attachment/13041427/TET_5_4xxx_GR_00_00_XX_14_F.pdf","22/Mar/22 16:44;th@pmgnet.de;TSA_5_4xxx_SH_XX_05_XX_03_F.pdf;https://issues.apache.org/jira/secure/attachment/13041425/TSA_5_4xxx_SH_XX_05_XX_03_F.pdf","22/Mar/22 18:00;msahyoun;TSA_5_4xxx_SH_XX_05_XX_03_F1.jpg;https://issues.apache.org/jira/secure/attachment/13041429/TSA_5_4xxx_SH_XX_05_XX_03_F1.jpg","22/Mar/22 16:30;th@pmgnet.de;TSA_5_BF2x_GR_-1_01_XX_09_F.pdf;https://issues.apache.org/jira/secure/attachment/13041426/TSA_5_BF2x_GR_-1_01_XX_09_F.pdf","23/Mar/22 11:25;th@pmgnet.de;image-2022-03-23-12-25-56-963.png;https://issues.apache.org/jira/secure/attachment/13041480/image-2022-03-23-12-25-56-963.png","23/Mar/22 11:29;th@pmgnet.de;image-2022-03-23-12-29-03-735.png;https://issues.apache.org/jira/secure/attachment/13041481/image-2022-03-23-12-29-03-735.png",,,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,9223372036854775807,,,,Wed Mar 30 03:02:35 UTC 2022,,,,,,,,,,"0|z10ptc:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Mar/22 17:57;msahyoun;Why do you need to render the PDF when the use case is to look for a dummy object and replace that?;;;","22/Mar/22 18:02;msahyoun;I've added a rendition of TSA_5_4xxx_SH_XX_05_XX_03_F.pdf. Works fine for me. Tested using the command line PDFToImage utility. Which version of PDFBox are you using? Which OS ...;;;","22/Mar/22 18:20;tilman;""could not initialize class java.awt.graphicsenvironment$localge"" finds a lot of answers.;;;","22/Mar/22 18:38;tilman;Adobe claims that something is wrong with TET_5_4xxx_GR_00_00_XX_14_F.pdf . Same for TSA_5_BF2x_GR_-1_01_XX_09_F.pdf . I was able to render all files with 300dpi (but it took very long).;;;","22/Mar/22 19:05;tilman;Also mention what jdk you're using. Always update to the latest jdk of one number.;;;","23/Mar/22 11:39;th@pmgnet.de;a) ""Why do you need to render the PDF when the use case is to look for a dummy object and replace that?""
*Is there better ways to try to replace a dummy QR code?*
We would love to change it in the long run.

b) ""I've added a rendition of TSA_5_4xxx_SH_XX_05_XX_03_F.pdf. Works fine for me. Tested using the command line PDFToImage utility. Which version of PDFBox are you using? Which OS ...""
OS = Debian 11
*JDK = OpenJDK 17*
JRE = no installation
*PDFBox = 2.0.24*
on our production server

TSA_5_4xxx_SH_XX_03_F.pdf also works best for us. Thing is, it only generates a new PDF locally, on Production it seems not to terminate.

 

File that is most problematic from the above is the 09 one (really large), here the comment of our developer:

!image-2022-03-23-12-29-03-735.png|width=564,height=243!

{color:#00875a}c) ""could not initialize class java.awt.graphicsenvironment$localge"" finds a lot of answers.{color}

{color:#00875a}Seems to be an environment problem of our test environment only. Seems that xhost is missing there. It is not an issue on Production.{color}
*{color:#00875a}You can ignore that for the moment.{color}*

{color:#172b4d}d) ""Adobe claims that something is wrong with TET_5_4xxx_GR_00_00_XX_14_F.pdf . Same for TSA_5_BF2x_GR_-1_01_XX_09_F.pdf . I was able to render all files with 300dpi (but it took very long).""
The files were created with {*}""PDFTron""{*}. [https://www.pdftron.com/] Customer uses that, we can't influence that choice.
{color}

{color:#172b4d}{*}Do you know more about this software{*}, maybe from other problem tickets, how this tool must be used with generating PDFs to avoid such issues?
{color}

 ;;;","23/Mar/22 16:31;jira-bot;Commit 1899152 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1899152 ]

PDFBOX-5397: use dash workaround for all versions; remove version detection;;;","23/Mar/22 16:31;jira-bot;Commit 1899153 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1899153 ]

PDFBOX-5397: use dash workaround for all versions; remove version detection;;;","23/Mar/22 16:31;tilman;TET_5_4xxx_GR_00_00_XX_14_F.pdf fails bitonal rendering with Amazon Corretto 11, 17 and 18 but works on jdk8.

Here's what happens last:
{noformat}
PDFOperator{d} [COSArray{[COSFloat{.001}, COSInt{0}, COSInt{0}, COSInt{0}]}, COSFloat{.001}]
PDFOperator{m} [COSFloat{1182.74}, COSFloat{814.76}]
PDFOperator{l} [COSFloat{1428.79}, COSFloat{814.76}]
PDFOperator{S} []
{noformat}
The cause is (once again) a java bug related to a poor dash pattern. As seen in PDFBOX-3360, PDFBOX-2373, PDFBOX-2929, PDFBOX-3204, PDFBOX-3813 and PDFBOX-3724. We have a workaround but it is disabled for jdk10 and higher since PDFBOX-4492 because I thought they had fixed it. So they didn't.
{code}
public class DashCrash
{
    public static void main(String[] args)
    {
        System.out.println(""Version: "" + System.getProperty(""java.version""));
        long t0 = System.currentTimeMillis();
        BufferedImage bim = new BufferedImage(2000, 2000, BufferedImage.TYPE_BYTE_BINARY);
        Graphics2D g2d = (Graphics2D) bim.getGraphics();
        GeneralPath path = new GeneralPath();
        path.moveTo(1182.74f, 814.76f);
        path.lineTo(1428.79f, 814.76f);
        path.closePath();
        float[] dash = {0.001f};
        BasicStroke stroke = new BasicStroke(1, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 10, dash, 0);
        g2d.setStroke(stroke);
        g2d.draw(path);
        g2d.dispose();
        System.out.println(""done in "" + (System.currentTimeMillis() - t0) + "" millis"");
    }
}
{code}
I played around a bit: it does end some time, and the time depends on the value, but also on the image type. 0.005 is done in 3 seconds, 0.002 in 25 seconds.

Re Adobe error msg, no idea what's going on, maybe it's the dash pattern, maybe not. It's probably not the fault of PDFTron. The pattern is likely calculated by another software that uses PDFTron. So that software should avoid using tiny tiny dash patterns, these make no sense.;;;","23/Mar/22 16:51;tilman;Snapshot is available now:
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.26-SNAPSHOT/
;;;","29/Mar/22 10:24;th@pmgnet.de;We have now manually added a timeout in our placeholder search and successfully use a fallback in that case for problematic files.
We tried a validate method of PDFBox but there we could not really identify problematic files, this might one of your future improvements.

But the initial problem we found a solution now, thanks a lot for your feedback, that helped.
Ticket is closed.;;;","30/Mar/22 03:02;tilman;The 2.0.26 version will come out soon so your workaround would be needed less.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
JAVA program Crashes,PDFBOX-5383,13431188,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,krishnakittu528,krishnakittu528,01/Mar/22 09:38,03/Mar/22 19:33,07/May/23 20:06,,2.0.24,2.0.25,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,crash,jdk8,,I am trying to convert the PDF into images by using render. It hangs up the program.,,,,,,,,,,,,,,,,"01/Mar/22 09:37;krishnakittu528;crash.pdf;https://issues.apache.org/jira/secure/attachment/13040566/crash.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 02 17:58:42 UTC 2022,,,,,,,,,,"0|z101e8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Mar/22 18:09;tilman;Works for me, takes about a second with PDFDebugger. Your text is unclear, does java ""crash"" (stop with error) or ""hang"" (do nothing forever, at 0% or 100% CPU)?

Make sure you're using the latest java of the version you're using (if jdk8, it would be 322).;;;","02/Mar/22 05:52;krishnakittu528;HI 

When i tries with the below sample problem, the java process itself crashes.

{code}
package pdfboxutil;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.rendering.PDFRenderer;

public class Crash {

    public static void main(String[] args) throws IOException {
        PDDocument document = PDDocument.load(new File(""D:\\Development\\crash.pdf""));
        PDFRenderer pdfRenderer = new PDFRenderer(document);
        int count = document.getNumberOfPages();
        for (int i = 0; i < count; i++) {
            BufferedImage image = pdfRenderer.renderImage(i);
            System.out.println(""Processed"");
        }
       
    }
}
{code}

I am using JAVA 1.8.0_321, and pdf version 2.0.25. And in eclipse IDE i got this message

<terminated, exit value: -1073741571>C:\Program Files\Java\jdk1.8.0_321\bin\javaw.exe (Mar 2, 2022 11:21:36 AM)    

 ;;;","02/Mar/22 07:16;tilman;Does it work with other files or only fail with that one?

Try also allocating more space (e.g. -Xmx1g ). Try also running it outside of eclipse.

This exit code is mentioned in connection with eclipse and C code, very weird
https://stackoverflow.com/questions/59041409/termination-error-in-eclipse-when-trying-to-process-large-array
https://stackoverflow.com/questions/61581389/getting-exit-value-1-073-741-571-with-simple-code-to-calculate-nth-moment
;;;","02/Mar/22 09:01;krishnakittu528;HI tilman,

Thanks for replying

Its confirmed that on JAVA8 its not working even with the latest update 321 as well. On JAVA 11 its working fine. Is there any way to run with JAVA8.

I will keep on posted for further updates.

 

FYI only the attached sample is not working;;;","02/Mar/22 16:05;tilman;I could reproduce it with oracle jdk321 (I was using amazon coretto 322). Here's the code to crash it, which I created based on the PDF:
{code}
BufferedImage bim = new BufferedImage(1000, 1000, BufferedImage.TYPE_INT_RGB);
GeneralPath path = new GeneralPath();
path.moveTo(-66781511.559, -2226.299);
path.curveTo(-66781508.692,-2225.888,-66781505.846,-2225.346,-66781503.029,-2224.675);
Graphics2D g = (Graphics2D) bim.getGraphics();
g.setStroke(new BasicStroke(0.28f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 10, new float[]{5.669f,5.669f}, 0f));
g.draw(path);
{code}
The PDF segment is
{noformat}
0.283 w
0 J
0 j
[ 5.669 5.669 ] 0 d
/GS0 gs
-6.6781512E7 -2226.299 m
-6.6781508E7 -2225.888 -6.6781504E7 -2225.346 -6.6781504E7 -2224.675 c
S
{noformat}
I have submitted a bug report to oracle, it has been accepted as [JDK-8282587|https://bugs.openjdk.java.net/browse/JDK-8282587]. Do not expect them to fix this within a few days. You should move to amazon corretto or to jdk11. Sorry for the bad news but thanks for reporting it!;;;","02/Mar/22 17:58;mkl;{quote}
The PDF segment is
{noformat}
-6.6781512E7 -2226.299 m
-6.6781508E7 -2225.888 -6.6781504E7 -2225.346 -6.6781504E7 -2224.675 c
{noformat}
{quote}

So the PDF document is broken after all, the PDF format does not support exponential forms for numbers.


{panel:title=ISO 32000-2 section 7.3.3 ""Numeric objects""}
A real value shall be written as one or more decimal digits with an optional sign and a leading, trailing, or embedded PERIOD (2Eh) (decimal point).
[...]
A PDF writer shall not use the PostScript language syntax for numbers with non-decimal radices (such as 16#FFFE) or in exponential format (such as 6.02E23).
{panel}

----

Ah, I have to correct myself, not the PDF document is invalid but the quote from it. Actually those lines are:

{noformat}
-66781511.559 -2226.299 m
-66781508.692 -2225.888 -66781505.846 -2225.346 -66781503.029 -2224.675 c 
{noformat}

Here the numbers are valid PDF numbers.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Operators ""q"" and ""Q"" should also preserve text matrices",PDFBOX-5359,13421239,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,jaromirdobry@kadel.cz,jaromirdobry@kadel.cz,07/Jan/22 08:16,11/Jan/22 09:16,07/May/23 20:06,,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Parsing,Rendering,,,0,PDF2.0,,,"Open the attached file in PDFDebugger and compare to the Adobe Reader or Foxit. The problem is in saving/restoring the graphics state inside text object (which should be allowed according to the documentation and text matrices should be part of the graphics state).

Therefore I propose the solution to move PDFStreamEngine.textMatrix and PDFStreamEngine.textLineMatrix into PDGraphicsState.",,,,,,,,,,,,,,,,"07/Jan/22 08:07;jaromirdobry@kadel.cz;zapf_dingbats.pdf;https://issues.apache.org/jira/secure/attachment/13038388/zapf_dingbats.pdf","07/Jan/22 10:50;jaromirdobry@kadel.cz;zapf_dingbats_page_indirect.pdf;https://issues.apache.org/jira/secure/attachment/13038393/zapf_dingbats_page_indirect.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jan 11 09:16:05 UTC 2022,,,,,,,,,,"0|z0ycaw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jan/22 10:53;jaromirdobry@kadel.cz;Sorry, I accidentally created an invalid example. The page in the original file was a direct object. This one is correct:
zapf_dingbats_page_indirect.pdf;;;","07/Jan/22 15:52;lehmi;Which documentation are you referring to? The PDF reference? If so, which part exactly?;;;","07/Jan/22 16:06;mkl;In ISO 32000-2:2020 *q* and *Q* became general graphics state operators while in ISO 32000-2:2017 they still were special graphics state operators.

Furthermore, ISO 32000-2:2020 section 9.4.1 now requires 

{quote}When the graphics state stack operators *q* and *Q* (see 8.4.2, ""Graphics state stack"") are combined with
the text object operators *BT* and *ET*, each pair of matching operators (*q* … *Q*) shall be properly
(separately) nested.{quote}

In particular, therefore, this issue should be labeled {{PDF2.0}}.;;;","11/Jan/22 09:16;jaromirdobry@kadel.cz;I was looking into 32000-1:2008. I didn't noticed that they divide graphics state operators into these two categories, sorry for that.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When PDF is converted to image, the check box is not selected correctly",PDFBOX-5349,13418845,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,SilenceNie,SilenceNie,21/Dec/21 14:39,06/Jan/22 18:22,07/May/23 20:06,06/Jan/22 18:22,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AcroForm,FontBox,Rendering,,0,,,,"When PDF is converted to image, the check box is not selected correctly。

The selected check box should be a check mark, and the result is displayed as a square box。

!https://stackoom.com/link/aHR0cHM6Ly9pLnN0YWNrLmltZ3VyLmNvbS9YaVlHbi5wbmc=!

The correct display should be like this：

!https://stackoom.com/link/aHR0cHM6Ly9pLnN0YWNrLmltZ3VyLmNvbS84VHRqUi5wbmc=!

 ",,,,,,,,,,,,,,,,"22/Dec/21 05:58;SilenceNie;image-2021-12-22-13-58-48-739.png;https://issues.apache.org/jira/secure/attachment/13037820/image-2021-12-22-13-58-48-739.png",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,java,Wed Dec 22 13:54:17 UTC 2021,,,,,,,,,,"0|z0xxkg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Dec/21 14:42;SilenceNie;I have added the relevant font library, but it still doesn't display correctly

*Zapf Dingbats and MS Gothic*;;;","21/Dec/21 14:46;tilman;Please attach the PDF file and the file .pdfbox.cache from your home directory. Alternatively, look whether the two fonts are mentioned in that file. Please post any log output (are your logs enabled?), and update to 2.0.25.;;;","21/Dec/21 15:06;tilman;Please don't touch the ""fix"" field. This is the version where it will be fixed. We don't know whether it is a bug. Besides, this can only be 2.0.26 or higher.;;;","22/Dec/21 02:50;SilenceNie;Please check the log. I'm not sure if it will help you

 
{code:java}
 
[WARN 2021-12-22 10:37:20.787 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for Helvetica-Bold
[WARN 2021-12-22 10:37:20.789 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for Helvetica
[WARN 2021-12-22 10:37:20.794 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for Times-Roman
[WARN 2021-12-22 10:37:20.838 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for ZapfDingbats
[WARN 2021-12-22 10:37:20.839 TID: N/A o.a.p.r.Type1Glyph2D:61 localhost.localdomain:qtp1355887174-39] [] No glyph for code 52 (a20) in font ZapfDingbats
[WARN 2021-12-22 10:37:20.840 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for ZapfDingbats
[WARN 2021-12-22 10:37:20.841 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for ZapfDingbats
[WARN 2021-12-22 10:37:20.842 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for ZapfDingbats
[WARN 2021-12-22 10:37:20.843 TID: N/A o.a.p.p.f.PDType1Font:296 localhost.localdomain:qtp1355887174-39] [] Using fallback font LiberationSans for ZapfDingbats
{code}
 ;;;","22/Dec/21 03:15;tilman;""Using fallback font LiberationSans for ZapfDingbats"" means that it doesn't have the ZapfDingbats fonts. That's why you should look into that cache file I mentioned.;;;","22/Dec/21 03:57;SilenceNie;yeah,i know it,but in /usr/share/fonts i stored this font in the fonts directory,The result is still incorrect

 

 ;;;","22/Dec/21 04:00;tilman;Have you looked into the cache file? Is the font there? Is any font from that directory there?;;;","22/Dec/21 04:31;SilenceNie;Sure enough, as you expected, there is no zapfdingbats font in the cache directory, but I have put the font into the usr / share / fonts directory, and the directory is also referenced in the code. What do I need to do;;;","22/Dec/21 04:40;tilman;Is any font from that directory in the .cache.pdfbox file?

Try deleting the .cache.pdfbox file and run your code again.

Check if your program has read access to /usr/share/fonts.

Try running {{new FontFileFinder().find()}} and see what you get, does it include the directory /usr/share/fonts ?

Also run {{new FontFileFinder().find(""/usr/share/fonts"")}}, does it include any fonts, if yes, does it include ZapfDingBats?;;;","22/Dec/21 05:00;SilenceNie;changed to this:
{code:java}
//代码占位符
private void addFont(ITextFontResolver fontResolver, File fontFile) {
    FontFileFinder fontFileFinder = new FontFileFinder();
    List<URI> uris = fontFileFinder.find();
    if(!uris.isEmpty()){
        try{
            for (URI uri : uris) {
                fontResolver.addFont(uri.getPath(), BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);
            }
        }catch (Exception e){
            log.error(""Fonts：""+e.getMessage(), e);
        }
    } {code}
i will let you know corrent or incorrent later,thank you sir.;;;","22/Dec/21 05:56;SilenceNie;Unfortunately, the problem still exists.

:(

 ;;;","22/Dec/21 05:58;SilenceNie;!image-2021-12-22-13-58-48-739.png!;;;","22/Dec/21 07:22;tilman;Please answer the 6 questions from my previous comment;;;","22/Dec/21 10:55;SilenceNie;1 and 2：

I'm not quite sure where the cache directory is. But I put the relevant fonts in the / usr / share / fonts directory

3：

The program has permission to read / usr / share / fonts

4：

Fontfilefinder() can find fonts

5：

fontFileFinder. Find (""/ usr / share / fonts"") to find the font zapfdingbats;;;","22/Dec/21 12:00;tilman;The file is named "".pdfbox.cache"" and is in your home directory / your user directory. Open that file with an editor. Are there any fonts from the ""/usr/share/fonts"" directory?

4 / 5) But does it find the ZapfDingbats / MS Gothic font? ""to find"" is neither positive not negative.

You can also try to copy the files into the "".fonts"" subdirectory of your home directory.;;;","22/Dec/21 12:54;SilenceNie;thank you sir ,i find .pdfbox.cache.but not find MS Gochic font.

not fond .fonts file.so how can i copy MS Gothic font into .pdf.cache?

 

usr/share/fonts dictinory has MS Gothic font
{code:java}
[root@localhost ~]# cat ./.pdfbox.cache 
MicrosoftYaHei|TTF||190|805|4001f|0|0|020b0503020204020204|/usr/share/fonts/MICROSOFT YAHEI.TTF
SimSun|TTF||190|0|40001|0|0|02010600030101010101|/usr/share/fonts/SIMSUN.TTC
NSimSun|TTF||190|0|40001|0|0|02010609030101010101|/usr/share/fonts/SIMSUN.TTC
STFangsong|TTF||190|0|4009f|dfd70000|0|02010600040101010101|/usr/share/fonts/STFANGSONG.TTF
HY GUOJINGMINGJ|TTF||190|0|40000|0|0|02010509060101010101|/usr/share/fonts/gjm.ttf
MicrosoftYaHei|TTF||190|805|4001f|0|0|020b0503020204020204|/usr/share/fonts/MICROSOFT_YAHEI.TTF
Times-Roman|TTF||5|0|0|0|0|00000000000000000000|/usr/share/fonts/Times-Roman.ttf
ZapfDingbatsITC|TTF||190|c0f|0|0|0|05020102010704020609|/usr/share/fonts/ZapfDingbats.ttf
ZapfDingbats|TTF||190|0|0|0|0|00000600000000020000|/usr/share/fonts/zapfdingbats.ttf
[root@localhost ~]# cd /
[root@localhost /]# cd usr/share/fonts
[root@localhost fonts]# ls
'MICROSOFT YAHEI UI.TTF'  'MICROSOFT YAHEI.TTF'  'MS Gothic.ttc'   SIMSUN.TTC   STFANGSONG.TTF   ZapfDingbats.ttf
[root@localhost fonts]# cd /
[root@localhost /]# cd .fonts
bash: cd: .fonts: No such file or directory
[root@localhost /]# cd ~
[root@localhost ~]# cd .fonts
bash: cd: .fonts: No such file or directory
[root@localhost ~]# cat .fonts
cat: .fonts: No such file or directory
[root@localhost ~]# find -name .fonts 
[root@localhost ~]#  {code};;;","22/Dec/21 13:40;tilman;So the file exists twice in "".pdfbox.cache"". Once as ZapfDingbats.ttf and once as zapfdingbats.ttf despite that the second one doesn't exist. Then there's also the file ""MICROSOFT_YAHEI.TTF"" that doesn't exist; the file ""MS Gothic.ttc"" is missing. Because of that you should delete the file "".pdfbox.cache"" . It will be recreated the next time you run something with PDFBox. Then look into it again.;;;","22/Dec/21 13:54;SilenceNie;thank you very much，i already run it success in docker env.

pdfbox very good.

thanks again.

 

tomorrow i will use other linux env try it again.;;;",,,,,,,,,,,,,,,,,,,,
IllegalArgumentException: Input buffer too short in StandardSecurityHandler.computeRC4key,PDFBOX-5345,13417864,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,16/Dec/21 04:30,21/Apr/22 15:38,07/May/23 20:06,16/Dec/21 19:30,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.26,3.0.0 PDFBox,,Crypto,,,,0,regression,,,"{noformat}
java.lang.IllegalArgumentException: Input buffer too short
        at java.base/java.security.MessageDigest.update(MessageDigest.java:347)
        at org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key(StandardSecurityHandler.java:894)
        at org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword(StandardSecurityHandler.java:617)
        at org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.isOwnerPassword(StandardSecurityHandler.java:595)
        at org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.prepareForDecryption(StandardSecurityHandler.java:213)
        at org.apache.pdfbox.pdfparser.COSParser.prepareDecryption(COSParser.java:2532)
{noformat}

Probably because of PDFBOX-5312",,,,,,,,,,,,,PDFBOX-5312,,,"16/Dec/21 04:29;tilman;poppler-89422-0.pdf;https://issues.apache.org/jira/secure/attachment/13037553/poppler-89422-0.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,https://bugs.freedesktop.org/show_bug.cgi?id=89422,,,,,,,,,,9223372036854775807,,,,Thu Dec 16 18:43:20 UTC 2021,,,,,,,,,,"0|z0xrio:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Dec/21 07:09;lehmi;Looks like PDFBOX-5312 adds a missing length value and replaces existing ones as well at least for AESV2 and AESV3. We shouldn't do the latter even if those values don't comply with the spec. And yes, that fixes this issue ;);;;","16/Dec/21 08:01;jira-bot;Commit 1896025 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1896025 ]

PDFBOX-5345: don't ignore length value, as suggested by Andreas Lehmkühler;;;","16/Dec/21 08:01;jira-bot;Commit 1896026 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1896026 ]

PDFBOX-5345: don't ignore length value, as suggested by Andreas Lehmkühler;;;","16/Dec/21 11:24;jira-bot;Commit 1896045 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1896045 ]

PDFBOX-5345: partial revert; use more tailored approach instead;;;","16/Dec/21 11:24;jira-bot;Commit 1896047 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1896047 ]

PDFBOX-5345: partial revert; use more tailored approach instead;;;","16/Dec/21 16:18;lehmi;[~tilman]  the {{encryption}} dictionary is the relevant one not {{stdCryptFilterDictionary}};;;","16/Dec/21 18:42;jira-bot;Commit 1896069 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1896069 ]

PDFBOX-5345: use encryption dictionary length value, as suggested by Andreas Lehmkühler;;;","16/Dec/21 18:43;jira-bot;Commit 1896070 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1896070 ]

PDFBOX-5345: use encryption dictionary length value, as suggested by Andreas Lehmkühler;;;","16/Dec/21 18:43;tilman;[~lehmi] thanks, that works!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding a signature on nested fields has no effect,PDFBOX-5344,13417723,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,lurbain,lurbain,15/Dec/21 13:46,30/Dec/21 09:08,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Signing,,,,0,,,,"Hi,

I am not able add a signature to a document if the signature field is nested (the signature field is not a direct child of the acro form).

When I call the method PDDocument.addSignature(), the signature field is properly marked as  ""needs to be updated"" but not its parents.

As a result, when the incremental save is done, the changes are lost.

To be able to add the signature for such field, all the parent fields in the hierachy should also be marked as ""needs to be updated"".

Please find a sample file attached.

Here is the code snippet to build it:
{code:java}
final PDDocument pdDocument = new PDDocument();
final PDPage page = new PDPage();
pdDocument.addPage(page);
PDAcroForm form = new PDAcroForm(pdDocument);
pdDocument.getDocumentCatalog().setAcroForm(form);

final PDNonTerminalField level1 = new PDNonTerminalField(form);
level1.setPartialName(""level1"");

form.getFields().add(level1);

final PDNonTerminalField level2 = new PDNonTerminalField(form);
level2.setPartialName(""level2"");

level1.setChildren(List.of(level2));

final PDSignatureField signatureField = new PDSignatureField(form);
signatureField.setPartialName(""field1"");
PDAnnotationWidget widget = signatureField.getWidgets().get(0);
widget.setRectangle(new PDRectangle(50, 700, 200, 20));
widget.setPage(page);
widget.setPrinted(true);
page.getAnnotations().add(widget);

level2.setChildren(List.of(signatureField)); {code}
Thanks",,,,,,,,,,,,,,,,"17/Dec/21 14:59;tilman;PDFBOX-5344-nested-signature-field_signed.pdf;https://issues.apache.org/jira/secure/attachment/13037640/PDFBOX-5344-nested-signature-field_signed.pdf","15/Dec/21 13:42;lurbain;nested-signature-field.pdf;https://issues.apache.org/jira/secure/attachment/13037520/nested-signature-field.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 30 09:08:02 UTC 2021,,,,,,,,,,"0|z0xqnk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Dec/21 15:50;tilman;Sorry, wrong issue. I deleted my comment and yours to clean the record.

Your problem is a tricky one, the field doesn't have a parent pointer (and if it had, it would mean the entire tree would end up in the increment). The alternative would be to use the other saveIncremental() call which allows specific objects. But there I'm scared that we mess something up.;;;","15/Dec/21 16:42;lurbain;Thanks for looking into this.

I thought we could use the generic method PDField.getParent() to recursively mark the parents as ""needs to be updated"".

For example, the statement:
{code:java}
signatureField.getCOSObject().setNeedToBeUpdated(true); {code}

Could be replaced by :
{code:java}
PDField currentField = signatureField;
while (currentField != null) {
  currentField.getCOSObject().setNeedToBeUpdated(true);
  currentField = currentField.getParent();
} {code}
From the tests I've been doing, it's correctly adding the parents of the target field in the increment and the signature field changes are saved.

If you think it is a viable solution, I can submit a proper pull request.;;;","15/Dec/21 17:43;mkl;{quote}I thought we could use the generic method PDField.getParent() to recursively mark the parents as ""needs to be updated"".
{quote}
While this certainly {_}could be done{_}, it unnecessarily adds objects to the incremental update that haven't changed at all. This has disadvantages:
 * It is inefficient.
 * Revision comparison algorithms might consider such unnecessary objects in an incremental update to a signed PDF suspect and mark it with a validation warning or error.
 * Furthermore, this increases the chances of introducing unintended changes in the incremental update which revision comparison algorithms correctly would mark as validation errors. (We've already seen COS number rounding errors and structure changes...)

In the recent months mechanisms different from the plain {{setNeedToBeUpdated(true)}} of object chains for determining changed objects have been introduced in PDFBox. Using one of them is what [~tilman] was wondering about and what he is scared about messing up.
----
As an aside...
{code:java}
while (currentField != null) {
  currentField.getCOSObject().setNeedToBeUpdated(true);
  currentField = currentField.getParent();
} 
{code}
Beware, in case of broken PDFs this might cause an endless loop, an attack vector for DOS'ing PDFBox based products.;;;","16/Dec/21 03:29;tilman;In your case, I think all you need is to add the PDSignatureField object to the update list and call the other saveIncremental() method. Try it.

What we could do is to improve the signing examples to catch this corner case (by using the {{PDAcroform.getFields()}} method which gets the root level fields) so that people notice it and change their code accordingly.;;;","16/Dec/21 08:32;lurbain;[~mkl] 

I was not considering all these aspects, thanks for the explanation, it makes total sense.

[~tilman]

Thanks, I'm gonna try this approach. 
{quote}
What we could do is to improve the signing examples to catch this corner case (by using the {{PDAcroform.getFields()}} method which gets the root level fields) so that people notice it and change their code accordingly.
{quote}

I was not aware of these nested fields until recently, adding this logic to the examples could definitely help noticing the field hierarchy.;;;","16/Dec/21 14:31;lurbain;Hi [~tilman], 

Indeed, when I use the new saveIncremental method to pass the PDSignatureField, the signature works (and the document signature looks valid). Although it does not feel right to use PDDocument.addSignature() to perform operations on some objects we may not know about, and then retrieve the objects  we assume needs to be updated afterwards...

Besides, I am not in control of the code who calls PDDocument.addSignature(). To give you some context, we work with the dss library for all our signature operations. Initially, I opened a DSS ticket: [https://ec.europa.eu/cefdigital/tracker/browse/DSS-2653].


Changing the saveIncremental logic would probably have a significant impact, I am not sure they would want to go for it anytime soon (You can correct me if I am wrong [~mkl]).

We have a strong requirement to support nested fields, do you know if there is any plan in the future to work on PDDocument.addSignature() ? We would really prefer to avoid forking libraries.  

Thanks for you help;;;","17/Dec/21 15:00;tilman;I just tried CreateVisibleSignature.java and CreateVisibleSignature2.java *from the trunk* and there it works. [^PDFBOX-5344-nested-signature-field_signed.pdf] 
Might be because of recent changes in COSWriter where I wasn't involved.;;;","30/Dec/21 09:08;lurbain;Hi [~tilman], sorry for the late update, I was off.

Yes you are right, it works with the trunk version. That's great thx!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Text size option for PDFBox Debugger,PDFBOX-5342,13417603,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,pwyatt,pwyatt,15/Dec/21 04:23,21/Apr/22 15:38,07/May/23 20:06,16/Dec/21 04:26,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.26,3.0.0 PDFBox,,Utilities,,,,0,,,,"Is it possible to configure the GUI of PDFBox Debugger to set the font size and line spacing?

See the screenshot below of the tree view for PDFBox Debugger 3.0.0-RC1 on my Windows 10 laptop screen. Native screen res is 3000x2000 with ""Scale and Layout"" under Display settings set to 175%. Note that the menu and status bar text are OK - just the tree view and the text edit box below the menu/above the tree are cramped and cropping descenders.

Thanks.

!image-2021-12-15-15-22-10-846.png|width=262,height=667!",Windows 10 x64,,,,,,,,,,,,,,,"15/Dec/21 04:22;pwyatt;image-2021-12-15-15-22-10-846.png;https://issues.apache.org/jira/secure/attachment/13037485/image-2021-12-15-15-22-10-846.png",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 16 04:26:09 UTC 2021,,,,,,,,,,"0|z0xpww:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Dec/21 14:03;jira-bot;Commit 1895992 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895992 ]

PDFBOX-5342: add size options for tree and tree path;;;","15/Dec/21 14:03;jira-bot;Commit 1895993 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895993 ]

PDFBOX-5342: add size options for tree and tree path;;;","15/Dec/21 14:28;jira-bot;Commit 1895994 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895994 ]

PDFBOX-5342: remove println;;;","15/Dec/21 14:28;jira-bot;Commit 1895995 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895995 ]

PDFBOX-5342: remove println;;;","15/Dec/21 15:47;tilman;Please create a file {{config.properties}} in the current directory with this content:
{noformat}
treeRowHeight=50
treePathFontHeight=33
treePathHeight=60
{noformat}
Then adjust these numbers to whatever is best for you. A snapshot is available here:
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.26-SNAPSHOT/;;;","16/Dec/21 04:15;pwyatt;Thank you for the quick fix!;;;","16/Dec/21 04:16;pwyatt;Not knowing your workflow - feel free to Resolve this issue whenever you wish.;;;","16/Dec/21 04:26;tilman;Thanks for the feedback. I might add something more practical (a dialog box to set each option) when I have more time.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Renderer draws black points,PDFBOX-5337,13415253,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Duplicate,,schlocke,schlocke,03/Dec/21 10:44,03/Dec/21 11:09,07/May/23 20:06,03/Dec/21 11:09,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,JPEG2000,JPXDecode,JPXFilter,"Hi,

we use pdfbox to render documents. Now we have scanned documents here, that renders with black points:

!image-2021-12-03-11-39-07-953.png!

But Acrobat Reader shows this:

!image-2021-12-03-11-39-53-172.png!

Simple usage:
{code:java}
PDFRenderer renderer = new PDFRenderer(pdfFile);
renderer.setSubsamplingAllowed(true);
renderer.setDefaultDestination(RenderDestination.VIEW);
BufferedImage rimg = renderer.renderImage(...)
...
g.drawImage(rimg...) {code}
pdfbox 2.0.24

 ",,,,,,,,,,,PDFBOX-1752,,,,,"03/Dec/21 10:43;schlocke;Stein 21622 Edelstahl-Abdeckung.pdf;https://issues.apache.org/jira/secure/attachment/13036969/Stein+21622+Edelstahl-Abdeckung.pdf","03/Dec/21 10:38;schlocke;image-2021-12-03-11-38-30-088.png;https://issues.apache.org/jira/secure/attachment/13036972/image-2021-12-03-11-38-30-088.png","03/Dec/21 10:39;schlocke;image-2021-12-03-11-39-07-953.png;https://issues.apache.org/jira/secure/attachment/13036971/image-2021-12-03-11-39-07-953.png","03/Dec/21 10:39;schlocke;image-2021-12-03-11-39-53-172.png;https://issues.apache.org/jira/secure/attachment/13036970/image-2021-12-03-11-39-53-172.png",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 03 11:06:41 UTC 2021,,,,,,,,,,"0|z0xbww:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Dec/21 11:06;tilman;That's the JPEG2000 oracle imageio decoder inkblot bug. Get the latest version of the decoder:
https://github.com/jai-imageio/jai-imageio-core
https://github.com/jai-imageio/jai-imageio-jpeg2000/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rendering of PDDocument failed,PDFBOX-5335,13414702,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,dkenning,dkenning,01/Dec/21 08:32,02/Dec/21 09:16,07/May/23 20:06,02/Dec/21 09:16,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"I want to render the attached PDF-Document with the help of the following method. The target component gets an empty Image.

 

{{private Component createPDFVorschau(byte[] dateiinhalt) {}}

{{PDDocument doc = null;}}

{{try {}}
{{doc = PDDocument.load(dateiinhalt, """");}}{{ }}

{{if (doc!=null && doc.getNumberOfPages()>0) {}}

{{BufferedImage image = new PDFRenderer(doc).renderImage(0);}}

{{YImage imgVorschau = new YImage();}}

{{imgVorschau.setImage(image);}}

{{imgVorschau.setToolTipPicture(true);}}

{{return imgVorschau;}}

{{{}}{}}}{{{}} catch (Throwable e1) {{}}}
{{{}if (!(e1 instanceof OutOfMemoryError)) {{}}}{{{}ErrorLog.warn(""""+traverse, e1);{}}}

{{{}}{}}}{{{}} finally {{}}}
{{{}try {{}}}{{{}if (doc!=null) doc.close();{}}}

{{} catch (IOException e) {}}

{{Context.displayErrorToEndUser(e);}}

{{}}}

{{}}}

{{return null;}}
{{}}}",,,,,,,,,,,,,,,,"01/Dec/21 08:31;dkenning;Traverse Type QC, Nr. 1.1.pdf;https://issues.apache.org/jira/secure/attachment/13036868/Traverse+Type+QC%2C+Nr.+1.1.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 02 09:11:09 UTC 2021,,,,,,,,,,"0|z0x8iw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Dec/21 08:35;tilman;Did you get a log message? Are your logs enabled? Is the JBIG2 decoder in your classpath?
https://pdfbox.apache.org/2.0/dependencies.html;;;","02/Dec/21 09:11;dkenning;Adding the JBIG2 decoder solved the problem. Thanks for your quick response.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid ToUnicode CMap in font BWSimSun,PDFBOX-5334,13414335,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,guowenchaocoder,guowenchaocoder,29/Nov/21 15:35,04/Dec/21 14:32,07/May/23 20:06,04/Dec/21 14:32,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"I met a problem，When I use pdfbox to parse PDF files pdfbox  alarm is prompted.

I don't know how to solve it。Incomplete parsing of file content

 

23:24:05.206 [main] WARN org.apache.pdfbox.pdmodel.font.PDFont - Invalid ToUnicode CMap in font BWSimSun
23:24:05.209 [main] WARN org.apache.pdfbox.pdmodel.font.PDFont - Using predefined identity CMap instead
23:24:05.243 [main] DEBUG org.apache.fontbox.ttf.GlyphSubstitutionTable - Type 4 GSUB lookup table is not supported and will be ignored
23:24:05.244 [main] DEBUG org.apache.fontbox.ttf.GlyphSubstitutionTable - Type 4 GSUB lookup table is not supported and will be ignored
23:24:05.244 [main] DEBUG org.apache.fontbox.ttf.GlyphSubstitutionTable - Type 6 GSUB lookup table is not supported and will be ignored
23:24:05.244 [main] DEBUG org.apache.fontbox.ttf.GlyphSubstitutionTable - Type 4 GSUB lookup table is not supported and will be ignored
23:24:05.244 [main] DEBUG org.apache.fontbox.ttf.GlyphSubstitutionTable - Type 4 GSUB lookup table is not supported and will be ignored

 ",,,,,,,,,,,,,,,,"29/Nov/21 15:33;guowenchaocoder;a.pdf;https://issues.apache.org/jira/secure/attachment/13036766/a.pdf","29/Nov/21 18:21;tilman;a_unc.pdf;https://issues.apache.org/jira/secure/attachment/13036774/a_unc.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,java,Mon Nov 29 18:21:16 UTC 2021,,,,,,,,,,"0|z0x69c:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Nov/21 16:03;tilman;There is at least one error in the /ToUnicode stream at ""Root/Pages/Kids/\[0\]/Resources/Font/JF2/ToUnicode""
{code}
/CIDInit /ProcSet findresource begin 
12 dict begin 
begincmap 
/CIDSystemInfo <</Registry (Adobe) /Ordering (Identity) /Supplement 0>> def 
/CMapName /Adobe-Identity-UCS def 
/CMapType 2 def 
1 begincodespacerange 
<0000> <FFFF> 
endcodespacerange 
0 beginbfchar 
<0003> <0030> 
<0004> <0032> 
<0005> <0033> 
...
<0064> <FF09> 
<0065> <5347> 
<0066> <0025> 
endbfchar 
endcmap 
CMapName currentdict /CMap difineresource pop 
end 
end 
{code}
""0 beginbfchar"" means 0 entries. However there are more then 0 entries.

Probably not relevant for us, but ""difineresource"" has a misspelling, that should be ""defineresource"".

The debug messages are irrelevant here.;;;","29/Nov/21 18:21;tilman;Here's the same file with the problem corrected (I decompressed the file, replaced ""0"" with ""100"" and removed two spaces elsewhere)
 [^a_unc.pdf] ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong number of fonts leads to OOM-Exception,PDFBOX-5333,13413962,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,lehmi,lehmi,lehmi,26/Nov/21 07:41,17/Dec/21 06:50,07/May/23 20:06,27/Nov/21 12:08,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,FontBox,,,,1,,,,"We got the following error report from Pinohans@JDArmy through security@

+Description:+

In FontBox of Apache PDFBox, a carefully crafted PDF
file can trigger an OutOfMemory-Exception while loading the file. This
issue affects Apache PDFBox version 1.8 to 3.0.0-alpha2.

        Product: Apache PDFBox

        Version: 1.8-3.0.0-alpha2

        Affected component:
src/main/java/org/apache/fontbox/ttf/TrueTypeCollection.java

+Vulnerability:+
{code}
67     TrueTypeCollection(TTFDataStream stream) throws IOException
68    {
69        this.stream = stream;
70
71        // TTC header
72        String tag = stream.readTag();
73        if (!tag.equals(""ttcf""))
74        {
75            throw new IOException(""Missing TTC header"");
76        }
77        float version = stream.read32Fixed();
78        numFonts = (int)stream.readUnsignedInt();     # Vulnerability
79        fontOffsets = new long[numFonts];                     #
Vulnerability
80        for (int i = 0; i < numFonts; i++)
81        {
82            fontOffsets[i] = stream.readUnsignedInt();
83        }
{code}

+Attack vector:+

{code}
import org.apache.fontbox.ttf.TrueTypeCollection;

import java.io.*;

public class main {
    public static void main(String[] args) throws IOException {
        byte[] payload = {0x74, 0x74, 0x63, 0x66, 0x00, 0x00, 0x00, 0x00, 0x7F, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF};
        TrueTypeCollection ttc = new TrueTypeCollection(new ByteArrayInputStream(payload));
    }
}
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Nov 27 12:01:45 UTC 2021,,,,,,,,,,"0|z0x3yg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Nov/21 07:44;lehmi;1.8.x is not affected as it doesn't support TTF-collections.;;;","26/Nov/21 15:13;jira-bot;Commit 1895356 from lehmi@apache.org in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895356 ]

PDFBOX-5333: check number of fonts for invalid values;;;","26/Nov/21 15:16;jira-bot;Commit 1895357 from lehmi@apache.org in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895357 ]

PDFBOX-5333: check number of fonts for invalid values;;;","27/Nov/21 12:01;lehmi;The vulnerability can't be triggered by simply crafting a malicious pdf. PDFBox doesn't use the affected class to read any data from a pdf directly. It is used only when collecting information for the font cache using the local installed fonts. Saying that, one has to install a malicious font to the local file system and once PDFBox tries to create the font cache it will stumble upon that ttf-collection and immediately shutdown with an exception. There is no simple attack vector and even if there is a manually installed malicious ttf collection in place PDFBox will crash immediately. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Text ""820-01869-U-A"" is omitted from PDF doc",PDFBOX-5331,13413926,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,mccree,mccree,26/Nov/21 02:12,17/Dec/21 06:50,07/May/23 20:06,26/Nov/21 16:19,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Text extraction,,,,0,,,,"I use ""PrintTextLocations"" to parse all text from PDF doc.there has three text ""820-01869-U-A"" in my doc,but the third text which one after text ""品牌:Apple 型號:"" is omitted.",,,,,,,,,,,,,PDFBOX-5324,,,"26/Nov/21 02:07;mccree;072B006805-P32939I-(2)_2.pdf;https://issues.apache.org/jira/secure/attachment/13036618/072B006805-P32939I-%282%29_2.pdf","26/Nov/21 11:31;mccree;072B006805-P32939I-(2)_2_1.jpg;https://issues.apache.org/jira/secure/attachment/13036655/072B006805-P32939I-%282%29_2_1.jpg","26/Nov/21 02:11;mccree;1.png;https://issues.apache.org/jira/secure/attachment/13036617/1.png","26/Nov/21 02:12;mccree;2-1.png;https://issues.apache.org/jira/secure/attachment/13036615/2-1.png","26/Nov/21 02:11;mccree;3.png;https://issues.apache.org/jira/secure/attachment/13036616/3.png","26/Nov/21 11:18;mccree;84002附表0506.pdf;https://issues.apache.org/jira/secure/attachment/13036654/84002%E9%99%84%E8%A1%A80506.pdf","26/Nov/21 06:52;tilman;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13036635/screenshot-1.png",,,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 29 12:21:26 UTC 2021,,,,,,,,,,"0|z0x3qg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Nov/21 06:52;tilman;That's because that font has no ToUnicode stream, so no way to know what character this is
 !screenshot-1.png! ;;;","26/Nov/21 06:59;tilman;Adobe Reader is unable to copy & paste that text. PDF.js is able to.;;;","26/Nov/21 07:04;tilman;The font is not embedded. I wonder if we can apply a trick like in PDFBOX-5324. A font from the OS will usually have correct unicode information available.;;;","26/Nov/21 11:21;mccree;Hi [~tilman] ,Thanks for your quick response, and i have another pdf doc have the same question.[^84002附表0506.pdf] I have noticed that warn message output
{panel}
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDCIDFontType2 findFontOrSubstitute
WARNING: Using fallback font STHeitiTC-Medium for CID-keyed TrueType font ·s²Ó©úÅé
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+27 (27) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+21 (21) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+19 (19) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+16 (16) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+20 (20) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+25 (25) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+28 (28) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDType0Font toUnicode
WARNING: No Unicode mapping for CID+36 (36) in font TimesNewRoman
Nov 26, 2021 7:06:31 PM org.apache.pdfbox.pdmodel.font.PDCIDFontType2 findFontOrSubstitute
WARNING: Using fallback font STHeitiTC-Medium for CID-keyed TrueType font ·s²Ó©úÅé
{panel};;;","26/Nov/21 11:31;mccree;I have another question,why convert the pdf doc to image,the text can be draw successful?see the attached file  !072B006805-P32939I-(2)_2_1.jpg!;;;","26/Nov/21 12:08;tilman;About the second file: unicode is also missing. And that is a type 3 font (not a real ""font"", rather a collection of PDF operations), so no way to do anything.

Re ""why convert the pdf doc to image,the text can be draw successful"" I assume you want to know why no text extraction but visible text? This is because a font needs to have both its visual (i.e. the ""glyph"") and its unicode character value. Sometimes it isn't there, usually to make text extraction difficult.;;;","26/Nov/21 14:01;jira-bot;Commit 1895354 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895354 ]

PDFBOX-5324, PDFBOX-5331: Get unicode from TrueTypeFont cmap for non-embedded font;;;","26/Nov/21 14:01;jira-bot;Commit 1895355 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895355 ]

PDFBOX-5324, PDFBOX-5331: Get unicode from TrueTypeFont cmap for non-embedded font;;;","26/Nov/21 16:18;tilman;Snapshot available here:
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/;;;","29/Nov/21 12:21;mccree;Thank you [~tilman] ,I had update my pdfbox to version 2.0.25-SNAPSHOT and found the issue has been solved!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failing to get multiple encodings from cmap table,PDFBOX-5328,13412942,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,20/Nov/21 12:06,17/Dec/21 06:50,07/May/23 20:06,20/Nov/21 14:56,1.8.16,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,FontBox,,,,0,,,,"As reported by Ty Lewis in the users mailing list, see [here|https://mail-archives.apache.org/mod_mbox/pdfbox-users/202111.mbox/%3CCAPRgSAOG1a9kw4wSmArH0uG-N5xd9_kPq7ju4U%3DSv9H9CQZmcQ%40mail.gmail.com%3E]
{noformat}
Unicode encodings for GID 8712: List(U+f967)
Unicode encodings for GID 8712 from table (platformId = 0 encodingId = 3):
List(U+4e0d, U+f967)
Unicode encodings for GID 8712 from table (platformId = 0 encodingId = 4):
List(U+f967)
{noformat}
I made some java code to reproduce this:
{code}
File fontFile = new File(""NotoSansSC-Regular.otf"");
OTFParser otfParser = new OTFParser(false);
OpenTypeFont otf = otfParser.parse(fontFile);

CmapLookup unicodeCmapLookup = otf.getUnicodeCmapLookup();
List<Integer> charCodes = unicodeCmapLookup.getCharCodes(8712);
System.out.println(charCodes);

CmapTable cmapTable = otf.getCmap();
CmapSubtable unicodeFullCmapTable = cmapTable.getSubtable(CmapTable.PLATFORM_UNICODE, CmapTable.ENCODING_UNICODE_2_0_FULL);

CmapSubtable unicodeBmpCmapTable = cmapTable.getSubtable(CmapTable.PLATFORM_UNICODE, CmapTable.ENCODING_UNICODE_2_0_BMP);

List<Integer> unicodeBmpCharCodes = unicodeBmpCmapTable.getCharCodes(8712);
List<Integer> unicodeFullCharCodes = unicodeFullCmapTable.getCharCodes(8712);

System.out.println(unicodeBmpCharCodes);
System.out.println(unicodeFullCharCodes);
{code}
A look in the tables with DTL OTMaster 3.7 light shows there are indeed two entries. A search for them (in hex) shows the characters 不 and 不.",,,,,,,,,,,,,,,,"20/Nov/21 12:04;tilman;NotoSansSC-Regular.otf;https://issues.apache.org/jira/secure/attachment/13036376/NotoSansSC-Regular.otf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 24 03:57:25 UTC 2021,,,,,,,,,,"0|z0wxns:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Nov/21 13:02;jira-bot;Commit 1895198 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895198 ]

PDFBOX-5328: load test file;;;","20/Nov/21 13:02;jira-bot;Commit 1895199 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895199 ]

PDFBOX-5328: load test file;;;","20/Nov/21 13:06;jira-bot;Commit 1895200 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895200 ]

PDFBOX-5328: fix subtable 12 that it can have several entries with same gid, add test;;;","20/Nov/21 13:16;jira-bot;Commit 1895201 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895201 ]

PDFBOX-5328: fix subtable 12 that it can have several entries with same gid, add test;;;","24/Nov/21 03:57;jira-bot;Commit 1895279 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895279 ]

PDFBOX-5328: make class + method public;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parse text from two rectangles to one rectangle,PDFBOX-5327,13412747,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,mccree,mccree,19/Nov/21 10:10,22/Nov/21 02:56,07/May/23 20:06,21/Nov/21 11:00,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Text extraction,,,,0,,,,Rectangle(CONSIGN TO) and Rectangle(PACKING LIST) regard as one Rectangle(CONSIGN TO PACKING LIST),,,,,,,,,,,,,,,,"19/Nov/21 10:09;mccree;072B006805-P32939I-(2)(1).pdf;https://issues.apache.org/jira/secure/attachment/13036346/072B006805-P32939I-%282%29%281%29.pdf","19/Nov/21 10:10;mccree;1-1.png;https://issues.apache.org/jira/secure/attachment/13036343/1-1.png","19/Nov/21 10:10;mccree;2-1.png;https://issues.apache.org/jira/secure/attachment/13036344/2-1.png","19/Nov/21 10:10;mccree;3-1.png;https://issues.apache.org/jira/secure/attachment/13036345/3-1.png",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 22 02:56:15 UTC 2021,,,,,,,,,,"0|z0wwgg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Nov/21 15:01;mkl;I do not understand what this issue is about. Where do you get all those rectangles from? And what does text extraction have to do with such rectangles?;;;","19/Nov/21 19:19;tilman;My guess is that zzz meant to write that the two segments are extracted in one line. Maybe, when it's sorted. This packing list is terrible to read, even for me as a human.;;;","20/Nov/21 01:35;mccree;Sorry,Maybe my question desc is not enough clear. Now i repeate it again. Infact `CONSIGN TO :` and `PACKING LIST` are two individual text,but in example `PrintTextLocations.java` they are parsed in one same `List<TextPostiion>`,You can see it in image 2-1.png.

Not only `CONSIGN TO:` and `PACKING LIST`, Such as `SHIP TO:` and  `BILL TO:` has the same problem. What i except is they are in two different `List<TextPosition>` .
And I confused about `HENAN FUCHI TECHNOLOGY CO.,LTD` and `Apple Inc.`,they are the next row near `SHIP TO:` and  `BILL TO:`  but they are separated.(that's what i except result )
ps: My english is poor,fogive me, please.;;;","20/Nov/21 04:27;tilman;You'd have to replace the text stripper with your own, that does line separation differently. Look for the code around the ""handleLineSeparation"" call.

If you extract always the same PDFs (i.e. always from this creator), then consider using PDFTextStripperByArea instead.;;;","21/Nov/21 10:24;mkl;As [~tilman] has indicated, the problem is that the {{PDFTextStripper}} forwards text to {{writeString}} in chunks it considers to be on the same text line. The code that attempts to determine text lines is in {{{}writePage{}}}. It mostly recognizes a text line by its shared *y* position and mostly ignores large *x* gaps (except for adding a space there).

If your PDF had been properly tagged, the tagging structure could have been used as a guide. If it had been properly organized into articles and article beads, that structure could have been used as a guide. As neither of these options is used in your PDF, there only are heuristics at work, and the heuristics applied in {{writePage}} apparently have been developed mostly with single column documents in mind or to test with.;;;","22/Nov/21 02:56;mccree;Thanks very much,my friend.I had found the problem reason from the source code. !image-2021-11-22-10-52-38-107.png!
Between ""CONSIGN TO: "" and ""PACKING LIST"" should add a word separator, but there is a space of the first text end  and it case ""!lastPosition.getTextPosition().getUnicode().endsWith("" "")"" is false.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TTFSubsetter incorrectly calculating 'searchRange',PDFBOX-5326,13412622,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,bblocher@frontporch.com,bblocher@frontporch.com,18/Nov/21 18:43,17/Dec/21 06:50,07/May/23 20:06,19/Nov/21 19:42,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,FontBox,,,,0,,,,"The log2 method in TTFSubsetter is incorrectly calling _round_ instead of _floor_ on the log2 result.

If 
{code:java}
Math.log(num) / Math.log(2){code}
results in a whole number, the searchRange is correct but decimal results could get rounded up or down. 

The spec calls for a _floor_ of the result.
[https://docs.microsoft.com/en-us/typography/opentype/spec/cmap#:~:text=uint16-,searchRange,-Maximum%20power%20of]

Attached two svgs with embedded subset fonts. Firefox gives the best console error output.",,,,,,,,,,,,,,,,"18/Nov/21 18:45;bblocher@frontporch.com;notworking.svg;https://issues.apache.org/jira/secure/attachment/13036306/notworking.svg","18/Nov/21 18:45;bblocher@frontporch.com;working.svg;https://issues.apache.org/jira/secure/attachment/13036305/working.svg",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 22 15:56:33 UTC 2021,,,,,,,,,,"0|z0wvoo:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Nov/21 19:37;jira-bot;Commit 1895183 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895183 ]

PDFBOX-5326: fix log2, as suggested by Brian Blocher;;;","19/Nov/21 19:37;jira-bot;Commit 1895184 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895184 ]

PDFBOX-5326: fix log2, as suggested by Brian Blocher;;;","19/Nov/21 19:42;tilman;Thanks [~bblocher@frontporch.com]. I can't see what's wrong with the display of the SVG file (or is it only the error message in the console?) but the specification is clear.;;;","22/Nov/21 15:56;bblocher@frontporch.com;The SVG will still display. What happens is the embedded font is considered invalid and ignored. The browser will fall back to the default font and render the SVG with that.

If you wanted to make the display very obvious, switch your default browser font to something that really stands out. I switched to Curlz MT for testing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parse text can parse some text that not in pdf doc,PDFBOX-5325,13412203,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,mccree,mccree,17/Nov/21 08:19,18/Nov/21 06:35,07/May/23 20:06,18/Nov/21 06:35,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FontBox,,,,0,,,,I try the example 'PrintTextLocations.java' to print all text info of the pdf doc.Then i found some text not in the pdf doc are print in the console.,,,,,,,,,,,,,,,,"17/Nov/21 08:18;mccree;1.png;https://issues.apache.org/jira/secure/attachment/13036207/1.png","17/Nov/21 08:18;mccree;2.png;https://issues.apache.org/jira/secure/attachment/13036206/2.png","17/Nov/21 08:18;mccree;3png.png;https://issues.apache.org/jira/secure/attachment/13036205/3png.png","17/Nov/21 08:14;mccree;BL_COO_DGD_2605535853_23.07.2019_5832.pdf;https://issues.apache.org/jira/secure/attachment/13036208/BL_COO_DGD_2605535853_23.07.2019_5832.pdf","17/Nov/21 09:01;mkl;WhiteText-selected.png;https://issues.apache.org/jira/secure/attachment/13036210/WhiteText-selected.png",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Thu Nov 18 05:51:30 UTC 2021,,,,,,,,,,"0|z0wt3k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Nov/21 09:02;mkl;{quote}Then i found some text not in the pdf doc are print in the console.
{quote}
The extra text _is_ in the PDF document but it is drawn in white!

To see where it is please open the PDF in Adobe Acrobat Reader and press Ctrl-A - you'll see something like this in the upper right:

!WhiteText-selected.png!

 ;;;","18/Nov/21 05:51;mccree;Oh,Thank you very much!It's pretty useful for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pixelated text upon converting pdf to image,PDFBOX-5323,13411906,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Won't Fix,,mipatil,mipatil,15/Nov/21 22:46,28/Nov/21 10:41,07/May/23 20:06,28/Nov/21 10:41,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"We're seeing an issue where after converting pdf document to image, the quality is degraded. This causes the text to lose the sharpness and appear pixelated. There is some pixelation even in a higher resolution image (1920x1080)

I'm attaching screenshot of the image and the original pdf as well.

Please help take a look at what could be the problem. Also please let me know if you need anything else.",,,,,,,,,,,,,,,,"15/Nov/21 22:43;mipatil;Screen Shot 2021-11-15 at 2.41.58 PM.png;https://issues.apache.org/jira/secure/attachment/13036119/Screen+Shot+2021-11-15+at+2.41.58+PM.png","15/Nov/21 22:43;mipatil;Screen Shot 2021-11-15 at 2.42.04 PM.png;https://issues.apache.org/jira/secure/attachment/13036120/Screen+Shot+2021-11-15+at+2.42.04+PM.png","15/Nov/21 22:43;mipatil;World_Maritime_Day_2021.pdf;https://issues.apache.org/jira/secure/attachment/13036118/World_Maritime_Day_2021.pdf",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 17 18:36:00 UTC 2021,,,,,,,,,,"0|z0wra8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Nov/21 03:13;tilman;This is a known weakness of java / PDFBox, text rendering mode 7, which uses clipping. This is described here
https://pdfbox.apache.org/2.0/faq.html
""Why are some texts in poor quality and not antialiased?"";;;","17/Nov/21 18:36;mipatil;Thanks for the info. I'll discuss the solution provided in the FAQ with my team and then update this bug accordingly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDFDebugger: Strange zoom depending fill/clipping artefact,PDFBOX-5322,13411876,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Won't Fix,,rototor,rototor,15/Nov/21 18:07,23/Nov/21 10:17,07/May/23 20:06,22/Nov/21 18:36,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,Swing GUI,,,0,,,,"The attached (test) PDF is not rendered correctly in the PDFBox Debugger, at least on MacOS with both Azul-17 and Azul-11 JDKs. 

The way it is misrendered is depending on the zoom level. It seems fine at 150%, but buggy on all other zoom levels.  

100%:

!image-2021-11-15-19-00-01-859.png|width=335,height=184!

200%:

!image-2021-11-15-19-00-24-192.png|width=365,height=195!

 

It renders fine on Adobe Acrobat and MacOS Preview. (The text is exported as vector shapes)",,,,,,,,,,,,,,,,"16/Nov/21 16:29;tilman;PDFBOX-5322_reduced.pdf;https://issues.apache.org/jira/secure/attachment/13036162/PDFBOX-5322_reduced.pdf","16/Nov/21 12:28;rototor;buggy_shape_operation_order_fixed.pdf;https://issues.apache.org/jira/secure/attachment/13036140/buggy_shape_operation_order_fixed.pdf","15/Nov/21 18:00;rototor;image-2021-11-15-19-00-01-859.png;https://issues.apache.org/jira/secure/attachment/13036112/image-2021-11-15-19-00-01-859.png","15/Nov/21 18:00;rototor;image-2021-11-15-19-00-24-192.png;https://issues.apache.org/jira/secure/attachment/13036111/image-2021-11-15-19-00-24-192.png","15/Nov/21 17:59;rototor;kartenvorschau2871641668946630670.pdf;https://issues.apache.org/jira/secure/attachment/13036113/kartenvorschau2871641668946630670.pdf",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 23 10:17:06 UTC 2021,,,,,,,,,,"0|z0wr3k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Nov/21 20:05;tilman;It happens in all 2.0 versions, and not in 1.8. Not just in PDFDebugger, also in PDFToImage.;;;","15/Nov/21 20:59;mkl;When opening the attached PDF in Adobe Reader, I get an error dialog ""There was an error processing a page. An internal error occurred.""

*PS*: Testing again one day later Adobe Reader suddenly accepts the document without that error message. I'm not aware of any changes on my side causing this change of behavior. Nonetheless the error described below still are there. 
----
Ok, the content stream of the XObject *Form1* is really broken. Multiple times a path is defined, then lots of properties are changed, and only thereafter the path is stroked. In PDF this is forbidden, between path definition and path drawing there at most may be a clip path instruction.

(To a certain degree Adobe Reader and other viewers do not enforce this, but the PDF at hands really is extreme; e.g. it even sets extended graphics states in-between...);;;","16/Nov/21 12:30;rototor;[~mkl] Ok, thats news to me that setting properties is forbidden after defining a path. Where in the PDF spec (1.7) is this specified? I only found in 8.5.2.1 that after a path construction it ""{*}may{*} concluded with the application of a path-painting operator"". As a non native english speaker I assume this means that a path construction does not require that the path is instantly used.

Never the less I changed in my pdfbox-graphics2d bridge the ordering, so that after the path construction instant a fill or a stroke is done, and all properties / graphics states are defined before the path construction is done. 

The problem still persists. See [^buggy_shape_operation_order_fixed.pdf]

Is there anything else in the PDF which is broken and could cause that problem?;;;","16/Nov/21 14:36;mkl;{quote}[~rototor]> Ok, thats news to me that setting properties is forbidden after defining a path. Where in the PDF spec (1.7) is this specified?{quote}

I assume by ""PDF spec (1.7)"" you mean ISO 32000-1. In that case have a look at [this stack overflow answer|https://stackoverflow.com/a/13623750/1729265].
;;;","16/Nov/21 16:32;tilman;It's a java problem. It does not happen with jdk8 but with 11 and 17 and 18. I tried to reproduce it with java but failed, maybe I missed something. (Update: I missed the rendering hints);;;","19/Nov/21 15:50;tilman;I was able to reproduce it and have filed a bug report (internal review ID : 9072009). I'll attach the link if it gets accepted.
{code}
BufferedImage bim = new BufferedImage(623, 311, BufferedImage.TYPE_INT_RGB);
Graphics2D g2d = (Graphics2D) bim.getGraphics();
g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
g2d.setBackground(Color.white);
g2d.clearRect(0, 0, bim.getWidth(), bim.getHeight());
g2d.setColor(Color.black);
g2d.transform(new AffineTransform(1f, 0f, 0f, -1f, 0, 311f));
GeneralPath path = new GeneralPath();
path.moveTo(438.5315f, 261.2291f);
path.curveTo(437.8919f, 265.3086f, 437.6903f, 265.3338f, 437.6903f, 265.3338f);
path.curveTo(437.5043f, 265.3571f, 437.3822f, 265.2621f, 437.3822f, 265.2621f);
g2d.draw(path);
g2d.dispose();
ImageIO.write(bim, ""png"", new File(""PDFBOX-5322.png""));
{code}
;;;","22/Nov/21 18:36;tilman;Bug has been accepted as JDK-8277574
https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8277574
https://bugs.openjdk.java.net/browse/JDK-8277574

I have access on their bug tracker and I'll report here if this gets fixed. But there's nothing WE can do so I'll close this one. Thanks for reporting.;;;","23/Nov/21 10:17;rototor;Thank you [~tilman]  for reporting this upstream to the JDK.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Silent fail of PDTextField.setValue when font encoding missing,PDFBOX-5321,13411636,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,tilman,tilman,13/Nov/21 18:54,17/Dec/21 06:50,07/May/23 20:06,14/Nov/21 05:16,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,AcroForm,PDModel,,,0,,,,"by [~momaison]
{code}
PDTextField field = (PDTextField) (pDAcroForm.getField(""SampleField""));
field.setValue(""é"");
{code}
/V is set correctly, but in the appearance stream 0xFF is used.",,,,,,,,,,,,,,,,"13/Nov/21 18:50;tilman;simple_form_Helvetica_no_encoding-saved.pdf;https://issues.apache.org/jira/secure/attachment/13036062/simple_form_Helvetica_no_encoding-saved.pdf","13/Nov/21 18:49;tilman;simple_form_Helvetica_no_encoding.pdf;https://issues.apache.org/jira/secure/attachment/13036063/simple_form_Helvetica_no_encoding.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Nov 14 05:14:01 UTC 2021,,,,,,,,,,"0|z0wpm8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Nov/21 19:26;jira-bot;Commit 1895000 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895000 ]

PDFBOX-5321: avoid quiet failure when encoding is missing; fix messages;;;","13/Nov/21 19:26;jira-bot;Commit 1895001 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895001 ]

PDFBOX-5321: avoid quiet failure when encoding is missing; fix messages;;;","14/Nov/21 05:14;jira-bot;Commit 1895005 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895005 ]

PDFBOX-5321: fix message text;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolution of ambiguities in inline images don't follow the standard,PDFBOX-5318,13410891,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,09/Nov/21 16:46,17/Dec/21 06:50,07/May/23 20:06,09/Nov/21 17:05,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,,,,"{quote}
In the situation where both an abbreviated key name and the corresponding full key name from Table 91 are present, the abbreviated key name shall take precedence.
{quote}
I found only two mistakes, of which only one has an effect but I'll correct them both.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 09 16:54:02 UTC 2021,,,,,,,,,,"0|z0wl0o:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Nov/21 16:53;jira-bot;Commit 1894875 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894875 ]

PDFBOX-5318: abbreviated key name shall take precedence;;;","09/Nov/21 16:54;jira-bot;Commit 1894876 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894876 ]

PDFBOX-5318: abbreviated key name shall take precedence;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Splitter: Problematic /Info causes big files,PDFBOX-5317,13410856,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,Schmidor,Schmidor,09/Nov/21 13:40,23/Dec/21 16:14,07/May/23 20:06,10/Nov/21 17:11,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,,,,,0,,,,"The attached pdf uses the same object for /Root and /Info, so /Info also contains the /Pages reference.

When splitting this document, /Info gets a copy of the original object, which still contains all pages.

I would propose to create a new /Info entry instead of just copying the old one.",,,,,,,,,,,,PDFBOX-5351,,,,"09/Nov/21 13:41;Schmidor;graustufen 200dp1i-1.pdf;https://issues.apache.org/jira/secure/attachment/13035883/graustufen+200dp1i-1.pdf","09/Nov/21 13:41;Schmidor;graustufen 200dp1i.pdf;https://issues.apache.org/jira/secure/attachment/13035884/graustufen+200dp1i.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 23 14:38:12 UTC 2021,,,,,,,,,,"0|z0wksw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Nov/21 15:14;mkl;As a side note: Having *Root* and *Info* share a single dictionary violates the PDF specification.
;;;","09/Nov/21 17:31;tilman;""Image Capture Plus is an application that transfers image data scanned by a Panasonic high-speed document scanner"" so there are probably millions of these files :-(;;;","10/Nov/21 17:11;jira-bot;Commit 1894920 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894920 ]

PDFBOX-5317: copy elements of /Info instead of copying the old one, as suggested by Oliver Schmidtmer;;;","10/Nov/21 17:11;jira-bot;Commit 1894921 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894921 ]

PDFBOX-5317: copy elements of /Info instead of copying the old one, as suggested by Oliver Schmidtmer;;;","23/Dec/21 14:20;mjk01;Unfortunately, there are still PDFs for which the Splitter does not work correctly,  i.e. the splitted documents have the same (full) size as the original document. I identified two cases:
 * PDFs created via the online PDF converter [https://online2pdf.com/]
 * PDFs created using the PHP library fpdf [http://www.fpdf.org/]

In these two cases (and possibly even more  PDF converter) the split pages still have the full size of the original document. Attached you find the original attachment for this report converted to PDF again using the [https://online2pdf.com/] tool for testing.;;;","23/Dec/21 14:38;lehmi;[~mjk01] Please open a new issue as this one was released and closed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stack overflow in PDColorSpace.create(),PDFBOX-5315,13410552,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,momaison,momaison,08/Nov/21 08:04,27/Jun/22 17:08,07/May/23 20:06,08/Nov/21 17:07,2.0.20,2.0.21,2.0.22,2.0.23,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,PDModel,,,,0,,,,"The fix of PDFBOX-4833 (handling of dictionary with /ColorSpace entry) introduces an infinite recursion bug in case the referenced dictionary is the color space itself.

Extract of a pdf that triggers the bug (see attachment):

*18 0 obj*
<</Type/XObject/Subtype/Image/Width 2794/Height 928/SMask 3 0 R/Length 13428/BitsPerComponent 8/Filter/FlateDecode/ColorSpace {*}18 0 R{*}>>

 ",,,,,,,,,,,PDFBOX-5467,,PDFBOX-4833,,,"08/Nov/21 08:04;momaison;bug_color_space.pdf;https://issues.apache.org/jira/secure/attachment/13035801/bug_color_space.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 08 17:07:44 UTC 2021,,,,,,,,,,"0|z0wixk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Nov/21 16:46;jira-bot;Commit 1894841 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894841 ]

PDFBOX-5315: avoid recursion;;;","08/Nov/21 16:46;jira-bot;Commit 1894842 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894842 ]

PDFBOX-5315: avoid recursion;;;","08/Nov/21 17:07;tilman;Fixed. Thanks for the report!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
`NullPointerException` when intersecting area with null clipping path,PDFBOX-5313,13410157,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tyrannosaurus,tyrannosaurus,05/Nov/21 02:29,17/Dec/21 06:50,07/May/23 20:06,05/Nov/21 18:05,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,,,,"Hey guys!

We got a PDF that manages to trigger the following NPE from {{PageDrawer}}:

 
{code:java}
 
java.lang.NullPointerException: null
 at java.desktop/java.awt.geom.Area.<init>(Area.java:126)
 at org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:900)
 at org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule.process(FillNonZeroRule.java:37)
 at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933)
 
{code}
 

The file even breaks on {{pdf-debugger}} (it fails to render).
  
 *Unfortunately, I can’t share the file.*


 Looking at the documentation for [{{Graphics.getClip()}}|https://docs.oracle.com/javase/6/docs/api/java/awt/Graphics.html#getClip()], it mentions that the result can be {{null}}, and if {{null}} is passed to the {{Area}} constructor this ends up in a {{NullPointerException}}. Further studying the {{PageDrawer}} code, it seems that {{graphics.getClip()}} shouldn't return {{null}}, however, we proposed a small fix in the following PR that seems to do the trick:

[https://github.com/apache/pdfbox/pull/133]",,,,,,,,,,,,,,,,"08/Nov/21 01:02;tyrannosaurus;evil.pdf;https://issues.apache.org/jira/secure/attachment/13035777/evil.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 09 17:24:23 UTC 2021,,,,,,,,,,"0|z0wgmg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Nov/21 15:52;jira-bot;Commit 1894761 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894761 ]

PDFBOX-5313: avoid NPE as suggested by Henry Iguaro; save and restore clip; closes #133;;;","05/Nov/21 15:52;jira-bot;Commit 1894762 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894762 ]

PDFBOX-5313: avoid NPE as suggested by Henry Iguaro; save and restore clip; closes #133;;;","05/Nov/21 18:05;tilman;Thanks for reporting this. I suspect that in your file a shading is done immediately after another shading, or at as the first operation. Because these were the two occurrences where the clip might be null. I have fixed the second one too, although it has no effect on test files.;;;","08/Nov/21 01:03;tyrannosaurus;I can't share the original but I managed to reproduce the problem with the following: [^evil.pdf];;;","08/Nov/21 03:39;tilman;This file doesn't fail with 2.0.24.;;;","09/Nov/21 17:24;jira-bot;Commit 1894878 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894878 ]

PDFBOX-5313: forgot to delete the line that made the NPE;;;","09/Nov/21 17:24;jira-bot;Commit 1894879 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894879 ]

PDFBOX-5313: forgot to delete the line that made the NPE;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decryption for V4 fails when no Length entry is set in Encryption Dictionary,PDFBOX-5312,13410079,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,moritzf,moritzf,04/Nov/21 15:06,17/Dec/21 06:50,07/May/23 20:06,08/Dec/21 09:38,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Crypto,,,,0,,,,"The PDF standard defines the ""Length"" entry in the encryption dictionary to only have an effect in V2 or V3.

However, PDFBox relies on that value for V4 as well and fails to decrypt files that do not define this length entry. It does not consider the length entry in the crypt filter dictionary instead that could be used to get information about the length:
 <</StdCF
 <</CFM
 /AESV2/Length
 16>>>>

It should be noted that Adobe Acrobat generates files with the required ""Length"" entry in the encryption dictionary even when V4 is used. Therefore PDFBox correctly processes output from Adobe Acrobat. It would however be desirable for PDFBox to also handle other output that conforms to the PDF-Standard.

I attached a file that is encrypted with an empty password and fails to be decrypted by pdfbox. However, you can open it with SumatraPDF, Acrobat Reader, Okular etc. (ignore the text on the actual page of the pdf-file ... our application read an RC4 file and wrote the output as AES 128Bit)",,,,,,,,,,,,PDFBOX-5345,,,,"04/Nov/21 15:04;moritzf;ausdat.pdf;https://issues.apache.org/jira/secure/attachment/13035701/ausdat.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 08 09:38:17 UTC 2021,,,,,,,,,,"0|z0wg54:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Nov/21 18:34;tilman;From the PDF 2.0 specification draft:
{quote}
When CFM is AESV2, the Length key shall be ignored and a value of 128 bits used. When CFM is AESV3, the Length key shall be ignored and a value of 256 bits used.
{quote};;;","04/Nov/21 18:51;jira-bot;Commit 1894740 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894740 ]

PDFBOX-5312: set key lengths per PDF specification, as suggested by Moritz Flöter;;;","04/Nov/21 18:51;jira-bot;Commit 1894741 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894741 ]

PDFBOX-5312: set key lengths per PDF specification, as suggested by Moritz Flöter;;;","04/Nov/21 18:54;mkl;From the ISO 32000-2:2020 update:

{panel:title=Table 25 — Entries common to all crypt filter dictionaries — *Length* entry}
When *CFM* is _AESV2_, the *Length* key shall have the value of 128. When *CFM* is _AESV3_, the *Length* key shall have a value of 256.
NOTE (2020) The Length key was corrected to be required and the descriptive text updated.
{panel};;;","08/Nov/21 10:42;moritzf;thanks for the quick fix and references to the pdf specification. Looks good to me.;;;","08/Dec/21 09:37;jira-bot;Commit 1895686 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895686 ]

PDFBOX-5312: improve javadoc;;;","08/Dec/21 09:37;jira-bot;Commit 1895688 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895688 ]

PDFBOX-5312: improve javadoc;;;","08/Dec/21 09:38;tilman;Thanks for reporting this!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slow rendering for specific PDF File with small chunks 16x8,PDFBOX-5310,13409163,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,Schmidor,Schmidor,29/Oct/21 16:58,17/Dec/21 06:50,07/May/23 20:06,04/Nov/21 18:38,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,optimization,,,"I have another PDF with many small chunks. From PDFBOX-5051 we see chunk sizes of either 1px with or height.

This PDF contains chunks with a size of ~16x8 and rendering times could also be improved by a huge factor if the conditions at [https://github.com/apache/pdfbox/blob/283d6f8cdd1695ebe8515355b17ddea7527b5f96/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java#L349] are changed accordingly.",,,,,,,,,,,,,PDFBOX-5051,,,"30/Oct/21 03:54;tilman;PDFJS-3096.pdf;https://issues.apache.org/jira/secure/attachment/13035494/PDFJS-3096.pdf","29/Oct/21 16:58;Schmidor;TestAusgangsbeleg.pdf;https://issues.apache.org/jira/secure/attachment/13035484/TestAusgangsbeleg.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 04 10:00:36 UTC 2021,,,,,,,,,,"0|z0wai0:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Oct/21 03:56;tilman;Changing this from
{code:java}
 if (src.getWidth() == 1 || src.getHeight() == 1){code}
to
{code:java}
 if (raster.getWidth() * raster.getHeight() < 100){code}
make a few renderings worse, e.g. the attached file (bottom left).

JDK18 will have a fix for the slow performance of ColorConvertOp (I haven't tested it).

[https://bugs.openjdk.java.net/browse/JDK-8041125];;;","30/Oct/21 11:37;tilman;I tested JDK18 and it wasn't faster.

While thinking about the JDK issue, I had a idea, why not create ColorConvertOp just once? Now your file is much faster.;;;","30/Oct/21 11:41;jira-bot;Commit 1894631 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894631 ]

PDFBOX-5310: create ColorConvertOp only once;;;","30/Oct/21 11:41;jira-bot;Commit 1894632 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894632 ]

PDFBOX-5310: create ColorConvertOp only once;;;","04/Nov/21 10:00;Schmidor;Yes, that is much faster and should help in a more universal way. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Load a font which is from Mac OS throw an exception,PDFBOX-5309,13409022,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,berylbai,berylbai,29/Oct/21 03:20,06/Nov/21 11:44,07/May/23 20:06,06/Nov/21 11:44,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"Using PDType0Font.load to load a font which is from Mac OS,  it throws an exception:

!error.png![^Sample.zip]

 ",,,,,,,,,,,,,,,,"29/Oct/21 03:20;berylbai;Sample.zip;https://issues.apache.org/jira/secure/attachment/13035455/Sample.zip","29/Oct/21 03:19;berylbai;error.png;https://issues.apache.org/jira/secure/attachment/13035456/error.png",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 29 15:14:59 UTC 2021,,,,,,,,,,"0|z0w9mo:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Oct/21 06:21;tilman;This might indeed be a bug. I ran your file through this service

[https://transfonter.org/ttc-unpack]

that I have never heard of before (so check the result ttf files with virustotal and don't double click on them) and I was able to open the HelveticaNeue-01.ttf file with PDFBox with no troubles.;;;","29/Oct/21 15:14;tilman;I did some more research into this, using the TTC and TTF specification and looking at the ttc file with a hex editor (NOTEPAD++ plugin). The conversion tool adds encoding records that were not in the ttc file. The ttc file has only one encoding record which isn't good enough for PDFBox (PLATFORM_UNICODE + ENCODING_WIN_UNICODE_BMP). See the logic in TrueTypeFont.getUnicodeCmapImpl().

So I'd recommend you either use a different font, or try to use the tool I mentioned to see if that works.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Image lost on page render,PDFBOX-5307,13408391,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,Brunarskyi,Brunarskyi,26/Oct/21 09:30,27/Oct/21 16:30,07/May/23 20:06,,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"One image lost on page render (debug & PDFToImage commands)

Pdf Looks correct in acrobat reader",mac os,,,,,,,,,,,,,,,"27/Oct/21 16:30;tilman;PDFBOX-5307-reduced.pdf;https://issues.apache.org/jira/secure/attachment/13035407/PDFBOX-5307-reduced.pdf","26/Oct/21 09:27;Brunarskyi;issue_file.pdf;https://issues.apache.org/jira/secure/attachment/13035344/issue_file.pdf","26/Oct/21 09:27;Brunarskyi;issue_file_pdfbox_result.jpg;https://issues.apache.org/jira/secure/attachment/13035343/issue_file_pdfbox_result.jpg","27/Oct/21 06:20;tilman;lumi-662-1635315280003.png;https://issues.apache.org/jira/secure/attachment/13035393/lumi-662-1635315280003.png","26/Oct/21 09:35;Brunarskyi;screenshot from acrobat.png;https://issues.apache.org/jira/secure/attachment/13035345/screenshot+from+acrobat.png",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 27 06:19:23 UTC 2021,,,,,,,,,,"0|z0w5qg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Oct/21 17:20;tilman;this is here:
{code}
Root/Pages/Kids/[0]/Resources/XObject/fzFrm0/Resources/XObject/fullpage/Resources/XObject/Fm14
{code}
I doubt we'll be able to fix this soon. This is related to CMYK transparency groups and a softmask.
;;;","27/Oct/21 05:44;tilman;The softmask at 
{code}
Root/Pages/Kids/[0]/Resources/XObject/fzFrm0/Resources/XObject/fullpage/Resources/XObject/Fm14/Resources/ExtGState/GS1/SMask/G
{code}
is mostly black because
{code}
q
  /GS0 gs
  220.3272 0 0 102.4838 237.90558 112.27924 cm
  q
    8.16326E-4 0 0 0.001754386 0 0 cm
    /XO1 Do
  Q
Q
{code}
produces nothing due to the very small CTM. The backdrop is mostly black, the last of the 4 CMYK numbers is 0.92.

A test with an empty softmask and no backdrop brings the same problem but Adobe shows the image.;;;","27/Oct/21 06:19;tilman;My understanding of softmasks is that ""white"" is what stays, and ""black"" is what is removed. This would mean our rendering is correct. But obviously it isn't. If this ""rule"" is different with CMYK, then it would mean we'd have many bad rendering on softmasks but that isn't the case.
So I'm wondering if we possibly hit some weird corner case.

Example of another softmask
 !lumi-662-1635315280003.png! ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pdf-A/1b Validation,PDFBOX-5305,13407796,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,giuseppe.giordano1992,giuseppe.giordano1992,21/Oct/21 15:46,21/Apr/22 15:38,07/May/23 20:06,20/Dec/21 15:59,1.8.16,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.26,3.0.0 PDFBox,,Preflight,,,,0,,,,"Good Morning,

I've this PDF/A-1B generated with Adobe Livecycle, but validating it I obtain this error:

 

Error code : 1.2.7 | Dettagli : Body Syntax error, HQDKMD+MyriadPro-Regular: Filter specified in font file metadata dictionnary

 

My code is the same of https://pdfbox.apache.org/1.8/cookbook/pdfavalidation.html

Can you help me?
Thanks
 ",,,,,,,,,,,,,,,,"22/Oct/21 07:13;giuseppe.giordano1992;pdfA.pdf;https://issues.apache.org/jira/secure/attachment/13035226/pdfA.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 12 18:30:38 UTC 2022,,,,,,,,,,"0|z0w228:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Oct/21 07:04;mkl;Please share the PDF/A file in question.;;;","22/Oct/21 07:14;giuseppe.giordano1992;I have attached the file.

Giuseppe.;;;","22/Oct/21 11:46;mkl;Ah, ok.

Here PDFBox finds fault with the *Metadata* stream of a font having a *Filter*.

This most likely is due to the original version of the PDF specification ISO 19005-1:2005 containing this requirement:
{quote}Metadata object stream dictionaries shall not contain the Filter key.
{quote}
It is at the end of a longer paragraph starting with
{quote}The document catalog dictionary of a conforming file shall contain the Metadata key. The metadata stream that forms the value of that key shall conform to XMP Specification.
{quote}
It is not clear here, though, whether the requirement at the end of that paragraph refers only to Metadata streams in the document catalog or to arbitrary Metadata streams.

PDFBox validation implements this requirement as referring to _arbitrary Metadata streams_, in particular also to those of fonts.

Meanwhile, though, that paragraph (actually the whole subclause it is contained in) has been replaced by the TECHNICAL CORRIGENDUM 2, and in the new form the requirement in question says:
{quote}The metadata stream dictionary, which is the value of the Metadata key in the document catalog dictionary, shall not contain the Filter key.
{quote}
Thus, this indeed is a bug, the corrigenda of the specification seem not to have been (completely) implemented.;;;","22/Oct/21 12:46;msahyoun;[~mkl] didn't look at the document but PDFTools is also complaining about the Filter. Thoughts?;;;","22/Oct/21 14:18;mkl;I didn't find any other relevant mentioning of *Filter* in ISO 19005-1 and the two technical corrigenda. Thus, I think my comment above holds

So maybe PDFTools simply also hasn't fully implemented the corrigenda yet.

veraPDF also is complaining about the *Filter*. But they at least explain and in the explanation refer to the original wording. So they definitively ignore the second corrigendum in this context.

I created a veraPDF issue on that problem: https://github.com/veraPDF/veraPDF-library/issues/1195;;;","22/Oct/21 17:32;tilman;After fixing it, I get ""7.1 : Error on MetaData, xmp should start with a processing instruction"". Maybe because there is no ""xpacket"".;;;","22/Oct/21 17:34;jira-bot;Commit 1894486 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894486 ]

PDFBOX-5305: remove check for filters, as suggested by mkl per TECHNICAL CORRIGENDUM 2 which requests this only for catalog metadata xmp;;;","22/Oct/21 17:34;jira-bot;Commit 1894487 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894487 ]

PDFBOX-5305: remove check for filters, as suggested by mkl per TECHNICAL CORRIGENDUM 2 which requests this only for catalog metadata xmp;;;","22/Oct/21 17:49;jira-bot;Commit 1894488 from Tilman Hausherr in branch 'pdfbox/branches/1.8'
[ https://svn.apache.org/r1894488 ]

PDFBOX-5305: remove check for filters, as suggested by mkl per TECHNICAL CORRIGENDUM 2 which requests this only for catalog metadata xmp;;;","24/Oct/21 13:17;mkl;{quote}[~tilman]> After fixing it, I get ""7.1 : Error on MetaData, xmp should start with a processing instruction"". Maybe because there is no ""xpacket"".{quote}

This might be another issue of ""refers only to the catalog metadata"". Or it might indeed be an error in the file.

I've not yet dived deep enough into the PDF/A and related specifications to know why and where that PI is required... and unfortunately the message shown does not refer to a specific specification clause.;;;","29/Oct/21 16:18;boris.doubrov;Copying the comment from the corresponding veraPDF issue discussion:

This question has been discussed and documented in PDF Association's TN0010 note: [https://www.pdfa.org/wp-content/uploads/2017/07/TechNote0010.pdf] - Compressed non-document Metadata in PDF/A-1 (A017).

This is exactly the reason why veraPDF raises a validation error on compressed non-Catalog Metadata. ;;;","31/Oct/21 11:20;mkl;As that PDFA TN also argues with the original formulation, not the corrigendum formulation, I'd propose to make that a question to the TWG.

Actually I have the impression that this commentary item actually had been written long before that TN was published, probably before the corrigendum was published, and then was included in the TN without checking whether it still applies.

[~boris.doubrov] - as you chair that TWG, could you add that issue to the agenda?;;;","01/Nov/21 15:15;boris.doubrov;[~mkl] yes, absolutely. I'll add this question to the agenda of the next PDF/A TWG call;;;","01/Nov/21 15:29;mkl;{quote}yes, absolutely. I'll add this question to the agenda of the next PDF/A TWG call{quote}

Great!

By the way, what would be the ""official"" way to forward clarification requests on PDFA TNs? Not everyone has the advantage of having you involved in the issue early on...
Or for PDF/A related questions in general? For PDF-2 there is github.com/pdf-association/pdf-issues but for everything else...?;;;","20/Dec/21 15:43;mkl;As has been [posted on the parallel verapdf issue|https://github.com/veraPDF/veraPDF-library/issues/1195#issuecomment-996568993]:

{panel:title=bdoubrov commented 3 days ago}
This has been discussed and confirmed at PDF/A TWG (the corrigendum is correct and Technical Note 0010 requires an update). The next step would be to publish the update to Technical Note 0010 and then change the behavior of veraPDF validator.
{panel}

Thus, reducing filter checks here to the catalog metadata alone instead of all metadata is correct.;;;","20/Dec/21 15:59;tilman;Thanks [~mkl] [~boris.doubrov] !;;;","20/Dec/21 16:00;tilman;[~giuseppe.giordano1992] The change is in the 2.0.25 release despite the ""fix"" version above.;;;","20/Dec/21 16:43;giuseppe.giordano1992;Thank you all.

Giuseppe.;;;","10/Jan/22 11:47;giuseppe.giordano1992;[~tilman]
Do you have any idea when the error ""7.1 : Error on MetaData, xmp should start with a processing instruction"" is going to be fixed? Thank you.;;;","12/Jan/22 04:11;tilman;I missed that topic. However I don't know for sure if what we do is wrong.;;;","12/Jan/22 10:39;giuseppe.giordano1992;Hi [~tilman],
reading [~mkl] comment, indicated that ""Thus, reducing filter checks here to the catalog metadata alone instead of all metadata is correct."" or am I wrong?;;;","12/Jan/22 18:30;tilman;The filter is another thing. The current error is about the missing ""xpacket"" line.;;;",,,,,,,,,,,,,,,,
preflight-app fails on Java 11+ with NoClassDefFoundError: javax/activation/DataSource,PDFBOX-5303,13407721,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,sebb,sebb,21/Oct/21 09:26,18/Mar/23 17:05,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"As the subject says.

I could only get the app to work on Java8 and Java7",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Mar 18 17:05:15 UTC 2023,,,,,,,,,,"0|z0w1lk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Oct/21 17:19;tilman;Activation and bind are no longer part of java, you need to add it externally. It's a bit tricky, you need to call the class you're running and then use the pdfbox-app jar and the two other jars as class path. Here an example for windows, the extra jar files are in the lib subdir.
{noformat}
java -cp ""pdfbox-app-2.0.24.jar;./lib/*"" org.apache.pdfbox.tools.PDFBox ....
{noformat}

(On linux use "":"" instead of "";"")
;;;","22/Oct/21 17:54;sebb;It would be helpful to document this on the website.

 

Or is it possible to include the missing jars in the app bundle for Java versions that don't include them?;;;","23/Oct/21 04:05;tilman;We can't include them because of the license.

I agree re website. Where did you download it? The jakarta website https://eclipse-ee4j.github.io/jaxb-ri/ is confusing.

We do it automatically with maven when building
{code}
<dependencies>
    <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.1</version>
    </dependency>
    <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.1.1</version>
    </dependency>
</dependencies>
{code}

so the files would be this:
https://repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar
https://repo1.maven.org/maven2/javax/activation/activation/1.1.1/activation-1.1.1.jar;;;","23/Oct/21 06:09;tilman;You can also use the 3.0 beta, that one doesn't need the two anymore.;;;","23/Oct/21 10:07;sebb;I downloaded the preflight checker from:

[https://pdfbox.apache.org/download.html]

If you are updating that page to add a note on the dependencies it would help to note the minimum Java versions for each release as well.

 

I have not downloaded the missing jars; instead I used Java8.;;;","18/Mar/23 17:05;jira-bot;Commit 9f6307467ed3d6080425d329e68cc4688f09a64f in pdfbox-docs's branch refs/heads/master from Andreas Lehmkühler
[ https://gitbox.apache.org/repos/asf?p=pdfbox-docs.git;h=9f630746 ]

PDFBOX-5303: added minimum java version
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When PDF is converted to an image, the image has a large black rectangle.",PDFBOX-5302,13407720,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Blocker,Fixed,tilman,ken kang,ken kang,21/Oct/21 09:25,17/Dec/21 06:50,07/May/23 20:06,21/Oct/21 19:51,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,1,,,,"When PDF is converted to an image, the image has a large black rectangle.

image = renderer.renderImageWithDPI(0, 144);

Please see the attachment for details.",java,,,,,,,,,PDFBOX-5301,,,,,,"21/Oct/21 09:25;ken kang;200029_0_ocr.jpeg;https://issues.apache.org/jira/secure/attachment/13035192/200029_0_ocr.jpeg","21/Oct/21 09:25;ken kang;pdf200029.pdf;https://issues.apache.org/jira/secure/attachment/13035191/pdf200029.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,9223372036854775807,,,Java,Fri Oct 22 17:24:13 UTC 2021,,,,,,,,,,"0|z0w1lc:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Oct/21 19:11;tilman;The PDF has this:
{code}
0 0 1155 1563 re
q
  1 0 0 1 0 0 cm
  /Xf2 Do
Q
W
{code}
So there is a rectangle path that isn't consumed and passed to the ""Xf2"" form XObject. I'll fix that.
;;;","21/Oct/21 19:13;jira-bot;Commit 1894457 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894457 ]

PDFBOX-5302: save and reset linePath before drawing a form, in case an existing path hasn't been consumed;;;","21/Oct/21 19:13;jira-bot;Commit 1894458 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894458 ]

PDFBOX-5302: save and reset linePath before drawing a form, in case an existing path hasn't been consumed;;;","21/Oct/21 19:51;tilman;Snapshot here:
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/;;;","22/Oct/21 17:24;tilman;Also thank you for reporting this!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDF转图片的时候，图片有很大一块的黑框,PDFBOX-5301,13407716,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Blocker,Duplicate,,ken kang,ken kang,21/Oct/21 09:19,22/Oct/21 17:23,07/May/23 20:06,22/Oct/21 17:23,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"image = renderer.renderImageWithDPI(0, 144);

用这个方法将PDF转成图片的时候，图片会有很大一块黑框。

详情可以看附件。",,,,,,,,,,,PDFBOX-5302,,,,,"21/Oct/21 09:17;ken kang;200029_0_ocr.jpeg;https://issues.apache.org/jira/secure/attachment/13035187/200029_0_ocr.jpeg","21/Oct/21 09:17;ken kang;pdf200029.pdf;https://issues.apache.org/jira/secure/attachment/13035188/pdf200029.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,9223372036854775807,,,Java,Fri Oct 22 17:23:51 UTC 2021,,,,,,,,,,"0|z0w1kg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Oct/21 09:35;mkl;{panel:title=Translation (by google):}
h1. When converting PDF to image, the image has a large black frame

{code:java}image = renderer.renderImageWithDPI(0, 144);{code}
When using this method to convert PDF to image, the image will have a large black frame.

See the attachment for details.
{panel}

 ;;;","22/Oct/21 17:23;tilman;Closing as duplicate of PDFBOX-5302, which has been fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException: Cannot decrypt PDF, the password is incorrect",PDFBOX-5299,13407646,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,daniel.ling,daniel.ling,21/Oct/21 01:35,23/Oct/21 02:27,07/May/23 20:06,23/Oct/21 02:27,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,"21/Oct/21 01:34;daniel.ling;error.log;https://issues.apache.org/jira/secure/attachment/13035173/error.log",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Oct 23 02:27:36 UTC 2021,,,,,,,,,,"0|z0w14w:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Oct/21 06:08;tilman;Either the password is incorrect, or there is a bug on our side that we can't work on without the PDF and the password.;;;","21/Oct/21 07:33;mkl;It might be a case of a PDF where only peripheral objects are encrypted (in particular only attached files) and the crypt filter *AuthEvent* is set to *EFOpen* (""Authorization shall be required when accessing embedded files."").

Adobe Acrobat won't ask for a password unless the attached files are requested. PDFBox on the other hand does not consider the *AuthEvent* value but wants to decrypt upon loading anyways.;;;","23/Oct/21 02:27;daniel.ling;have checked original pdf. Pdf was password protected. Issue is with pdf;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unneeded / double code in PageExtractor,PDFBOX-5298,13407593,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,20/Oct/21 17:53,17/Dec/21 06:50,07/May/23 20:06,20/Oct/21 17:59,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Utilities,,,,0,,,,"valerybokov mentioned this in PR 107:
{quote}
I found one strange detail in a PageExtractor class. An interesting process is going on inside the extraction method. In the loop we calling the importPage method. Inside this method we changing the cropbox, mediabox and rotation for an imported page. We doeing the same in the PageExtractor.extract method. Maybe you will remove unneeded initialisations of the cropbox etc. Also, the importPage method notifies us about resources but we doeing right operation with resources in the PageExtractor.extract method (inherited resources of source document are not imported to...). 
{quote}
I'll remove the calls and make the resource setting conditional as suggested in ImportPage.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 20 17:55:09 UTC 2021,,,,,,,,,,"0|z0w0t4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Oct/21 17:54;jira-bot;Commit 1894414 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894414 ]

PDFBOX-5298: remove unneeded code / make code conditional;;;","20/Oct/21 17:55;jira-bot;Commit 1894415 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894415 ]

PDFBOX-5298: remove unneeded code / make code conditional;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
class org.apache.pdfbox.cos.COSName cannot be cast to class org.apache.pdfbox.cos.COSString,PDFBOX-5297,13407394,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,newhouse-anvil,newhouse-anvil,19/Oct/21 22:05,17/Dec/21 06:50,07/May/23 20:06,31/Oct/21 04:18,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,AcroForm,,,,0,,,,"A customer provided us with a PDF that contains an AcroForm and has some of the data filled in. There are various ways to trigger the error, but here's a stacktrace:
{code:java}
class org.apache.pdfbox.cos.COSName cannot be cast to class org.apache.pdfbox.cos.COSString (org.apache.pdfbox.cos.COSName and org.apache.pdfbox.cos.COSString are in unnamed module of loader 'app')
 at org.apache.pdfbox.pdmodel.interactive.form.PDVariableText.getDefaultAppearanceString(PDVariableText.java:91)
 at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.<init>(AppearanceGeneratorHelper.java:114)
 at org.apache.pdfbox.pdmodel.interactive.form.PDTextField.constructAppearances(PDTextField.java:263)
 at org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.refreshAppearances(PDAcroForm.java:331)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.base/java.lang.reflect.Method.invoke(Method.java:566){code}
The PDF contains sensitive user information, so I cannot post it here publicly, but I'd be willing to submit it to a private upload area. When I use an editor to remove/change the sensitive data, the problem goes away or sprouts up as a different error (related to fonts).

 

Here is a little bit of metadata I can provide right now:
{code:java}
{
 ""Author"": ""SE:W:CAR:MP"",
 ""CreationDate"": ""D:20211012165530Z00'00'"",
 ""Creator"": ""Adobe LiveCycle Designer ES 9.0"",
 ""Keywords"": ""Fillable"",
 ""ModDate"": ""D:20211012165530Z00'00'"",
 ""Producer"": ""macOS Version 10.15.7 (Build 19H1417) Quartz PDFContext"",
 ""Subject"": ""Request for Taxpayer Identification Number and Certification"",
 ""Title"": ""Form W-9 (Rev. October 2018)""
}{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 17 00:47:07 UTC 2021,,,,,,,,,,"0|z0vzkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Oct/21 06:12;jira-bot;Commit 1894398 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894398 ]

PDFBOX-5297: avoid ClassCastException;;;","20/Oct/21 06:12;jira-bot;Commit 1894399 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894399 ]

PDFBOX-5297: avoid ClassCastException;;;","20/Oct/21 17:19;tilman;Please try with a snapshot
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/

I expect more exceptions because now the /DA entry is considered null and this is an illegal parameter in another method. That PDF file is likely very messed up. You can send it to me at tilman (at) snafu dot de .;;;","20/Oct/21 17:24;jira-bot;Commit 1894412 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894412 ]

PDFBOX-5297: avoid ClassCastException;;;","20/Oct/21 17:25;jira-bot;Commit 1894413 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894413 ]

PDFBOX-5297: avoid ClassCastException;;;","20/Oct/21 22:13;newhouse-anvil;PDF sent to you, thanks.

 

I'm not sure if I'll be able to find the time to try things using the Snapshot...but I will try.;;;","21/Oct/21 03:19;tilman;Wow, it has this multiple times:
{code}
/DA /Helvetica#209#20Tf#200#20g 
{code}
instead of
{code}
/DA (/Helvetica 9 Tf 0 g) 
{code}
Also, that font doesn't exist in the AcroForm default resources.;;;","21/Oct/21 20:16;newhouse-anvil;Looks like a busted form of URL-encoding...is there a way to fix or handle this in PDF Box or AcroForm?

If I can detect and/or fix these problems when they come through, I'd love to do that.;;;","22/Oct/21 17:17;tilman;It is a bug by the software filling that form. I have a fix but need to test it, but first I need to finish fixing a hardware problem with my PC.;;;","22/Oct/21 18:01;newhouse-anvil;ok, thank you for the update. I'll stay tuned.

Good luck with your hardware issue:

!https://bleuwire.com/wp-content/uploads/2019/07/computer-repair-services-miami.jpg|width=228,height=152!;;;","23/Oct/21 03:07;tilman;That file has multiple errors, it also didn't use the standard font names or add the fonts to the acroform default resources. You can repair it with this code before calling refreshAppearances:
{code}
for (PDField field : acroForm.getFieldTree())
{
    if (field instanceof PDVariableText)
    {
        COSBase daBase = field.getCOSObject().getDictionaryObject(COSName.DA);
        if (daBase instanceof COSName)
        {
            String da = ((COSName) daBase).getName();
            if (da.startsWith(""Helvetica""))
            {
                da = da.replace(""Helvetica"", ""/Helv"");
            }
            else if (da.startsWith(""ZapfDingbatsITC""))
            {
                da = da.replace(""ZapfDingbatsITC"", ""/ZaDb"");
            }
            ((PDVariableText) field).setDefaultAppearance(da);
        }
    }
}
acroForm.refreshAppearances();
{code};;;","28/Oct/21 21:17;newhouse-anvil;[~tilman] thank you so much for the ""fix""! Very appreciated!

 

I noticed that the call to `setDefaultAppearances` is made in every iteration of the innermost loop, and not just when we've replaced some bad strings. Is this intentional? I'm guessing it is, and that the reason why is because if we're in that far, the `daBase` is a `COSName`, and needs to be ""fixed"", ya?

 

I'm just trying to understand how much of the above code is specific to the file I provided you, versus being something generically applicable to many files that may have a similar problem.

 

Also, will this become part of the library in a new version? Does it have any visual impact on the document if it's performed?

 

Many thanks!!!;;;","29/Oct/21 02:16;tilman;Yes it is correct, it shouldn't be a name.

(I just woke up, which is the reason for the (deleted) answer);;;","29/Oct/21 02:18;tilman;It is specific to this file, I've never seen this in the wild before. But obviously there is some software out there that produces these bad files. The code presented here won't hurt correct files.;;;","29/Oct/21 17:17;newhouse-anvil;OK, great, thanks! Inspired by this code/fix we've also come across another bad file where `daBase` was an instance of `COSString`, but its value was `/Helvetica blah blah blah`. The above code didn't fix it. So I modified it to be something like the following, and it fixed things. Does this look reasonable?
{code:java}
for (PDField field : acroForm.getFieldTree()) {
  if (field instanceof PDVariableText) {
    String da;
    
    // If it was a COSName, it really ought to result in a setDefaultAppearance call, per the comments
    // in the PDFBOX issue above. Otherwise, we can probably avoid the call to setDefaultAppearance if
    // it was already a COSString AND we didn't knowingly fix anything.
    boolean wasCosName = false;

    COSBase daBase = field.getCOSObject().getDictionaryObject(COSName.DA);

    if (daBase instanceof COSName) {
      da = ((COSName) daBase).getName();
      wasCosName = true;
    } else if (daBase instanceof COSString) {
      da = ((COSString) daBase).getString();
    } else {
      // Can't do anything about this one...
      continue;
    }

    boolean wasFixedThisRound = false;

    if (da.startsWith(""Helvetica"")) {
      da = da.replace(""Helvetica"", ""/Helv"");
      wasFixedThisRound = true;
    }
    else if (da.startsWith(""/Helvetica"")) {
      da = da.replace(""/Helvetica"", ""/Helv"");
      wasFixedThisRound = true;
    }
    else if (da.startsWith(""ZapfDingbatsITC"")) {
      da = da.replace(""ZapfDingbatsITC"", ""/ZaDb"");
      wasFixedThisRound = true;
    }
    else if (da.startsWith(""/ZapfDingbatsITC"")) {
      da = da.replace(""/ZapfDingbatsITC"", ""/ZaDb"");
      wasFixedThisRound = true;
    }    
    else if (!da.startsWith(""/"")) {
      // Log here anything that doesn't start with `/`
    }

    if (wasFixedThisRound || wasCosName) {
      ((PDVariableText) field).setDefaultAppearance(da);
    }
  }
}
{code};;;","29/Oct/21 17:50;tilman;Yeah, looks OK.;;;","29/Oct/21 17:57;newhouse-anvil;Thank you very much [~tilman]!;;;","31/Oct/21 11:10;mkl;Beware, you shouldn't blindly replace away such ""/Helvetica"" or ""/ZapfDingbatsITC"" *DA* starts like that:

* If it starts with ""/Helvetica"" it might actually start with e.g. ""/HelveticaNeue"" and your replacement would make that a ""/HelvNeue"" which wouldn't really fix anything.
* There might actually be a ""/Helvetica"" font in the *DR* default resources. In that case replacing ""/Helvetica"" with ""/Helv"" might not be desired.
* The *DA* default appearance does not necessarily start with the font setting instruction. It usually does but you here try to fix unusual cases...

Thus, for a proper repair of the *DA* value you should correctly parse it into instructions, search the font setting instruction, and check its first argument. Then fix the font name if and only if it's not a name or it is a name that neither is the name of a font in the *DR* default resources nor one of the *Helv*, *HeBo*, ... set of names.;;;","02/Nov/21 16:48;newhouse-anvil;[~mkl] thank you for the thoughts there. I've created a Gist to show what I'm now thinking about doing based on all the comments here. Please have a look and feel free to comment:

[https://gist.github.com/newhouse/df88fa098bc0f003009cb70ed5815a48]

 

I'm not sure how to parse the *DA* into instructions, find the Font setting one and grab the first argument. Could you elaborate?

 

Also, could you elaborate on what the set of Font names that should be supported, even if they're not found in the *DR*?

 

Many thanks, again, to everyone!;;;","03/Nov/21 09:19;mkl;{quote}Please have a look and feel free to comment{quote}

It is improved insofar as you take the full first token until a space character. Nonetheless, there are many *DA* forms your code will misinterpret.

{quote}I'm not sure how to parse the DA into instructions, find the Font setting one and grab the first argument. Could you elaborate?{quote}

You might want to have a look at the PDFBox class {{org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString}}, in particular its {{processAppearanceStringOperators}} method and the other {{process...}} method called from there. This is how PDFBox extracts text font, text size, and text color information from the *DA* string.

{quote}Also, could you elaborate on what the set of Font names that should be supported, even if they're not found in the *DR*?{quote}

Strictly speaking, i.e. according to the specification, _none at all_. Nonetheless, Adobe Acrobat (and many other PDF form-fillers following Adobe's lead) accept a set of font names even if they are not defined in the *DR*, see [this PDFBox-1234 comment|https://issues.apache.org/jira/browse/PDFBOX-1234?focusedCommentId=14304601#comment-14304601].

;;;","17/Nov/21 00:47;newhouse-anvil;Thank you [~mkl] 

I have gone through the source code as you suggested, and have altered my gist to find the Font string by finding the *""Tf""* operator, then grabbing the element 2 positions behind it. This will handle the case where the *""Tf""* operation is not the first one to occur in the *DA* string.

 

I'll also carefully incorporate (privately) the font mappings in that are mentioned in that comment.

 

Many thanks!;;;",,,,,,,,,,,,,,,,,
Rendering error for file with softmask outside bounds,PDFBOX-5296,13407353,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,tilman,tilman,19/Oct/21 17:44,19/Oct/21 17:48,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"Follow-up of PDFBOX-3000. The attached file doesn't render correctly. I don't know if we ever get this fixed, but here's what I know.

In both cases the softmask is outside of the page bounds. The two softmasks are here (the second one is relevant for the bad square):
{noformat}
Root/Pages/Kids/[0]/Resources/XObject/Fm21/Resources/ExtGState/GS0/SMask
Root/Pages/Kids/[0]/Resources/ExtGState/GS29/SMask
{noformat}

returning {{Color(0, 0, 0, 0)}} (full transparency) in {{PageDrawer.applySoftMaskToPaint()}} instead of the {{parentPaint}} (which is a {{TexturePaint}}) brings a correct rendering. However this would break almost all other renderings with a softmask outside of bounds, e.g. PDFJS-7992.pdf, PDFBOX-2103.pdf, 007087-payment-due-p58.pdf and many more - ask if you're working on this. The softmask is in CMYK and there is a backdrop.",,,,,,,,,,,,,PDFBOX-3000,,,"19/Oct/21 17:44;tilman;gs-bugzilla690816.pdf;https://issues.apache.org/jira/secure/attachment/13035113/gs-bugzilla690816.pdf","19/Oct/21 17:43;tilman;gs-bugzilla690816.pdf-1-bad.png;https://issues.apache.org/jira/secure/attachment/13035115/gs-bugzilla690816.pdf-1-bad.png","19/Oct/21 17:43;tilman;gs-bugzilla690816.pdf-1-good.png;https://issues.apache.org/jira/secure/attachment/13035114/gs-bugzilla690816.pdf-1-good.png",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,2021-10-19 17:44:21.0,,,,,,,,,,"0|z0vzbs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.io.IOException: Expected string 'null' but missed at character 'u' at offset 1090371,PDFBOX-5295,13407193,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,daniel.ling,daniel.ling,19/Oct/21 03:01,23/Oct/21 02:26,07/May/23 20:06,23/Oct/21 02:26,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Parsing,,,,0,,,,"Would like to understand more on this error.

 

refer to screenshot for error.",,,,,,,,,,,,,,,,"21/Oct/21 01:32;daniel.ling;error_logs.txt;https://issues.apache.org/jira/secure/attachment/13035172/error_logs.txt","19/Oct/21 03:00;daniel.ling;screenshot_of_error.jpeg;https://issues.apache.org/jira/secure/attachment/13035069/screenshot_of_error.jpeg",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Oct 23 02:26:39 UTC 2021,,,,,,,,,,"0|z0vyc8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Oct/21 07:00;tilman;Please share your PDF. If possible include the stack trace as text, not as a photograph.;;;","21/Oct/21 03:08;tilman;Still no PDF. I can't help without the PDF, and maybe not even with the PDF. What happens here is that the parser expected a PDF dictionary object sees an ""n"" at a place in the parser where it can only mean ""null"" (which is a valid PDF object). But then no ""u"" comes => error.;;;","21/Oct/21 03:21;daniel.ling;Apologies. Still in the process of getting pdf from the user.;;;","22/Oct/21 06:14;daniel.ling;Is it possible to share the pdf through other means (e.g. email) ? The pdf contains sensitive personal information.;;;","22/Oct/21 07:26;daniel.ling;What I know is that the pdf can be opened by Adobe Acrobat Reader but when I attempt to save, it shows ""The document could not be saved. There was a problem reading this document (110)."";;;","22/Oct/21 11:55;mkl;{quote}What I know is that the pdf can be opened by Adobe Acrobat Reader but when I attempt to save, it shows ""The document could not be saved. There was a problem reading this document (110).""{quote}

That definitively indicates that there are errors in the PDF.

PDF viewers, in particular Adobe Acrobat Reader, tend to ignore or repair many errors in a PDF without even showing a warning when displaying the document. To save, though, the Reader appears to have stricter requirements...;;;","23/Oct/21 02:26;daniel.ling;Yes. I realised that yesterday. Thanks for your assistance.;;;","23/Oct/21 02:26;daniel.ling;Issue is with the pdf;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect rendering of Type3 character,PDFBOX-5294,13406082,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,kalaspuffar,kalaspuffar,12/Oct/21 07:19,17/Dec/21 06:50,07/May/23 20:06,12/Oct/21 09:21,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,type3,,,"Hi Team.

 

We got a report from one of our customers that their images weren't rendered correctly. Looking into it, we found that a Type3 character contained an image. 

 

That image was present on the character glyph resource table and not the font resource table which is a bit strange if you read the specification this should not be allowed. 


Then again Chrome, Opera, IE 11, and Adobe render this file correctly. But Safari, Firefox, and Poppler are not rendering this PDF correctly.

 

I've created a small patch that will solve this issue.

 

Best regards

Daniel",,,,,,,,,,,,,,,,"12/Oct/21 07:22;kalaspuffar;correct.png;https://issues.apache.org/jira/secure/attachment/13034816/correct.png","12/Oct/21 07:22;kalaspuffar;incorrect.png;https://issues.apache.org/jira/secure/attachment/13034817/incorrect.png","12/Oct/21 07:22;kalaspuffar;issue-1.pdf;https://issues.apache.org/jira/secure/attachment/13034818/issue-1.pdf","12/Oct/21 07:19;kalaspuffar;type3resources.patch;https://issues.apache.org/jira/secure/attachment/13034815/type3resources.patch",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,Tue Oct 12 09:21:51 UTC 2021,,,,,,,,,,"0|z0vri8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Oct/21 09:21;jira-bot;Commit 1894158 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1894158 ]

PDFBOX-5294: use resources in the charproc entry, as suggested by Daniel Persson;;;","12/Oct/21 09:21;jira-bot;Commit 1894159 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1894159 ]

PDFBOX-5294: use resources in the charproc entry, as suggested by Daniel Persson;;;","12/Oct/21 09:21;tilman;Thanks, fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException during Text Extraction,PDFBOX-5290,13405266,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,eric292,eric292,06/Oct/21 19:24,15/Oct/21 18:42,07/May/23 20:06,15/Oct/21 18:42,2.0.20,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Text extraction,,,,0,,,,"I am getting: 

 

java.lang.ClassCastException: org.apache.pdfbox.cos.COSDictionary cannot be cast to org.apache.pdfbox.cos.COSArray

When executing the following code:

 

public byte[] extractTextPDFBox(String fileNamePath) throws PQException {

String UTF_8 = ""UTF-8"";

PDFLibraryProperties pdfLibraryProperties = PDFLibraryProperties.getInstance();
 String regex = pdfLibraryProperties.getAsString(PDFLibraryConstants.REGEX_TO_REMOVE_FROM_EXTRACTED_TEXT);

byte[] bytesToReturn;
 try {
 FileInputStream fis = new FileInputStream(new File(fileNamePath));
 PDDocument pdfDoc = PDDocument.load(fis);
 PDFTextStripper pdfStripper = new PDFTextStripper();
 String textFromPDF = pdfStripper.getText(pdfDoc);
 pdfDoc.close();
 bytesToReturn = textFromPDF.getBytes(UTF_8);
 String textStr = new String(bytesToReturn).replaceAll(regex, PDFLibraryConstants.BLANK_SPACE);
 bytesToReturn = textStr.getBytes();
 fis.close();
 } catch (IOException e) {
 pqUtilityLogger.logError(e.getMessage());
 throw new PQException(""e.getMessage());
 }
 return bytesToReturn;
 }

 

It dies on String textFromPDF = pdfStripper.getText(pdfDoc);

 ",,,,,,,,,,,,,,,,"06/Oct/21 19:24;eric292;newBroke.pdf;https://issues.apache.org/jira/secure/attachment/13034613/newBroke.pdf","06/Oct/21 20:37;msahyoun;newBroke.txt;https://issues.apache.org/jira/secure/attachment/13034616/newBroke.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,9223372036854775807,,,,Fri Oct 15 18:42:49 UTC 2021,,,,,,,,,,"0|z0vmgw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Oct/21 20:39;msahyoun;Works for me using the PDFBox command line too ExtractText - see https://pdfbox.apache.org/2.0/commandline.html#extracttext

Do you get any error message?  ;;;","06/Oct/21 21:08;eric292;Nope.  It works when I run it from the command line.  Uhh hmm.  Okay thanks...Sorry I didn't try that first.

 

I assume when I do the ExtractText command line thingy, its using PDFTextStripper object?;;;","07/Oct/21 03:01;tilman;It happens with 2.0.20 on the command line but not with 2.0.24.;;;","07/Oct/21 13:18;eric292;I also double checked in my IDE that my ""external dependency"" to PDFBox was indeed 2.0.24.  It was.  Is it at all possible the app and the library are different?;;;","07/Oct/21 17:10;tilman;No they're the same (or rather, based on the same sub projects - the app is a merge of several jars). Please try a clean build / remove all old versions from the classpath, i.e. look into the directories what's there. If it still happens, please share the stack trace.;;;","08/Oct/21 13:57;eric292;I will test this today, and let y'all know.  I am skeptical because I don't see how a fresh built instance with the 2.0.24 version in the pom.xml would possibly get a different version on a newly created ""build-image"".  Locally, on my machine it ofc could make sense, but on a fresh instance...;;;","12/Oct/21 14:09;eric292;Still looking to test this.  (We honestly moved off PDFBox for extract text, but that caused more issues that resolutions) so I am going to be getting this sorted out soon, should be today or tomorrow.;;;","15/Oct/21 13:23;eric292;Guys this works as expected on 2.0.24.  Thank you very much for the patience and guidance. ;;;","15/Oct/21 13:23;eric292;This issue is fixed in the current 2.0.24 version!  I was using an older jar file of pdfbox;;;","15/Oct/21 18:42;tilman;Glad to hear that. Have a great weekend!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.io.IOException: Unknown dir object c='>' cInt=62 peek='>' peekInt=62 at offset 13377272 (start offset: 13377272),PDFBOX-5289,13405214,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,steviemo,steviemo,06/Oct/21 14:43,06/Oct/21 16:38,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Parsing,,,,0,,,,"{code:java}
java.io.IOException: Unknown dir object c='>' cInt=62 peek='>' peekInt=62 at offset 13377272 (start offset: 13377272)java.io.IOException: Unknown dir object c='>' cInt=62 peek='>' peekInt=62 at offset 13377272 (start offset: 13377272) at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:913) at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue(BaseParser.java:154) at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair(BaseParser.java:288) at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary(BaseParser.java:218) at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:857) at org.apache.pdfbox.pdfparser.COSParser.parseFileObject(COSParser.java:907) at org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically(COSParser.java:876) at org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically(COSParser.java:796) at org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically(COSParser.java:2858) at org.apache.pdfbox.pdfparser.PDFParser.initialParse(PDFParser.java:175) at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:226) at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1228) at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1128)
{code}

Please find the problematic PDF attached.",,,,,,,,,,,,,,,,"06/Oct/21 14:43;steviemo;Diplomacy by Henry Kissinger (1).pdf;https://issues.apache.org/jira/secure/attachment/13034608/Diplomacy+by+Henry+Kissinger+%281%29.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 06 16:38:32 UTC 2021,,,,,,,,,,"0|z0vm5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Oct/21 15:52;tilman;Your file has a syntax error at offset 13377272: {{/Producer >>}}. There should be a second ""/"" with a value. What you could do is to open the file in an editor like NOTEPAD++ and replace ""/Producer"" with the same amount of blanks.

You could also open the file with 3.0 alpha, that one uses a parse-on-demand model. The syntax is different, files are opened with {{Loader.loadPDF()}}.;;;","06/Oct/21 16:38;mkl;That syntax error apparently has been caused by someone removing the *Producer* value without knowing exactly what they do.

Also there are other peculiarities, e.g. illegal values in the trailer dictionary. Very likely the PDF originally had a cross reference stream, not a cross reference table, at least that would explain those entries.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Valid PDF/A 1B is rejected,PDFBOX-5288,13405152,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,manuelcr,manuelcr,06/Oct/21 08:25,02/Oct/22 08:15,07/May/23 20:06,,2.0.21,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Preflight,,,,0,,,,"When we try to validate a PDF/A 1B file, we get an not valid value with these error messages:
 * 7.3 - error on metadata, schema is not set in this document : http://ns.adobe.com/xap/1.0/stype/resourceevent#||
 * 1.2.5 - body syntax error, stream length is invalid [cobj=cosobject\{10, 0}; defined length=15; buffer2=endstream]
 * 1.2.5 - body syntax error, stream length is invalid [cobj=cosobject\{13, 0}; defined length=15; buffer2=endstream]

But this file is valid for veraPDF and at online validator ([https://www.pdf-online.com/osa/validate.aspx).]

 

We are working with 2.0.21 version and we also tried with 2.0.24, but same result is returned.",Java 1.8,,,,,,,,,,,,,,,"27/Sep/22 13:23;olivier.ceulemans@gmail.com;pdfa1a.pdf;https://issues.apache.org/jira/secure/attachment/13049824/pdfa1a.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Oct 02 08:15:21 UTC 2022,,,,,,,,,,"0|z0vlrk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Oct/21 10:18;mkl;Please always share an example PDF file when you report unexpected validation behavior.

Even though other validators let the file pass, it might be invalid.

Many validators kind of specialize on a certain sub-selection of PDF/A criteria. In particular many validators don't check for basic PDF errors but instead assume that the tested file is a valid PDF.

The latter two items appear to indicate that the file violates certain basic PDF requirements.;;;","06/Oct/21 15:56;tilman;I got these before you deleted the file using 3.0 trunk:
{noformat}
1.2.2 : Body Syntax error, Expected 'EOL' before the endstream keyword at offset 38827 but found '101'
1.2.5 : Body Syntax error, Stream length is invalid [dic=COSDictionary{COSName{Length}:COSInt{15};COSName{Filter}:COSName{FlateDecode};}; defined length=15; actual length=15, starting offset=38811
1.2.2 : Body Syntax error, Expected 'EOL' before the endstream keyword at offset 47216 but found '101'
1.2.5 : Body Syntax error, Stream length is invalid [dic=COSDictionary{COSName{Length}:COSInt{15};COSName{Filter}:COSName{FlateDecode};}; defined length=15; actual length=15, starting offset=47200
7.3 : Error on MetaData, Schema is not set in this document : http://ns.adobe.com/xap/1.0/sType/ResourceEvent#
{noformat}
The ""Stream length is invalid"" messages are misleading but it's hard to explain, they are related to the previous message. These streams start with LF and end with CR. They should end with LF, or with CR LF. A single CR is weird.

About the xmp error: I looked at some conforming PDF files. There the ""xmlns:..."" part is at the lower levels, together after the ""rdf:about"" part.

It can be fixed by adding {{nsFinder.push(rdfRdf)}} at the earliest possible place in DomXmpParser.java. However I don't know if this would be correct.;;;","27/Sep/22 13:25;olivier.ceulemans@gmail.com;I uploaded a file to reproduce the first reported issue. 

Although I'm wondering if the issue is in PDFBox or in the file itself. The only thing I'm sure is that the others pdf/a validators that I tried (online ones + verapdf) do not report an error.

 

[^pdfa1a.pdf];;;","02/Oct/22 08:15;tilman;The first one is a known XMPBox problem, there's an issue elsewhere about this, e.g. PDFBOX-2913 but I think there is also a more recent one. Consider using VeraPDF.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EOFException during TTF parsing,PDFBOX-5285,13404066,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,levrik,levrik,29/Sep/21 12:59,17/Dec/21 06:50,07/May/23 20:06,24/Nov/21 17:13,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,FontBox,,,,0,,,,"This exception is getting thrown while trying to parse a PDF file.
 I've extracted the problematic TTF file and tried to parse it directly via `TTFParser.parse`.
 The result is the same. The TTF file in question is attached.
{code:java}
java.io.EOFException
        at org.apache.fontbox.ttf.MemoryTTFDataStream.readSignedShort(MemoryTTFDataStream.java:138)
        at org.apache.fontbox.ttf.VerticalMetricsTable.read(VerticalMetricsTable.java:73)
        at org.apache.fontbox.ttf.TrueTypeFont.readTable(TrueTypeFont.java:361)
        at org.apache.fontbox.ttf.TTFParser.parseTables(TTFParser.java:173)
        at org.apache.fontbox.ttf.TTFParser.parse(TTFParser.java:150)
        at org.apache.fontbox.ttf.TTFParser.parse(TTFParser.java:106)
        at testing.Test.testTtfParsing(Test.java:46)
{code}
The code that was used for testing:
{code:java}
File ttfFile = new File(""font-0011.ttf"");
TTFParser ttfParser = new TTFParser(false, false);
ttfParser.parse(ttfFile);
{code}

macOS Preview, Adobe Acrobat Reader DC and Chrome are able to open the PDF file while not falling back to Times New Roman, so font must be parsed correctly.",,,,,,,,,,,,,,,,"29/Sep/21 12:59;levrik;font-0011.ttf;https://issues.apache.org/jira/secure/attachment/13034371/font-0011.ttf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 25 19:00:08 UTC 2021,,,,,,,,,,"0|z0vf2o:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Sep/21 18:07;tilman;DTL OTMaster 7 light refuses to open it.;;;","24/Nov/21 16:48;jira-bot;Commit 1895301 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1895301 ]

PDFBOX-5285: skip tables that will bring an EOF;;;","24/Nov/21 16:48;jira-bot;Commit 1895302 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1895302 ]

PDFBOX-5285: skip tables that will bring an EOF;;;","24/Nov/21 17:13;tilman;I wanted to close the issue, then had a closer look at your file, the vmtx table is missing 2 bytes, skipping it allows to open the font. Maybe you won't need that table.

Snapshot is here:
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/;;;","25/Nov/21 07:41;levrik;[~tilman] Thanks a lot for implementing this workaround. I'll give the snapshot a try.
Are there any plans on releasing a new stable 2.0.x version or will this fix stay on the snapshot forever? I saw that there are a lot of commits on the 2.0 branch since the 2.0.24 release but it seems like PDFBox 3.0 is the main priority.;;;","25/Nov/21 19:00;tilman;No, we do both branches, and I expect that the 2.0 branch won't be abandoned after the 3.0 release, we didn't abandon the 1.8 branch when 2.0 was released years ago (although it looks abandoned now, must later). I don't know when 2.0.25 is to be released, I assume this is related to the workload of our release manager.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Content - xRef / Obj Parsing,PDFBOX-5283,13402698,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,Schmidor,Schmidor,22/Sep/21 13:22,21/Apr/22 15:38,07/May/23 20:06,02/Apr/22 12:51,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.26,3.0.0 PDFBox,,Parsing,,,,0,,,,"There seems to be an issue with xRef / object reading when parsing the attached pdf.

The PDF itself has for example two objects with the ref ""8 0 R"":

One at position 1967 with a ""/Content"" entry.

One at position 7782 without a ""/Content"" entry.

Both are referenced in the XRef Table, so there seems to be something off. Probably Acrobat, etc. are using the first object, while PDFBox is using the second one.",,,,,,,,,,,,,,,,"22/Sep/21 13:23;Schmidor;Lieferschein_110300.pdf;https://issues.apache.org/jira/secure/attachment/13034032/Lieferschein_110300.pdf","18/Feb/22 09:19;tilman;PDFBOX-5228.pdf;https://issues.apache.org/jira/secure/attachment/13040227/PDFBOX-5228.pdf","18/Feb/22 09:20;tilman;PDFJS-10326.pdf;https://issues.apache.org/jira/secure/attachment/13040228/PDFJS-10326.pdf",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Apr 02 12:51:50 UTC 2022,,,,,,,,,,"0|z0v6mw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Sep/21 17:22;mkl;The PDF is broken.

The second object designated as object 8 by a {{8 0 obj}} according to the cross references is object 9!

Thus, here the cross references and the objects themselves are at odds. In such a situation different PDF processors may use different strategies in trying to read the PDF nonetheless. None of these strategies is right or wrong, for each strategy there are documents it repairs well and others it fails to repair. Even the strategy to reject the document has its merits: You cannot get fooled by dubious tricks.;;;","23/Sep/21 08:18;Schmidor;True, the PDF is in some ways broken. But currently the second reference is read, which should be object 9 in the table.;;;","23/Sep/21 09:25;mkl;{quote}True, the PDF is in some ways broken. But currently the second reference is read, which should be object 9 in the table.{quote}

Yes. And what now?

The information in your PDF is contradictory. So different PDF processors are likely to parse the PDF differently. GIGO.

Nonetheless, you might be in luck, PDFBox maintainers have a tendency to try and handle broken PDFs in a similar way as Adobe software does.

IMO such PDFs should be rejected, repairs under the hood simply are attack vectors for forgery.;;;","23/Sep/21 10:11;msahyoun;[~mkl]
{quote}
PDFBox maintainers have a tendency to try and handle broken PDFs in a similar way as Adobe software does.
{quote}

Isn't that what one would expect? Rejecting a PDF which can be handled by Adobe leads to a lot of discussions and as these PDFs exist in the wild (and their creation might not be within the control  of PDFBox users) would also not be supportive. In the long run I'd love to see a standards compliance mode and a relaxed mode but given the small team we are I don't think that this will happen (soon).
;;;","23/Sep/21 11:14;Schmidor;Indeed, there are many bogus writers out there and Acrobat is usually the reference.

 

I wasn't even sure how to exactly interpret the xRef table here. But if the entry for obj 8 is the correct one and the wrong ""obj 8"" is the entry for obj no 9, I will try to debug myself why the wrong one is used.;;;","23/Sep/21 13:58;mkl;{quote}[~msahyoun]> Isn't that what one would expect?
{quote}
Naïve users (who don't care and simply don't want issues) and lazy programmers (who don't want to have to explain to support / clients / customers / users) may expect this.

But it is bad. PDFBox is a library in particular for automatically creating and processing PDFs which is something entirely different than an interactive PDF viewer or editor.

If an interactive PDF viewer or editor (like Adobe Acrobat) comes across an error in a file it loads and somehow fixes (or mis-fixes) it under the hood, then there still is the user to check whether the displayed result makes sense. So here one could argue that under-the-hood fixes are a feature.

If an automatic process (e.g. based on PDFBox) comes across an error in a file it loads and somehow fixes (or mis-fixes) it under the hood, then there is no such check. A mis-fixed input PDF may result in thousands of PDFs with utterly broken content to be sent to potential customers who then are less inclined to become customers. Or even worse, those PDFs may go into some archive one is legally required to put certain documents into, and during the next audit one has to provide the documents and finds only garbage...

For that reason alone *PDF libraries for automatic PDF processing must not be as lax as interactive PDF processors*.

But there also is a security related aspect: PDF signing and encryption scheme nowadays are usually verified to be secure if used in accordance with the PDF specification. But if PDF processors apply some repairs under the hood, then security of those schemes suddenly is not guaranteed anymore. E.g. applying signatures may interfere with such repairs in such a way that the signer in spe initially saw something different than the signed file will show.

But I digress...;;;","23/Sep/21 16:48;msahyoun;[~mkl] point(s) taken. What about having a strict mode? Feel free to open a ticket and let's continue the discussion there. As an alternative we can also have that on the mailing list prior to that. ;;;","23/Sep/21 17:10;tilman;We do have a strict mode, but it is a bit difficult to use; it is used in ShowSignature.java in the hope that we avoid the tricks by the good people at https://pdf-insecurity.org (and therefore hopefully bad people we don't know about).;;;","23/Sep/21 17:48;mkl;[~msahyoun], sorry if I formulated that too hard. I also do understand that creating a really strict PDF library in a world where PDF viewers try to display even severely broken PDFs without a warning won't get you many users. Nonetheless the points I made do stand.

The problem with a strict mode is that it really needs to be a programming principle throughout the library, not merely in a few selected locations. I.e. one must never assume that existing entries of some structure loaded from some PDF are as they should be, one always has to test etc.

And unfortunately the requirements are a bit of moving targets if one takes a look at the corrections to ISO 32000-2:2020 already decided upon...

So I'm afraid a truly good strict mode is not really feasible. (And before you ask, no, I'm not aware of a really strict PDF library...);;;","23/Sep/21 21:47;Schmidor;[https://github.com/apache/pdfbox/pull/129]

The function for searching all objects within the data is creating a map, where the second object ""8 0 R"" is overwriting the first. This is then replacing the original xRef map.

This change is affecting at least two unit tests, where it changes the observed page count.;;;","24/Sep/21 03:22;tilman;That PR also brings rendering differences for
PDFBOX-2250-107425-empty-xref.pdf
PDFBOX-3714-2.pdf
PDFBOX-3788-YVFDWHF767TEYTT7IVFSLUIJTDF3YP57.pdf
PDFBOX-3934-KTUUMJNQ7NYGJJMEDGSY5OEU76G6JX2V.pdf
pop-bugzilla93476.pdf
;;;","24/Sep/21 05:50;msahyoun;[~mkl] maybe it wasn't the most friendly message you've ever written but no worries didn't think it was too hard. And no, I needn't ask about the 'really strict PDF library' as I'm also aware that there none.

I'd still love to get feedback from you where we can improve the 'strict' mode Tilman pointed out as I do think that there are more security sensitive applications PDFBox is used for such as signing and ones where we might be able to be less strict such as rendering or text extraction. So if you're willing please create a ticket and note the points. As written above this will not happen in a short term but as you rightly pointed out this would help us being more sensitive to such areas (I don't think that we are doing a bad job there but we can improve - and it's also important to find the right balance between being correct and being user friendly i.e. easy to use by shielding the PDFBox users from the PDF internals if possible)
;;;","24/Sep/21 06:02;tilman;[~mkl] your text was fine and a valid opinion and identical to my ""core"" belief. But 99.9% of users are of the ""But it renders in Adobe Reader!!1!"" kind so we're lenient. The real problem happened maybe 20 years ago when somebody at Adobe decided to be lenient on errors, instead of refusing bad PDFs and show a meaningful error message.;;;","24/Sep/21 06:02;lehmi;Your patch might work in your case but as Tilman already mentioned it won't in other cases so that we have to decide which strategy to use in such cases.

The brute force parse comes in place if the pdf is somehow corrupt. It simply collects all valid objects starting from the beginning. If there are multiple objects using the same key most likely the latest occurrence is the correct one as those are supposed to update earlier versions of an object. Saying that I'm afraid the current implementation is the better choice.

Theoretically there are maybe other ways to repair such malformed pdfs, but those would be more complex and I'm not sure if it would be worth to implement such an algorithm to repair just one or maybe a couple of pdfs.

;;;","24/Sep/21 09:18;mkl;{quote}I'd still love to get feedback from you where we can improve the 'strict' mode Tilman pointed out as I do think that there are more security sensitive applications PDFBox is used for such as signing and ones where we might be able to be less strict such as rendering or text extraction. So if you're willing please create a ticket and note the points.{quote}

I can start such a ticket. Currently I don't have the time, though, to check whether the requirements _coming to my mind_ actually already are implemented or not.

To be sure, by ""strict mode"" we mean ""disabling the lenient parsing mode"" which in the commonly used PDF loading routines is used, don't we? Or is there more to the ""strict mode""?;;;","24/Sep/21 11:07;Schmidor;I've updated the PR with another approach. Does that give acceptable results?

I don't think the xRef table should be rebuild here. All references point to existing objects. There's only a search and rebuild because instead of ""9 0 R"" another ""8 0 R"" is found.;;;","24/Sep/21 11:10;msahyoun;[~mkl] 

- ""... coming to my mind ... implemented or not"" -> no need to do that yet, although in the long run id would be helpful if you can review PDFBox from that perspective. Let's start by collecting requirements
- ""... is there more to strict mode ..."" -> how the implementation is done shall be determined by the requirements. Could be at the parsing phase, could be later ...

Added note. I'm not saying that we will implement specific features or any at all into that direction. But we should at least start/continue that topic ;;;","24/Sep/21 13:54;mkl;[~Schmidor],

the PDF error this all is about is a mismatch of the object number written in front of the indirect object and the object number implied by the position of a reference to that indirect object from the cross reference table.

In case of your file the cross reference table position implies the _correct_ object number while the explicitly given one is _wrong_.

In the past, though, other broken files with such mismatches here have given rise to issues for which the cross reference table position implied the _wrong_ object number while the explicitly given one was _correct_. For example look at PDFBOX-2679. I've also seen that other PDF libraries have made provisions for such errors in the cross references.

Understandably you'd like PDFBox to be changed to properly read your file. On the other hand doing so results in regressions for those other files.

So unless you find an easy way to determine which kind of error we have in a given file to fix correctly, PDFBox can only fix one of these kinds of issues. In that case it might be of interest how the error came to be in your PDF. Do you have any information?

In particular on one hand the creator tool is claimed to be Necrona Rave. Have you had often seen such mismatch errors in Rave PDFs?

And on the other hand the PDF contains a comment that the PDF was _Modified by WPCubed PDFWorkBench_. Might the error be due to that tool? And have you often been confronted with such mismatch errors in PDFs modified by PDFWorkBench?;;;","24/Sep/21 14:25;Schmidor;[~mkl]

If my proposed changes change rendering of other files in an unfortunate way, I have to accept that. As the file can be viewed in Acrobat, there should be a way to achieve correct rendering. PDFBOX-2679 seems to have another issue with the xref table. The tests in the project run without error with my changes. However, I think Tilman has many more PDFs he checks for visual differences.

We ourselves do not work with those tools. If we get invalid PDFs, even our customers are mostly on the receiving end. So I cannot say how exactly they are created.;;;","03/Oct/21 19:27;tilman;{quote}I've updated the PR with another approach. Does that give acceptable results?{quote}

Sorry I missed this. I tried the new PR, now it doesn't render the file from
https://github.com/mozilla/pdf.js/issues/10326;;;","05/Oct/21 15:01;Schmidor;Ok, in the file from[ https://github.com/mozilla/pdf.js/issues/10326|https://github.com/mozilla/pdf.js/issues/10326] the entries for 4, 5 and 6 all point to wrong objects.

""found wrong object number. expected [4] found [5]
found wrong object number. expected [5] found [6]
found wrong object number. expected [6] found [4]""

So I changed the {color:#57606a}findObjectKey{color} to return a corrected Object key, but to only replace the original entry if it was not valid. That seems to work for both files.;;;","05/Oct/21 17:33;tilman;Now it renders all files!;;;","05/Oct/21 18:05;mkl;Just for cosmetics: At the old line 1325 and new line 1335 a bracket accidentally seems to have been indented more than is appropriate. At least in the github PR compare view it looks like that.;;;","06/Oct/21 03:26;tilman;Why is {{validKeys}} a map and not a set?;;;","06/Oct/21 10:04;mkl;Right, there's always key equal to value...

 ;;;","06/Oct/21 16:29;Schmidor;Indeed. Updated the MR an rerun the tests.;;;","06/Oct/21 17:39;tilman;Still works fine.;;;","17/Feb/22 17:59;Schmidor;[~tilman]
I noticed the PR is still open. Is there something I should change, or are the changes ready for integration?;;;","17/Feb/22 19:14;tilman;Thanks for the reminder, I'll try to test again this weekend. I don't know why I stopped.;;;","18/Feb/22 09:21;tilman;Trunk is fine, but the two files I just attached (  [^PDFBOX-5228.pdf] and  [^PDFJS-10326.pdf] ) fail when making the changes for 2.0 too. ;;;","18/Feb/22 11:12;mkl;In case of [^PDFJS-10326.pdf] the situation is the other way around compared with the OP's file: Here the cross references are wrong while the object numbers are right...

(As mentioned before, an attempt to fix not-matching objects and cross references will almost certainly in some cases mis-fix...);;;","10/Mar/22 21:02;Schmidor;I've updated the MR. I think it was an issue with removing / replacing pointers before they would be needed correcting other pointers down in the line.;;;","12/Mar/22 14:09;tilman;Yes that works now.;;;","13/Mar/22 15:52;jira-bot;Commit 1898901 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1898901 ]

PDFBOX-5283: ignore duplicate object keys when correcting xRefs, as suggested by Oliver Schmidtmer;;;","13/Mar/22 15:52;jira-bot;Commit 1898902 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1898902 ]

PDFBOX-5283: ignore duplicate object keys when correcting xRefs, as suggested by Oliver Schmidtmer;;;","13/Mar/22 16:05;tilman;Thanks [~Schmidor]!;;;","24/Mar/22 03:27;tilman;reopened because of PDFBOX-5399, PDFBOX-5400;;;","02/Apr/22 12:51;lehmi;Set to resolved again, as the regressions from PDFBOX-5399 and PDFBOX-5400 are solved;;;"
StackOverflowError while merging pdf,PDFBOX-5282,13402389,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Critical,Not A Bug,,sagarpandav,sagarpandav,21/Sep/21 05:52,22/Sep/21 16:36,07/May/23 20:06,22/Sep/21 16:32,2.0.16,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"Using PDFBox api , i am trying to merge the n number of pdf into one pdf, but some time its failing to merge the pdf and program got terminated with stackoverflow error.

10:03:39,267 ERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/DmMethods].[DoMethod]] (http--0.0.0.0-9080-18) Servlet.service() for servlet DoMethod threw exception: java.lang.StackOverflowError10:03:39,267 ERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/DmMethods].[DoMethod]] (http--0.0.0.0-9080-18) Servlet.service() for servlet DoMethod threw exception: java.lang.StackOverflowError at java.util.HashMap.hash(HashMap.java:362) [rt.jar:1.7.0_72] at java.util.HashMap.getEntry(HashMap.java:462) [rt.jar:1.7.0_72] at java.util.HashMap.get(HashMap.java:417) [rt.jar:1.7.0_72] at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:81) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:117) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:146) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:109) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:146) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:109) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:146) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:109) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:146) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:109) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:146) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:109) at org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument(PDFCloneUtility.java:146) at or",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 22 16:36:35 UTC 2021,,,,,,,,,,"0|z0v4qg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Sep/21 06:37;lehmi;Please update to a more recent version, 2.0.24 is the current one, and retry.;;;","21/Sep/21 06:59;sagarpandav;[~lehmi] 2.0.24 library is compatible with java 6..? Do you have any idea why this is failing its not happing every time. But some case its failed.;;;","21/Sep/21 10:53;lehmi;All 2.0.x version are compatible with java 6;;;","21/Sep/21 11:06;sagarpandav;[~lehmi] Thanks for the update ! I have used version you suggested 2.0.24, but still i can get the same error message;;;","21/Sep/21 15:53;lehmi;I many cases one of the pdfs in question is simply malformed or corrupted. Please attach a sampl pdf so that we are able to reproduce the issue.;;;","21/Sep/21 16:04;tilman;Fron the stack trace, I suspect this is a dictionary that has a value which is an indirect object which references that dictionary itself. But our cloner does not keep indirect objects, these are created when saving.

Another possibility is that this is a very complex file and you're running with a very small stack.;;;","22/Sep/21 04:42;sagarpandav;[~lehmi] , i am facing this issue in production environment, having customer sensitive pdf, i can not share here, as total 52 pdf's suppose to merge in one pdf and at this moment it failing  when i called the mergeDocuments() method.

PDFMergerUtility PDFmerger = new PDFMergerUtility();

PDFmerger.mergeDocuments();;;;","22/Sep/21 04:43;sagarpandav;[~tilman], any way how i could increase the stack size..? 

 

 ;;;","22/Sep/21 06:06;tilman;-Xss

https://www.baeldung.com/jvm-configure-stack-sizes

try a simple test where you merge that file with itself using pdfbox-app command line.
https://pdfbox.apache.org/2.0/commandline.html#pdfmerger;;;","22/Sep/21 06:23;tilman;Assuming that there is a loop in your file, then it's difficult to do anything without having the file. I could add some debugging, but that would require that you participate.

Another alternative would be to try to open that file with Adobe Reader and save it, in the hope that Adobe removes the loop.

If you open that file with PDFDebugger, do you get any log messages?;;;","22/Sep/21 06:46;sagarpandav;[~tilman] yes i am adding this all pdf byte array in for loop like

PDFMergerUtility PDFmerger = new PDFMergerUtility();

for {

final ByteArrayInputStream is = new ByteArrayInputStream( documents.get( pdfSortingList.get(i) ) );

 PDFmerger.addSource(is);

is.close();

} //end for

PDFmerger.setDestinationFileName(""merge.pdf"");

PDFmerger.setDestinationFileName(megreFile.getAbsolutePath());

PDFmerger.mergeDocuments();

 ;;;","22/Sep/21 11:16;sagarpandav;[~tilman],  some can we programmatically able to set stack size.;;;","22/Sep/21 14:34;sagarpandav;i have increase  the JVM memory from -Xss256k to -Xss1024K and its work fine. Now the pdf was merge successfully.  ;;;","22/Sep/21 14:35;sagarpandav; 

Increased the JVM memory from -Xss=256k to -Xss=1024k and its work fine;;;","22/Sep/21 16:36;tilman;Happy to read that you got it to work!;;;",,,,,,,,,,,,,,,,,,,,,,,
PDPage.getAnnotations() causes subsequent calls to PDDocument.getPages() to fail,PDFBOX-5278,13399847,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,alistairo,alistairo,07/Sep/21 19:56,17/Dec/21 06:50,07/May/23 20:06,09/Sep/21 17:32,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Text extraction,,,,0,,,,"I have stumbled across a strange issue with a certain PDF where PDPage.getAnnotations() causes subsequent calls to PDDocument.getPages() to fail.

 

I am not at liberty to share the PDF publicly, but am happy to DM the PDF privately if it helps.

 

The code to reproduce is pretty straightforward:

 

 
{code:java}
import java.io.File;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;


public class AnnotationsTest {

	
	public static void main(String[] args) throws Exception {

		
		

		try( PDDocument doc = PDDocument.load(new File(args[0]));){

			for (PDPage page : doc.getPages()) {
				//this line will cause the doc to not be re-iterable in the next block, commenting it out will allow it to pass.
				page.getAnnotations();

			}
			
			System.out.println(""We get here, no problem - not sure why we can't re-iterate again..."");
			
			//doc.getPages() fails.
			for (PDPage page : doc.getPages()) {
				//do something
				
			}

		} 
	}

{code}
 The Exception:

 

Exception in thread ""main"" java.lang.IllegalStateException: Expected 'Page' but found COSName\{Annot}Exception in thread ""main"" java.lang.IllegalStateException: Expected 'Page' but found COSName\{Annot} at org.apache.pdfbox.pdmodel.PDPageTree.sanitizeType(PDPageTree.java:266) at org.apache.pdfbox.pdmodel.PDPageTree.access$400(PDPageTree.java:43) at org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next(PDPageTree.java:224) at org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next(PDPageTree.java:172) at AnnotationsTest.main(AnnotationsTest.java:28)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 09 17:32:50 UTC 2021,,,,,,,,,,"0|z0up1s:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Sep/21 03:35;tilman;You can send me the file to me here:   tilman at snafu dot de .;;;","08/Sep/21 13:27;mkl;Maybe some page has an annotation array which (incorrectly!) directly references a page object. In that case PDFBox would ""fix"" the type entry of the page dictionary to be *Annot*. (Maybe the {{PDAnnotation(COSDictionary)}} constructor should only set the type if it is not set, and otherwise check the value and throw an exception if it's not *Annot* - or ignore this in a non-strict mode.)

But maybe there is a different error in the PDF. Hard to tell without the PDF.
;;;","08/Sep/21 17:55;jira-bot;Commit 1893151 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1893151 ]

PDFBOX-5278: don't modify type, as suggested by Michael Klink;;;","08/Sep/21 17:55;jira-bot;Commit 1893152 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1893152 ]

PDFBOX-5278: don't modify type, as suggested by Michael Klink;;;","08/Sep/21 17:55;tilman;[~mkl] Your suspicion is correct :-)

[~alistairo] Your files are a mess. For example, the ""64"" file has a annotation 31 on page 7 referencing not an annotation directory, but page 1. Look for ""43 0 R"" and ""43 0 obj"" with notepad++ in that file.;;;","08/Sep/21 18:22;tilman;[~alistairo] please retry with the snapshot
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/
(due to lack of time I only tried with PDFDebugger but was able to reproduce the effect by moving up and down the pages);;;","08/Sep/21 18:35;jira-bot;Commit 1893153 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1893153 ]

PDFBOX-5278: revert personal comment;;;","09/Sep/21 07:35;alistairo;Thanks [~tilman] and [~mkl], the problem seems to go away with pdfbox-app-2.0.25-20210908.180722-89.jar (at least in the sample app I provided above).

 

I will inform if something pops up during regression tests later on in case there are any unintended consequences.

I appreciate the fix!

 

 

 ;;;","09/Sep/21 15:05;mkl;""further mayhem may follow"" - :D;;;","09/Sep/21 17:32;tilman;Thanks for the feedback!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Encryption on Split documents,PDFBOX-5276,13399329,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,ctidrv,ctidrv,03/Sep/21 21:16,17/Dec/21 06:50,07/May/23 20:06,05/Sep/21 08:17,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Documentation,Utilities,Writing,,0,,,,"Splitting a two page document into two separate documents via org.apache.pdfbox.multipdf.Splitter
Then using the List<PDDocument> returned to encrypt the first document causes weird side effects on the second document in the list. It will still open with the owner password of the first document (Even though it shouldn't be encrypted), but it is unreadable.",,,,,,,,,,,,,,,,"03/Sep/21 21:17;ctidrv;ShouldNotBeEncrypted.pdf;https://issues.apache.org/jira/secure/attachment/13033023/ShouldNotBeEncrypted.pdf","05/Sep/21 03:21;tilman;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13033049/screenshot-1.png",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Sep 05 08:16:54 UTC 2021,,,,,,,,,,"0|z0uluo:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Sep/21 21:18;ctidrv;Owner Password to the uploaded file is ""pass"".

The issue appears to not care about the document in any way that is fed to the system, but always outputs a strange second document if the first is encrypted.;;;","04/Sep/21 04:35;tilman;PDDocument.save() warns about this, but people (if they read this at all) usually won't understand that the split documents still have common resources. Not sure what we should do: fail if the document is encrypted (forcing the user to disable encryption first), or quietly remove the encryption?;;;","04/Sep/21 13:37;ctidrv;I didn’t realize there was a warning. It does make sense that some resources are shared. So if that’s the case what would you recommend to handle solving the issue on my end?;;;","04/Sep/21 13:42;tilman;The warning is only in the javadoc. Try calling PDDocument.setAllSecurityToBeRemoved(true) before saving.;;;","04/Sep/21 14:07;ctidrv;I had a feeling that was the case. I did some testing with that, does it have to be done before saving? Wouldn’t that cause it to save unencrypted? I have tested calling that before the second document is saved to no avail, also tested calling it directly after the first one is saved.;;;","04/Sep/21 14:18;tilman;I haven't tested it myself but I just looked into the code, the new document doesn't get the encryption info at all?!
{code}
    protected PDDocument createNewDocument() throws IOException
    {
        PDDocument document = memoryUsageSetting == null ?
                                new PDDocument() : new PDDocument(memoryUsageSetting);
        document.getDocument().setVersion(getSourceDocument().getVersion());
        document.setDocumentInformation(getSourceDocument().getDocumentInformation());
        document.getDocumentCatalog().setViewerPreferences(
                getSourceDocument().getDocumentCatalog().getViewerPreferences());
        return document;
    }
{code}
Did you call save() on the original document?;;;","04/Sep/21 22:56;ctidrv;I am on my cellphone, but what I do is load a document via input stream, then I split into multiple documents and based on the return from text stripper I will encrypt and save. Save is never called on the original document before splitting.;;;","04/Sep/21 22:57;ctidrv;Sorry, to answer your other question no the second document and the original copy of the first doesn’t return that it is encrypted. ;;;","05/Sep/21 03:22;tilman;If you encrypt and save one page, the resources used by the other pages will be encrypted as well. And the two pages do have common resources.
 !screenshot-1.png! 
So the best would be to save all files unencrypted, then reload and encrypt the ones you want to.;;;","05/Sep/21 03:36;ctidrv;If that’s the only option. I would really like to avoid writing to disk unencrypted especially the volume I will be handling. I have a few crazy ideas I might try first. Thanks for the explanation, kind of sucks how that happens.;;;","05/Sep/21 08:12;jira-bot;Commit 1892918 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892918 ]

PDFBOX-5276: improve javadoc: result documents should not be saved with encryption;;;","05/Sep/21 08:12;jira-bot;Commit 1892919 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892919 ]

PDFBOX-5276: improve javadoc: result documents should not be saved with encryption;;;","05/Sep/21 08:16;tilman;If you have enough memory, then you can save to a ByteArrayOutputStream and reload from a byte array.
I have improved the javadoc, maybe this will help a user in the future.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Not rendered (white) pages for given pdf,PDFBOX-5275,13399127,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,Brunarskyi,Brunarskyi,03/Sep/21 09:08,17/Dec/21 06:50,07/May/23 20:06,03/Sep/21 19:20,2.0.20,2.0.24,2.0.25,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,OCGs,regression,,"Pages 4 & 5 are rendered as empty (white) but all others look good for the following pdf:
[https://www.dropbox.com/s/rc4hdnvj8p5a2bv/pdf_issue_3.pdf?dl=0]


Firefox viewer alow shows it as blank but chrome shows correctly.",,,,,,,,,,,,,PDFBOX-4526,,,"03/Sep/21 18:29;tilman;PDFBOX-5275-p5.pdf;https://issues.apache.org/jira/secure/attachment/13033020/PDFBOX-5275-p5.pdf","03/Sep/21 09:09;Brunarskyi;pdf_issue_34.jpg;https://issues.apache.org/jira/secure/attachment/13032930/pdf_issue_34.jpg",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Fri Sep 03 19:20:14 UTC 2021,,,,,,,,,,"0|z0ukls:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Sep/21 18:41;tilman;Worked in 2.0.15, fails since 2.0.16 😭;;;","03/Sep/21 18:56;tilman;It's something with the OCGs... it works if one comments the first line (orange lines appears).
{code}
%/OC /OC0 BDC
/Cs0 cs
.962 .441 .101 scn
/Gs0 gs
0 0 566.929016 34.015999 re
f
EMC
{code}

The bug is in {{PageDrawer.isHiddenOCMD()}}: {{Root/Pages/Kids/[4]/Resources/Properties/OC0}} has an empty OCGs array and this is mishandled, despite that the specification says ""If this entry is not present, is an empty array, or contains references only to null or deleted objects, the membership dictionary shall have no effect on the visibility of any content."";;;","03/Sep/21 19:18;jira-bot;Commit 1892883 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892883 ]

PDFBOX-5275: ignore empty OCGs;;;","03/Sep/21 19:18;jira-bot;Commit 1892884 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892884 ]

PDFBOX-5275: ignore empty OCGs;;;","03/Sep/21 19:20;tilman;Fixed. Thanks for reporting this!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not existing rectangle appears on page image,PDFBOX-5274,13398639,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,Brunarskyi,Brunarskyi,01/Sep/21 10:18,17/Dec/21 06:50,07/May/23 20:06,02/Sep/21 04:13,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,1,regression,,,"Conversion some pdfs to image adds not an existing black rectangle (near the price for the given example), no matter what image file format chosen.

The same rectangle also appears in PDFDEbugger.","macOs 11.5.2 & openjdk version ""16.0.2""",,,,,,,,,,,,PDFBOX-4988,,,"01/Sep/21 10:09;Brunarskyi;issue_example.pdf;https://issues.apache.org/jira/secure/attachment/13032848/issue_example.pdf","01/Sep/21 10:09;Brunarskyi;issue_example1.jpg;https://issues.apache.org/jira/secure/attachment/13032847/issue_example1.jpg","01/Sep/21 10:38;Brunarskyi;issue_pointer.jpg;https://issues.apache.org/jira/secure/attachment/13032853/issue_pointer.jpg",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Thu Sep 02 10:37:49 UTC 2021,,,,,,,,,,"0|z0uhlk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Sep/21 16:35;tilman;Sigh... yet another problem with ""nbspace"", in {{Root/Pages/Kids/[0]/Resources/XObject/fzFrm0/Resources/XObject/fullpage/Resources/Font/T1_4}}. It worked in 2.0.21, no longer works since 2.0.22. We do check for the ""nbspace"" parameter and return the glyph for ""space"", but that one doesn't exist, so the ""missing glyph"" is returned.;;;","01/Sep/21 18:30;jira-bot;Commit 1892787 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892787 ]

PDFBOX-5274: return empty path if no ""space"" path available for ""nbspace"";;;","01/Sep/21 18:30;jira-bot;Commit 1892788 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892788 ]

PDFBOX-5274: return empty path if no ""space"" path available for ""nbspace"";;;","02/Sep/21 04:13;tilman;Thanks for reporting this. A snapshot build is at
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/;;;","02/Sep/21 10:37;Brunarskyi;(y) Thanks a lot for a fast fix :) ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deeply nested drawings not shown,PDFBOX-5271,13398050,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,29/Aug/21 17:24,17/Dec/21 06:50,07/May/23 20:06,29/Aug/21 17:49,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,,,,On pages 9 and 13 the drawings in https://arxiv.org/pdf/1707.00393 are not shown. This is because the nesting is higher than our 25 limit.,,,,,,,,,,,,,TIKA-3536,PDFBOX-4666,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Aug 29 17:46:29 UTC 2021,,,,,,,,,,"0|z0udyo:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Aug/21 17:46;jira-bot;Commit 1892700 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892700 ]

PDFBOX-5271: increase max depth;;;","29/Aug/21 17:46;jira-bot;Commit 1892701 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892701 ]

PDFBOX-5271: increase max depth;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Annotation shown with thick border,PDFBOX-5266,13397320,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,tilman,tilman,25/Aug/21 18:17,17/Dec/21 06:50,07/May/23 20:06,26/Aug/21 17:37,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,annotation,annotations,,"As reported by Esteban R in the mailing list

{quote}
Hello. The following pdf: https://gofile.io/d/7kv27Z (simplification of a real life example) contains annotations. Their borders are not displayed in Adobe Reader (expected behaviour) but pdfbox debugger (tried with 3.0.0-RC1 and 2.0.24) shows big borders.

I think that it is an issue similar to this: PDFBOX-5168 , but in this case the ""dash pattern"" is an integer (instead of an array containing 0).
{quote}",,,,,,,,,,,,,,,,"25/Aug/21 18:17;tilman;PDFBOX-5266.pdf;https://issues.apache.org/jira/secure/attachment/13032454/PDFBOX-5266.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 25 18:43:00 UTC 2021,,,,,,,,,,"0|z0u9gw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Aug/21 18:42;jira-bot;Commit 1892603 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892603 ]

PDFBOX-5266: show nothing if dash array is invalid;;;","25/Aug/21 18:43;jira-bot;Commit 1892604 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892604 ]

PDFBOX-5266: show nothing if dash array is invalid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FDFJavaScript.getDoc() always returns null or empty,PDFBOX-5264,13396963,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,24/Aug/21 16:01,17/Dec/21 06:50,07/May/23 20:06,24/Aug/21 16:06,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,,,,,0,,,,"As reported by valerybokov in PR# 107.

Introduced by r1679299 in PDFBOX-2798, the key was missed in the refactoring. I don't have a test file so I'm using the old code to guess what needs to be done. It's an array of key,value,key,value,... elements.",,,,,,,,,,,,,PDFBOX-2798,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 24 16:06:30 UTC 2021,,,,,,,,,,"0|z0u79k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Aug/21 16:06;jira-bot;Commit 1892579 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892579 ]

PDFBOX-5264: also consider key;;;","24/Aug/21 16:06;jira-bot;Commit 1892580 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892580 ]

PDFBOX-5264: also consider key;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Operator c has too few operands,PDFBOX-5260,13395843,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Duplicate,,chenjh,chenjh,18/Aug/21 09:44,21/Aug/21 14:44,07/May/23 20:06,21/Aug/21 14:44,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"when I convert pdf to image,process block in renderer.renderImageWithDPI() and print error log. maybe this pdf have some problem,but I want to  throw exception instead of block.

!image-2021-08-18-17-36-21-462.png!

 

 

2021-08-18 17:32:02,448 ERROR [COSParser.java :1156] Can't find the object xref table/stream at offset 236731
2021-08-18 17:32:02,452 WARN [XrefTrailerResolver.java :249] Did not found XRef object at specified startxref position 0
2021-08-18 17:32:02,610 WARN [COSParser.java :1042] The end of the stream doesn't point to the correct offset, using workaround to read the stream, stream start position: 68, length: 38675, expected end position: 38743
2021-08-18 17:32:02,875 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4641.59}, COSFloat\{13578.8}, COSFloat\{4963.02}, COSFloat\{135.7}]
2021-08-18 17:32:02,875 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3554.92}, COSFloat\{13169.1}]
2021-08-18 17:32:02,876 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46656.9}, COSFloat\{13839.2}, COSFloat\{.1}, COSFloat\{4490.39}, COSInt\{13437}]
2021-08-18 17:32:02,876 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3567.666414}, COSFloat\{.6}]
2021-08-18 17:32:02,876 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4757.48}, COSInt\{1}, COSFloat\{467.3}]
2021-08-18 17:32:02,876 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4679.32}, COSFloat\{466.4}]
2021-08-18 17:32:02,877 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{438492}, COSInt\{1351691}]
2021-08-18 17:32:02,877 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44656.9}, COSFloat\{13204.9}]
2021-08-18 17:32:02,877 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4697.58}, COSInt\{13565}]
2021-08-18 17:32:02,877 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{6703.4}]
2021-08-18 17:32:02,877 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6761.93}, COSFloat\{80637.3}, COSFloat\{4649.35}, COSFloat\{13817.9}]
2021-08-18 17:32:02,878 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3503.66}, COSInt\{13471}]
2021-08-18 17:32:02,878 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3503.61}, COSFloat\{13636.3}]
2021-08-18 17:32:02,878 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4933.05}, COSFloat\{760.9}, COSFloat\{.8}, COSFloat\{4427.62}, COSFloat\{121.8}]
2021-08-18 17:32:02,878 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{7909.3}, COSFloat\{13523.4}]
2021-08-18 17:32:02,878 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4828.32}, COSFloat\{109.1}]
2021-08-18 17:32:02,879 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4862.753544}, COSFloat\{0.0}, COSFloat\{.7}, COSFloat\{4378.33}, COSFloat\{13537.9}]
2021-08-18 17:32:02,879 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4846.66}, COSFloat\{12561.1}, COSFloat\{4887.26}, COSFloat\{134.7}]
2021-08-18 17:32:02,879 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{485326.31}, COSFloat\{134.7}]
2021-08-18 17:32:02,879 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4849.74}, COSFloat\{171.4}]
2021-08-18 17:32:02,883 WARN [LineTo.java :65] LineTo (285.339,1116.7919) without initial MoveTo
2021-08-18 17:32:02,884 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4627.91}, COSFloat\{13496.8}]
2021-08-18 17:32:02,884 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4771.44}, COSFloat\{314.5}]
2021-08-18 17:32:02,884 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.32}, COSFloat\{13447.7}, COSFloat\{5464.8480351}]
2021-08-18 17:32:02,884 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47712.1}, COSFloat\{13549.7}]
2021-08-18 17:32:02,885 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6703.45}, COSFloat\{1364380.5}]
2021-08-18 17:32:02,885 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4446.6}]
2021-08-18 17:32:02,885 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{13284.7}]
2021-08-18 17:32:02,885 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4816.89}, COSFloat\{125.3}]
2021-08-18 17:32:02,885 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4816.89}, COSFloat\{13542.4}]
2021-08-18 17:32:02,886 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4682774}, COSFloat\{13433.7}, COSFloat\{466847.47}, COSFloat\{1.7}]
2021-08-18 17:32:02,886 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4896.22}, COSInt\{131}, COSFloat\{1.2}]
2021-08-18 17:32:02,886 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4648.68}, COSFloat\{1321483.9}, COSFloat\{4779.55}, COSFloat\{687.}, COSFloat\{.7}]
2021-08-18 17:32:02,886 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4613.84}, COSFloat\{13441.2}]
2021-08-18 17:32:02,887 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4712.77}, COSFloat\{13534.3}]
2021-08-18 17:32:02,887 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4955.04}, COSFloat\{672.7}, COSFloat\{.7}, COSFloat\{4573.74}, COSInt\{13471}]
2021-08-18 17:32:02,887 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4453.72}, COSFloat\{13478.5}, COSFloat\{4781.77}, COSInt\{1}, COSInt\{18627}]
2021-08-18 17:32:02,887 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3567.72}, COSInt\{13413}]
2021-08-18 17:32:02,888 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4682.4342383}]
2021-08-18 17:32:02,888 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4839464}, COSFloat\{67817.4}, COSFloat\{4805.47}, COSFloat\{13300.5}]
2021-08-18 17:32:02,888 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4699.31}, COSFloat\{150.9}]
2021-08-18 17:32:02,888 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4889.92}, COSFloat\{150.9}]
2021-08-18 17:32:02,888 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4869.92}, COSFloat\{13550.9}]
2021-08-18 17:32:02,889 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{40.89}, COSInt\{1353}]
2021-08-18 17:32:02,889 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4799.31}, COSFloat\{679.6}]
2021-08-18 17:32:02,890 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4656.91}, COSFloat\{134.7}]
2021-08-18 17:32:02,890 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3822.41}, COSFloat\{134.7}]
2021-08-18 17:32:02,890 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3838.09}, COSFloat\{13134.7}]
2021-08-18 17:32:02,890 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3807.73}, COSInt\{1363404}, COSFloat\{4398.97}, COSInt\{1343504}, COSFloat\{4398.9}]
2021-08-18 17:32:02,891 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{364380.5}]
2021-08-18 17:32:02,891 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4398.91}, COSFloat\{13423.9}]
2021-08-18 17:32:02,891 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4656.91}, COSFloat\{1393462.4}, COSFloat\{4164.848079}, COSFloat\{.7}]
2021-08-18 17:32:02,891 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{31732.64380}, COSFloat\{.5}]
2021-08-18 17:32:02,891 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.32}, COSFloat\{93436.2}, COSFloat\{3599.74}, COSInt\{3508}]
2021-08-18 17:32:02,892 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4572.44810506}, COSFloat\{.1}, COSFloat\{4824.4}, COSFloat\{13432.9}, COSFloat\{5495.8}]
2021-08-18 17:32:02,892 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{13552.2}]
2021-08-18 17:32:02,892 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4670.17}, COSFloat\{132.9}]
2021-08-18 17:32:02,893 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4656.91}, COSFloat\{13545.6}]
2021-08-18 17:32:02,893 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4657.78}, COSFloat\{408.9}]
2021-08-18 17:32:02,893 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4645.3}, COSFloat\{17396.3}, COSFloat\{4643.3}, COSFloat\{104.8}]
2021-08-18 17:32:02,894 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4641.59}, COSFloat\{13508.9}, COSFloat\{4963.02}, COSFloat\{175.7}]
2021-08-18 17:32:02,894 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3554.92}, COSFloat\{13492.9}]
2021-08-18 17:32:02,894 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4490.39}, COSInt\{17437}]
2021-08-18 17:32:02,894 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4703.92}, COSFloat\{13517.4}, COSFloat\{4657.48}, COSInt\{1}, COSFloat\{447.3}]
2021-08-18 17:32:02,895 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4679.32}, COSFloat\{466.4}]
2021-08-18 17:32:02,895 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{438492}, COSInt\{1359691}]
2021-08-18 17:32:02,895 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44656.9}, COSFloat\{13274.9}]
2021-08-18 17:32:02,895 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4697.58}, COSInt\{19565}]
2021-08-18 17:32:02,896 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{13643.6}]
2021-08-18 17:32:02,896 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6761.93}, COSFloat\{84637.3}, COSFloat\{4649.35}, COSFloat\{13857.9}]
2021-08-18 17:32:02,896 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3503.66}, COSFloat\{13630.3}, COSFloat\{4503.61}, COSFloat\{13686.3}]
2021-08-18 17:32:02,896 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4933.05}, COSFloat\{13598.4}, COSFloat\{4427.62}, COSFloat\{191.8}]
2021-08-18 17:32:02,897 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{7909.3}, COSFloat\{13563.4}]
2021-08-18 17:32:02,897 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4828.32}, COSFloat\{149.1}]
2021-08-18 17:32:02,897 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4862.75313570}, COSFloat\{.7}, COSFloat\{4878.33}, COSFloat\{13597.9}]
2021-08-18 17:32:02,897 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4846.66}, COSFloat\{16561.1}, COSFloat\{4887.26}, COSFloat\{555.7}]
2021-08-18 17:32:02,898 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.27}, COSFloat\{13555.7}]
2021-08-18 17:32:02,898 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4627.91}, COSFloat\{13586.8}]
2021-08-18 17:32:02,898 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4446.6}]
2021-08-18 17:32:02,898 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{13551.8}]
2021-08-18 17:32:02,899 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.91}, COSFloat\{13489.8}]
2021-08-18 17:32:02,899 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{43938}, COSFloat\{13463.7}, COSFloat\{4364.71}, COSFloat\{13441.3}]
2021-08-18 17:32:02,899 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4896.22}, COSFloat\{13440.2}]
2021-08-18 17:32:02,900 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{472}, COSFloat\{.31}, COSInt\{13456}, COSFloat\{4740.38}, COSFloat\{271.8}]
2021-08-18 17:32:02,900 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4712.77}, COSFloat\{13574.3}]
2021-08-18 17:32:02,900 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4453.72}, COSFloat\{14478.5}, COSFloat\{4781.77}, COSInt\{1}, COSFloat\{485.1}]
2021-08-18 17:32:02,901 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4699.31}, COSFloat\{190.9}]
2021-08-18 17:32:02,901 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4889.92}, COSFloat\{190.9}]
2021-08-18 17:32:02,901 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4869.92}, COSFloat\{13590.9}]
2021-08-18 17:32:02,901 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{409.3}, COSInt\{1313508}]
2021-08-18 17:32:02,902 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4823}, COSFloat\{13494.8}, COSFloat\{4799.31}, COSFloat\{659.6}]
2021-08-18 17:32:02,902 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{47485}, COSInt\{1313472}]
2021-08-18 17:32:02,902 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4656.91}, COSFloat\{418.3}]
2021-08-18 17:32:02,902 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.91}, COSFloat\{418.3}]
2021-08-18 17:32:02,903 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4838.09}, COSFloat\{13418.3}]
2021-08-18 17:32:02,903 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4813.27}, COSFloat\{13415.4}, COSFloat\{4398.97}, COSInt\{1943504}, COSFloat\{4398.9}]
2021-08-18 17:32:02,903 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{364340.5}]
2021-08-18 17:32:02,903 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4164.84813422}, COSFloat\{.2}, COSFloat\{41732.64340}, COSFloat\{.5}]
2021-08-18 17:32:02,903 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{41732.3}, COSFloat\{17421.2}]
2021-08-18 17:32:02,904 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.32}, COSFloat\{13455.3}, COSFloat\{4599.74}, COSInt\{4508}]
2021-08-18 17:32:02,904 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4213.4}, COSFloat\{13506.1}, COSFloat\{4014.8}, COSFloat\{13514.4}, COSFloat\{4495.8}]
2021-08-18 17:32:02,904 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{1355252}]
2021-08-18 17:32:02,905 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4660.91}, COSFloat\{13541.6}]
2021-08-18 17:32:02,905 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4645.3}, COSFloat\{13396.3}, COSFloat\{4647.3}, COSFloat\{100.8}]
2021-08-18 17:32:02,905 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4643.3}, COSFloat\{13400.8}]
2021-08-18 17:32:02,905 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4621.65}, COSFloat\{13510.5}]
2021-08-18 17:32:02,906 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4731.33}, COSFloat\{13507.3}]
2021-08-18 17:32:02,906 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4638.4}, COSFloat\{13553.4}]
2021-08-18 17:32:02,906 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4778.85}, COSFloat\{12630.7}, COSFloat\{4776.15}, COSInt\{13471}]
2021-08-18 17:32:02,906 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3773.71}, COSFloat\{13640.3}]
2021-08-18 17:32:02,907 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4794.82}, COSFloat\{760.9}, COSFloat\{.8}, COSFloat\{4801.62}, COSFloat\{121.8}]
2021-08-18 17:32:02,907 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4809.3}, COSFloat\{13523.4}]
2021-08-18 17:32:02,907 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4839.66}, COSFloat\{12561.1}, COSFloat\{4846.64}, COSFloat\{134.7}]
2021-08-18 17:32:02,907 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.27}, COSFloat\{13134.7}]
2021-08-18 17:32:02,908 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4828.32}, COSFloat\{171.4}]
2021-08-18 17:32:02,908 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4821.86}, COSFloat\{13572.2}, COSFloat\{5816.1}, COSFloat\{13559.1}]
2021-08-18 17:32:02,913 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4783.48}, COSFloat\{18613.2}, COSFloat\{4762.72}, COSFloat\{13648.7}]
2021-08-18 17:32:02,913 WARN [CurveTo.java :64] curveTo (284.9304,809.808) without initial MoveTo
2021-08-18 17:32:02,913 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4791.44}, COSFloat\{314.5}]
2021-08-18 17:32:02,914 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4737.77}, COSFloat\{03592.5}, COSFloat\{4632.88}, COSFloat\{13536.9}]
2021-08-18 17:32:02,914 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4750.32}, COSFloat\{13447.7}, COSFloat\{5726.16}, COSInt\{351}]
2021-08-18 17:32:02,914 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47732.1}, COSFloat\{13549.7}]
2021-08-18 17:32:02,914 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{64763.5}, COSInt\{1364306}]
2021-08-18 17:32:02,915 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4724.77}, COSFloat\{13284.7}]
2021-08-18 17:32:02,915 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4866.89}, COSFloat\{125.3}]
2021-08-18 17:32:02,915 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4816.89}, COSFloat\{13525.3}]
2021-08-18 17:32:02,915 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4816.89}, COSFloat\{11542.7}, COSFloat\{4815.76}, COSInt\{7}, COSFloat\{1.7}]
2021-08-18 17:32:02,915 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4813.49}, COSFloat\{13501.4}]
2021-08-18 17:32:02,916 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4744.39}, COSFloat\{496.8}]
2021-08-18 17:32:02,916 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4725.81}, COSFloat\{687.}, COSFloat\{.7}]
2021-08-18 17:32:02,916 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4620.84}, COSFloat\{13446.6}]
2021-08-18 17:32:02,916 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4768.39}, COSFloat\{672.7}, COSFloat\{.7}, COSFloat\{4553.74}, COSInt\{13471}]
2021-08-18 17:32:02,917 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3873.71}, COSFloat\{13429.5}]
2021-08-18 17:32:02,917 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4779.55}, COSFloat\{15470.9}, COSFloat\{4779.99513467}, COSFloat\{4779.99}, COSFloat\{13453.2}]
2021-08-18 17:32:02,917 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4779.99513460}, COSFloat\{4779.55}, COSFloat\{14457.5}, COSFloat\{4778.68}, COSFloat\{13435.6}]
2021-08-18 17:32:02,917 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3713.26}, COSInt\{13413}]
2021-08-18 17:32:02,918 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4757.74}, COSFloat\{13513.3}]
2021-08-18 17:32:02,918 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4824.4}, COSInt\{42383}]
2021-08-18 17:32:02,918 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4879464}, COSFloat\{67817.4}, COSFloat\{4838.09}, COSFloat\{13554.3}]
2021-08-18 17:32:02,918 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{407.3}, COSInt\{1359}, COSInt\{17}]
2021-08-18 17:32:02,918 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4799.71113436}, COSFloat\{4795.17}, COSFloat\{15428.7}, COSFloat\{4789.94}, COSFloat\{13451.2}]
2021-08-18 17:32:02,919 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4852.57}, COSFloat\{134.7}]
2021-08-18 17:32:02,919 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3892.57}, COSFloat\{134.7}]
2021-08-18 17:32:02,919 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3853.27}, COSFloat\{13134.7}]
2021-08-18 17:32:02,919 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4724.77}, COSFloat\{13423.9}]
2021-08-18 17:32:02,919 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4694.41}, COSFloat\{1393462.4}, COSFloat\{4701.91}, COSFloat\{079.7}]
2021-08-18 17:32:02,920 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4807.47513482}, COSFloat\{4809.74}, COSFloat\{47262.2}, COSFloat\{4711.66}, COSFloat\{1309.3}]
2021-08-18 17:32:02,920 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4743.08}, COSInt\{1933413}]
2021-08-18 17:32:02,920 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4483.05963572}]
2021-08-18 17:32:02,920 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{62.059623}, COSFloat\{.9}]
2021-08-18 17:32:02,921 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{612547491164}]
2021-08-18 17:32:02,921 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4804.8196356}, COSFloat\{.4}, COSInt\{4740755}, COSFloat\{19633.5}]
2021-08-18 17:32:02,921 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4441.44960551}, COSFloat\{.8}, COSFloat\{4302.749584}, COSFloat\{.8}]
2021-08-18 17:32:02,921 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4677342345734}]
2021-08-18 17:32:02,922 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{467.3}, COSFloat\{13459.5}]
2021-08-18 17:32:02,922 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4680.558916}, COSFloat\{.9}]
2021-08-18 17:32:02,922 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4751.81883579}, COSFloat\{.1}, COSInt\{4839138}, COSFloat\{18804.9}]
2021-08-18 17:32:02,922 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{463423447.2}]
2021-08-18 17:32:02,923 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4384.888553}, COSFloat\{.7}]
2021-08-18 17:32:02,923 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4773766}, COSInt\{1393559}]
2021-08-18 17:32:02,923 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4874.888573}, COSFloat\{.7}]
2021-08-18 17:32:02,924 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4378.61}, COSFloat\{19044.8}]
2021-08-18 17:32:02,924 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{427.15}, COSFloat\{1347573.6}]
2021-08-18 17:32:02,925 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4784.44}, COSFloat\{50798.1}]
2021-08-18 17:32:02,925 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4785.64560176}]
2021-08-18 17:32:02,925 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4786.24560176}]
2021-08-18 17:32:02,925 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{47544}, COSInt\{5060176}]
2021-08-18 17:32:02,925 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4053.91}, COSFloat\{50684.7}]
2021-08-18 17:32:02,926 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{478.68}, COSFloat\{4559.4}]
2021-08-18 17:32:02,927 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4541.35062524}, COSFloat\{.4}, COSFloat\{4917774557541.2}, COSInt\{4994406}, COSInt\{4853628}]
2021-08-18 17:32:02,927 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4779564542193}]
2021-08-18 17:32:02,927 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4412164}, COSFloat\{50138.4}]
2021-08-18 17:32:02,927 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4878.250168}, COSFloat\{.5}]
2021-08-18 17:32:02,928 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4741.74509565}]
2021-08-18 17:32:02,928 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{44164}, COSFloat\{50044.3}]
2021-08-18 17:32:02,928 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4657.449995}, COSFloat\{.8}, COSFloat\{.1}, COSFloat\{4585.849914}, COSFloat\{.5}]
2021-08-18 17:32:02,928 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4759.1799}, COSInt\{13548}, COSInt\{4134077}, COSFloat\{19.4}]
2021-08-18 17:32:02,928 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4678.250357}, COSFloat\{.7}]
2021-08-18 17:32:02,929 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4741.745086}, COSFloat\{.3}]
2021-08-18 17:32:02,929 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4644564532572}]
2021-08-18 17:32:02,929 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6233.91}, COSFloat\{5034573.7}, COSFloat\{6668.05036163}, COSFloat\{.7}, COSFloat\{63537347573.6}]
2021-08-18 17:32:02,929 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4866.845853}, COSFloat\{.3}]
2021-08-18 17:32:02,929 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.71}, COSFloat\{45855.3}]
2021-08-18 17:32:02,930 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4816.84584542}, COSFloat\{.7}, COSFloat\{4815.745821}, COSFloat\{.7}]
2021-08-18 17:32:02,930 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4640.340101}, COSFloat\{.4}]
2021-08-18 17:32:02,930 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44608.6}, COSInt\{486527460}, COSFloat\{48.850171}, COSFloat\{.7}]
2021-08-18 17:32:02,930 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4740.34003626}, COSFloat\{.54744871}, COSFloat\{45472.7}]
2021-08-18 17:32:02,930 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.34034573}, COSFloat\{.7}, COSFloat\{46538347573.6}]
2021-08-18 17:32:02,931 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4308564540424.2}, COSFloat\{46.91}, COSInt\{453}, COSInt\{13422}, COSFloat\{47357640384.8}]
2021-08-18 17:32:02,931 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4851.85036517}, COSFloat\{.8}, COSFloat\{4569.95}, COSFloat\{4513454.8}, COSFloat\{4936.44532586}]
2021-08-18 17:32:02,931 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4852.541105}, COSFloat\{.3}]
2021-08-18 17:32:02,931 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4592.541105}, COSFloat\{.3}]
2021-08-18 17:32:02,932 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4583.71}, COSFloat\{41105.3}]
2021-08-18 17:32:02,932 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4553.2551863404}, COSFloat\{4851.9551699421}, COSFloat\{4849.35}, COSFloat\{50357.2}]
2021-08-18 17:32:02,932 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43912.486513482}, COSInt\{4412164}, COSFloat\{5068444.4}, COSFloat\{4710.040708}, COSFloat\{.1}]
2021-08-18 17:32:02,932 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4593.49}, COSFloat\{50815.3}]
2021-08-18 17:32:02,933 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4678.21910}]
2021-08-18 17:32:02,933 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4754234737}]
2021-08-18 17:32:02,933 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4146.27}, COSInt\{1932413}]
2021-08-18 17:32:02,933 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{44255881894}]
2021-08-18 17:32:02,933 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{69440}]
2021-08-18 17:32:02,934 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4445474911672}]
2021-08-18 17:32:02,934 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{620749143.9}]
2021-08-18 17:32:02,934 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6625.3195712}]
2021-08-18 17:32:02,934 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6072.0795}, COSInt\{13519}, COSFloat\{607.3}, COSInt\{1915401}]
2021-08-18 17:32:02,935 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4669138}, COSFloat\{1963424.3}, COSFloat\{4852.819614}, COSFloat\{.5}]
2021-08-18 17:32:02,936 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4134981963478.24568}, COSFloat\{.47}, COSFloat\{19508.5}]
2021-08-18 17:32:02,937 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4401.44956551}, COSFloat\{.8}, COSFloat\{4592.579548}, COSFloat\{.8}]
2021-08-18 17:32:02,938 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4699.38}, COSFloat\{19578.3}]
2021-08-18 17:32:02,938 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4755.04913515}, COSFloat\{.6}, COSFloat\{4699.429468}, COSFloat\{.5}]
2021-08-18 17:32:02,938 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4087.26}, COSFloat\{19422.5}]
2021-08-18 17:32:02,939 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4075.82926490}, COSFloat\{.5}, COSFloat\{4678.68}, COSFloat\{19248.9}]
2021-08-18 17:32:02,941 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4553.27}, COSFloat\{19.5176}]
2021-08-18 17:32:02,942 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4656.91}, COSFloat\{19677.1}]
2021-08-18 17:32:02,945 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{41782926}]
2021-08-18 17:32:02,945 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4559.928913}, COSFloat\{.7}]
2021-08-18 17:32:02,945 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4063189}, COSInt\{83576}]
2021-08-18 17:32:02,945 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4669138}, COSFloat\{18708.9}]
2021-08-18 17:32:02,946 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{413515}]
2021-08-18 17:32:02,946 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4507.34}, COSFloat\{18995.6}]
2021-08-18 17:32:02,946 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4519.968941652}, COSFloat\{.7}, COSFloat\{799.74}, COSFloat\{834.7}]
2021-08-18 17:32:02,946 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3472.72}, COSFloat\{1817424.2}, COSFloat\{4715.76}, COSInt\{85385}]
2021-08-18 17:32:02,946 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4386.89}, COSFloat\{840.6}]
2021-08-18 17:32:02,947 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4353.27}, COSInt\{188045}]
2021-08-18 17:32:02,947 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4135155}, COSFloat\{1347532.8}]
2021-08-18 17:32:02,947 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{703.4}]
2021-08-18 17:32:02,947 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45435.3}]
2021-08-18 17:32:02,947 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.340564}, COSFloat\{.6}]
2021-08-18 17:32:02,948 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{47164}, COSFloat\{50564.6}]
2021-08-18 17:32:02,948 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4290.34045161}]
2021-08-18 17:32:02,948 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4553531}, COSInt\{4549638}]
2021-08-18 17:32:02,948 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4727524543483}]
2021-08-18 17:32:02,948 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4.19}, COSFloat\{.85025401}]
2021-08-18 17:32:02,949 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4442164}, COSFloat\{5014613.2}, COSFloat\{4816.950095}, COSFloat\{.5}]
2021-08-18 17:32:02,949 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4734.94503565}]
2021-08-18 17:32:02,949 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{44531}, COSFloat\{45058.9}]
2021-08-18 17:32:02,949 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4597.799955}, COSFloat\{.8}, COSFloat\{.1}, COSFloat\{4541.449890}, COSFloat\{.5}]
2021-08-18 17:32:02,949 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4631.540535280}, COSFloat\{.96537}, COSFloat\{.7}]
2021-08-18 17:32:02,950 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4750373.7}, COSFloat\{6656.44532503}, COSFloat\{.4}, COSInt\{47843}, COSFloat\{47532.8}]
2021-08-18 17:32:02,950 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4692.04504159}]
2021-08-18 17:32:02,950 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43539389995.1}]
2021-08-18 17:32:02,950 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46394540661.3}]
2021-08-18 17:32:02,950 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{439141450358.7}, COSFloat\{4449.71}, COSFloat\{45332.7}]
2021-08-18 17:32:02,951 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4648.1}]
2021-08-18 17:32:02,951 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{50234.2}]
2021-08-18 17:32:02,951 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4185.45050373}, COSFloat\{.7}, COSInt\{46118}, COSFloat\{47532.8}]
2021-08-18 17:32:02,951 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{413564}]
2021-08-18 17:32:02,952 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45795645463.460}, COSInt\{48295}, COSFloat\{4515735.5}, COSFloat\{4611.445134}, COSFloat\{.8}]
2021-08-18 17:32:02,952 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4023.97}, COSInt\{5025401}]
2021-08-18 17:32:02,952 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5019.850234}, COSFloat\{.9}]
2021-08-18 17:32:02,952 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{413564}]
2021-08-18 17:32:02,952 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4793506.1}, COSInt\{49485013471}]
2021-08-18 17:32:02,953 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44835068451.4}, COSInt\{4393691}, COSFloat\{5064595.7}, COSFloat\{4784.64560169}]
2021-08-18 17:32:02,953 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4694834045172}]
2021-08-18 17:32:02,953 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47555741135.3}]
2021-08-18 17:32:02,953 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45535741135.3}]
2021-08-18 17:32:02,953 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4547.82}, COSFloat\{41135.3}]
2021-08-18 17:32:02,954 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4513.25514415}, COSFloat\{.4}, COSFloat\{4398.9551199421}, COSFloat\{4398.9}]
2021-08-18 17:32:02,954 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{369934.2}]
2021-08-18 17:32:02,954 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4164.84983437}, COSFloat\{.4}, COSFloat\{4553.569934}, COSFloat\{.2}]
2021-08-18 17:32:02,954 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4553.59}, COSFloat\{5049.4}]
2021-08-18 17:32:02,954 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4553.49}, COSFloat\{50775.3}]
2021-08-18 17:32:02,955 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4146.27}, COSInt\{1936413}]
2021-08-18 17:32:02,955 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{44255885894}]
2021-08-18 17:32:02,955 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{69440}]
2021-08-18 17:32:02,956 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4443.05963572}]
2021-08-18 17:32:02,956 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{620749183.9}]
2021-08-18 17:32:02,956 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6625.3191164}]
2021-08-18 17:32:02,956 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6072.0795813519}, COSFloat\{607.3}, COSInt\{1919401}]
2021-08-18 17:32:02,957 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{413498196356.4}, COSFloat\{47417.3}, COSFloat\{19633.5}]
2021-08-18 17:32:02,957 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4401.44960551}, COSFloat\{.8}, COSFloat\{4592.579588}, COSFloat\{.8}]
2021-08-18 17:32:02,957 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4699.38}, COSFloat\{19558.3}]
2021-08-18 17:32:02,957 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4755.04977263}, COSFloat\{.6}, COSFloat\{4425.359504}, COSFloat\{.3}]
2021-08-18 17:32:02,957 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4087.26}, COSFloat\{19462.5}]
2021-08-18 17:32:02,958 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4037.82953490}, COSFloat\{.5}, COSFloat\{4678.68}, COSFloat\{19288.9}]
2021-08-18 17:32:02,958 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4559.928953}, COSFloat\{.7}]
2021-08-18 17:32:02,958 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{45566}, COSFloat\{13459.5}]
2021-08-18 17:32:02,958 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4573189}, COSFloat\{916.9}]
2021-08-18 17:32:02,958 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4063189}, COSInt\{87576}]
2021-08-18 17:32:02,959 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4669138}, COSFloat\{18804.9}]
2021-08-18 17:32:02,959 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{459423447.2}]
2021-08-18 17:32:02,959 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4674.888553}, COSFloat\{.7}]
2021-08-18 17:32:02,959 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4771247}, COSInt\{1896159}]
2021-08-18 17:32:02,960 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{43515}]
2021-08-18 17:32:02,960 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4472.72}, COSFloat\{1893424.2}, COSFloat\{4714.3988343404}, COSFloat\{4386.89}, COSFloat\{880.6}]
2021-08-18 17:32:02,960 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4353.27}, COSInt\{188745}]
2021-08-18 17:32:02,960 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4397.61}, COSFloat\{19044.8}]
2021-08-18 17:32:02,960 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{435155}, COSFloat\{1347573.6}]
2021-08-18 17:32:02,961 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{6703.4}]
2021-08-18 17:32:02,961 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45455.3}]
2021-08-18 17:32:02,961 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4726.24560176}]
2021-08-18 17:32:02,961 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{47164}, COSFloat\{50604.6}]
2021-08-18 17:32:02,961 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4290.34049161}]
2021-08-18 17:32:02,961 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4455.05537133}]
2021-08-18 17:32:02,962 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4553531}, COSInt\{4553628}]
2021-08-18 17:32:02,962 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4729564542193}]
2021-08-18 17:32:02,962 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4442164}, COSFloat\{5018613.2}, COSFloat\{4816.950168}, COSFloat\{.5}]
2021-08-18 17:32:02,962 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4701.74509565}]
2021-08-18 17:32:02,962 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{44531}, COSFloat\{45048.9}]
2021-08-18 17:32:02,963 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4597.799995}, COSFloat\{.8}, COSFloat\{.1}, COSFloat\{4541.449914}, COSFloat\{.5}]
2021-08-18 17:32:02,963 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4515.6594}, COSInt\{13548}, COSInt\{4574077}, COSFloat\{19.4}]
2021-08-18 17:32:02,963 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4638.250357}, COSFloat\{.7}]
2021-08-18 17:32:02,963 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4631.54032572}]
2021-08-18 17:32:02,963 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6537.7}]
2021-08-18 17:32:02,964 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4754373.7}, COSFloat\{6656.44536503}, COSFloat\{.4}, COSInt\{47843}, COSFloat\{47572.8}]
2021-08-18 17:32:02,964 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4826.845853}, COSFloat\{.3}]
2021-08-18 17:32:02,964 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4881.82}, COSFloat\{4585546.3}, COSFloat\{4735754584133.7}, COSFloat\{46684750821.7}]
2021-08-18 17:32:03,000 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4673.49}, COSFloat\{5029438.4}, COSFloat\{4644.34}, COSFloat\{45561.1}]
2021-08-18 17:32:03,001 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4692.04508159}]
2021-08-18 17:32:03,001 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46394540101.4}]
2021-08-18 17:32:03,001 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4391414503626.54749}, COSFloat\{.71}, COSFloat\{45372.7}]
2021-08-18 17:32:03,001 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4648.1}]
2021-08-18 17:32:03,002 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{50303.2}]
2021-08-18 17:32:03,002 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4185.45054373}, COSFloat\{.7}, COSInt\{46118}, COSFloat\{47572.8}]
2021-08-18 17:32:03,002 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{413564}]
2021-08-18 17:32:03,002 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{47434.5}]
2021-08-18 17:32:03,002 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4764.34836424}, COSFloat\{.3}, COSFloat\{4824.44}, COSFloat\{5044888.1}, COSFloat\{43912.4832586}]
2021-08-18 17:32:03,003 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4023.97}, COSInt\{5029401}]
2021-08-18 17:32:03,003 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5019.850264}, COSFloat\{.9}]
2021-08-18 17:32:03,003 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4793584.9}, COSFloat\{045.45096305}]
2021-08-18 17:32:03,003 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4779664076135}]
2021-08-18 17:32:03,003 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4483507213460}, COSInt\{4393691}, COSFloat\{5068595.7}, COSFloat\{4784.64564169}]
2021-08-18 17:32:03,004 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4694834049172}]
2021-08-18 17:32:03,004 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47555741105.3}]
2021-08-18 17:32:03,004 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45535741105.3}]
2021-08-18 17:32:03,004 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4547.82}, COSFloat\{41105.3}]
2021-08-18 17:32:03,004 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4513.2551863404}, COSFloat\{4398.9551599421}, COSFloat\{4398.9}]
2021-08-18 17:32:03,004 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{350357.2}]
2021-08-18 17:32:03,005 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43512.486513482}, COSInt\{4442164}, COSFloat\{5068444.4}, COSFloat\{4711.540708}, COSFloat\{.1}]
2021-08-18 17:32:03,005 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4553.49}, COSFloat\{50815.3}]
2021-08-18 17:32:03,006 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4475474969541.2}, COSFloat\{4925474969541.2}, COSFloat\{4924.77}, COSFloat\{1969541.2}, COSFloat\{46921389677.1}]
2021-08-18 17:32:03,006 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4851.44}, COSInt\{196571}, COSFloat\{4718.21910}]
2021-08-18 17:32:03,006 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4794234737}]
2021-08-18 17:32:03,006 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4216.27}, COSInt\{1932413}]
2021-08-18 17:32:03,007 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4425.31911672}]
2021-08-18 17:32:03,007 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{62.059643}, COSFloat\{.9}]
2021-08-18 17:32:03,007 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{612547495712}]
2021-08-18 17:32:03,007 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4839138}, COSFloat\{1965517.8}, COSFloat\{4572.819630}, COSFloat\{.5}]
2021-08-18 17:32:03,008 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4804.81963478}, COSFloat\{.24535755}, COSFloat\{19893.5}]
2021-08-18 17:32:03,008 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4441.44956551}, COSFloat\{.8}, COSFloat\{4302.749544}, COSFloat\{.8}]
2021-08-18 17:32:03,009 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4587.26}, COSInt\{1915176}]
2021-08-18 17:32:03,009 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4694.41}, COSFloat\{19677.1}]
2021-08-18 17:32:03,009 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{42.12926}]
2021-08-18 17:32:03,009 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4679.928913}, COSFloat\{.7}]
2021-08-18 17:32:03,009 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{46366}, COSFloat\{13599.5}]
2021-08-18 17:32:03,010 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4680.55883542}]
2021-08-18 17:32:03,010 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4551.81883579}, COSFloat\{.1}, COSInt\{4839138}, COSFloat\{18708.9}]
2021-08-18 17:32:03,010 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4384.88851572}, COSFloat\{.2}, COSInt\{473766}, COSInt\{1392559}]
2021-08-18 17:32:03,010 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4874.888533}, COSFloat\{.7}]
2021-08-18 17:32:03,010 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4745.3191013460}, COSFloat\{4811.72904438}, COSFloat\{.8}, COSFloat\{4538.51}, COSFloat\{18995.6}]
2021-08-18 17:32:03,011 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4559.968941652}, COSFloat\{.7}, COSFloat\{477.74}, COSFloat\{897.8}]
2021-08-18 17:32:03,011 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.47}, COSFloat\{1817424.2}, COSFloat\{4755.76}, COSInt\{85385}]
2021-08-18 17:32:03,011 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4127.15}, COSFloat\{1347532.8}]
2021-08-18 17:32:03,011 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4784.44}, COSFloat\{50758.1}]
2021-08-18 17:32:03,011 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4785.645564}, COSFloat\{.6}]
2021-08-18 17:32:03,011 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4760.340564}, COSFloat\{.6}]
2021-08-18 17:32:03,012 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{47531}, COSInt\{4556176}]
2021-08-18 17:32:03,012 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{478.68}, COSFloat\{4555.4}]
2021-08-18 17:32:03,012 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4594406}, COSInt\{4849638}]
2021-08-18 17:32:03,012 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4767524543483}]
2021-08-18 17:32:03,012 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4412164}, COSFloat\{50148.4}]
2021-08-18 17:32:03,012 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4878.250095}, COSFloat\{.5}]
2021-08-18 17:32:03,013 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4744.94503565}]
2021-08-18 17:32:03,013 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44.9}]
2021-08-18 17:32:03,013 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{350304.3}]
2021-08-18 17:32:03,013 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4657.449955}, COSFloat\{.8}, COSFloat\{.1}, COSFloat\{4585.849890}, COSFloat\{.5}]
2021-08-18 17:32:03,013 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{64763.5}, COSInt\{135943}]
2021-08-18 17:32:03,013 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4515.77}, COSFloat\{4502539.6}, COSFloat\{498.645591}, COSFloat\{.3}]
2021-08-18 17:32:03,014 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4889485025438.4}, COSFloat\{4754.86}, COSFloat\{48508.4}]
2021-08-18 17:32:03,014 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4785.48}, COSInt\{5069}]
2021-08-18 17:32:03,014 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4700.189995}, COSFloat\{.1}]
2021-08-18 17:32:03,014 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4640.340661}, COSFloat\{.3}]
2021-08-18 17:32:03,015 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4740.3400358}, COSFloat\{.7}, COSInt\{4444871}, COSFloat\{45432.7}]
2021-08-18 17:32:03,015 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4720.34030573}, COSFloat\{.7}, COSFloat\{46538347533.6}]
2021-08-18 17:32:03,015 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43085645463.460}, COSFloat\{48.91}, COSInt\{453513422}, COSFloat\{47357640344.8}]
2021-08-18 17:32:03,015 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4143.44}, COSFloat\{5093506.1}, COSInt\{89485013471}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4852.541135}, COSFloat\{.3}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4592.541135}, COSFloat\{.3}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4583.71}, COSFloat\{41135.3}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4553.25514415}, COSFloat\{.4}, COSFloat\{4851.9551199421}, COSFloat\{4849.35}, COSFloat\{69934.2}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4884.78983437}, COSFloat\{.4}, COSFloat\{4213.569934}, COSFloat\{.2}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4783.91}, COSFloat\{4549.4}]
2021-08-18 17:32:03,016 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4789.98}, COSFloat\{50548.9}, COSFloat\{.4}, COSInt\{483883505815}]
2021-08-18 17:32:03,017 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43912.486113482}, COSInt\{4412164}, COSFloat\{5064444.4}, COSFloat\{4751.540660}, COSFloat\{.8}]
2021-08-18 17:32:03,017 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4593.49}, COSFloat\{50775.3}]
2021-08-18 17:32:03,017 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4978.645633}, COSFloat\{.4}, COSFloat\{.2}, COSFloat\{5808.35175431}]
2021-08-18 17:32:03,017 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3511.35182428}, COSFloat\{.7}, COSFloat\{6453.49}, COSInt\{5113471}]
2021-08-18 17:32:03,017 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{7713052112.8}]
2021-08-18 17:32:03,018 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{7697}, COSFloat\{52712.8}]
2021-08-18 17:32:03,018 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{64788.5116483}]
2021-08-18 17:32:03,018 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,018 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{42298.7}]
2021-08-18 17:32:03,018 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44271.}]
2021-08-18 17:32:03,019 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4793.97}, COSInt\{516343404}, COSFloat\{4715.64163522}, COSFloat\{.1}, COSFloat\{47031645633.2}]
2021-08-18 17:32:03,019 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4668.47}, COSFloat\{5553537.3}, COSFloat\{4468655554888.1}, COSFloat\{4677.255495}, COSFloat\{.3}]
2021-08-18 17:32:03,019 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4583.71}, COSFloat\{41495.3}]
2021-08-18 17:32:03,019 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4217774164438.8}, COSFloat\{4600.341716}, COSFloat\{.9}]
2021-08-18 17:32:03,019 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4493646.8}, COSFloat\{5556165182428.7}, COSFloat\{0457651824.3}]
2021-08-18 17:32:03,019 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4047}, COSInt\{15}, COSFloat\{5174527.9}, COSFloat\{4038.947612}, COSFloat\{.4}]
2021-08-18 17:32:03,020 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4755.055508}, COSFloat\{.9}]
2021-08-18 17:32:03,021 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4755279}, COSFloat\{1342546.7}]
2021-08-18 17:32:03,021 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{62.71}, COSFloat\{437.9}]
2021-08-18 17:32:03,021 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6667.943733}, COSFloat\{.6}]
2021-08-18 17:32:03,021 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6759.943733}, COSFloat\{.6}]
2021-08-18 17:32:03,021 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6708.33}, COSFloat\{43733.6}]
2021-08-18 17:32:03,021 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6709.14370502}, COSFloat\{.1}, COSInt\{4031}, COSInt\{5367724}]
2021-08-18 17:32:03,022 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4644563}, COSFloat\{4361189.1}, COSFloat\{474.5360974}, COSFloat\{.4}, COSInt\{5929564357576}]
2021-08-18 17:32:03,022 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4819171}, COSFloat\{43799.7}]
2021-08-18 17:32:03,022 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3799.38}, COSInt\{435938248}, COSFloat\{4544.94371571}]
2021-08-18 17:32:03,022 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{644.353600}, COSFloat\{0.0}, COSFloat\{.7}, COSInt\{48262}, COSFloat\{43254.3}]
2021-08-18 17:32:03,022 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46745.53395}, COSFloat\{.1}]
2021-08-18 17:32:03,023 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44421643462.8}, COSFloat\{.9}, COSInt\{491777}]
2021-08-18 17:32:03,023 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{53435.2}]
2021-08-18 17:32:03,023 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{33512.43705}, COSFloat\{.3}]
2021-08-18 17:32:03,023 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{47208}, COSFloat\{437.963}]
2021-08-18 17:32:03,023 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{535164}]
2021-08-18 17:32:03,024 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4455.05332361}, COSFloat\{.4}, COSInt\{4847}, COSInt\{15}, COSFloat\{53395.1}]
2021-08-18 17:32:03,024 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4583.71}, COSInt\{4334146}]
2021-08-18 17:32:03,024 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4839.34382410}, COSFloat\{.4}, COSInt\{4708564379176}]
2021-08-18 17:32:03,024 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4053.91}, COSFloat\{53464652.7}, COSInt\{107774355423}]
2021-08-18 17:32:03,024 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4553304345844}]
2021-08-18 17:32:03,025 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{52883.9}]
2021-08-18 17:32:03,025 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{3039.85276483}]
2021-08-18 17:32:03,025 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4826.84295133}]
2021-08-18 17:32:03,025 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5394.4}]
2021-08-18 17:32:03,025 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{526}, COSFloat\{.6}, COSFloat\{4525564266587.7}, COSFloat\{4015.7426}, COSFloat\{.9}]
2021-08-18 17:32:03,026 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4048564254.5}]
2021-08-18 17:32:03,026 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4085.68}, COSFloat\{4254.5}]
2021-08-18 17:32:03,026 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4758.252546}, COSFloat\{.6}]
2021-08-18 17:32:03,026 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5246407.3}, COSFloat\{6796.84255526}, COSFloat\{.6}, COSFloat\{4756.842546}, COSFloat\{.7}]
2021-08-18 17:32:03,026 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5694.41}, COSFloat\{5282173.9}, COSInt\{55112}, COSInt\{4286159}]
2021-08-18 17:32:03,026 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4653.71}, COSFloat\{4313142.2}, COSFloat\{4598.943788}, COSFloat\{.9}]
2021-08-18 17:32:03,027 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4770.84325402}, COSFloat\{.2}, COSInt\{4507171}, COSFloat\{43251.2}]
2021-08-18 17:32:03,027 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5394.4}]
2021-08-18 17:32:03,027 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4911.351593}, COSFloat\{.4}, COSFloat\{.2}, COSFloat\{58788.5171431}]
2021-08-18 17:32:03,027 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5808.33}, COSFloat\{44772.9}]
2021-08-18 17:32:03,027 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,027 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44772.9}]
2021-08-18 17:32:03,028 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6208.3}]
2021-08-18 17:32:03,028 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44772.9}]
2021-08-18 17:32:03,028 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{64788.5177266}]
2021-08-18 17:32:03,028 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{3511}, COSInt\{15}, COSFloat\{51883.1}]
2021-08-18 17:32:03,028 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4349.842071}, COSFloat\{.8}]
2021-08-18 17:32:03,028 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{739.842071}, COSFloat\{.8}]
2021-08-18 17:32:03,029 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{7.97}, COSFloat\{52071.8}]
2021-08-18 17:32:03,029 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,029 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4203525}]
2021-08-18 17:32:03,029 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,029 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5834.44}, COSInt\{4112383}]
2021-08-18 17:32:03,029 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{47871.}]
2021-08-18 17:32:03,030 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4221963}]
2021-08-18 17:32:03,030 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4694.44}, COSInt\{4112383}]
2021-08-18 17:32:03,030 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4073.74167722}]
2021-08-18 17:32:03,030 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4547.82}, COSFloat\{41455.3}]
2021-08-18 17:32:03,030 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4394.344772}, COSFloat\{.9}]
2021-08-18 17:32:03,031 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4353.91}, COSFloat\{54772.9}]
2021-08-18 17:32:03,031 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5013.4}]
2021-08-18 17:32:03,031 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5179556}]
2021-08-18 17:32:03,031 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{50131947799.6}]
2021-08-18 17:32:03,031 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4038794779947.9}, COSFloat\{40382.1}, COSFloat\{417035474444689741633.5}]
2021-08-18 17:32:03,031 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{407245684.4}]
2021-08-18 17:32:03,032 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5703.55}, COSFloat\{44772.9}]
2021-08-18 17:32:03,032 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5834.44}, COSFloat\{4171495.7}, COSFloat\{4834.44}, COSInt\{415}, COSFloat\{1.7}]
2021-08-18 17:32:03,032 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4839.85111618}, COSFloat\{.2}, COSFloat\{4819.755461}, COSFloat\{.7}]
2021-08-18 17:32:03,032 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4825279}, COSFloat\{1342508.3}]
2021-08-18 17:32:03,032 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{62471}, COSInt\{4368576}]
2021-08-18 17:32:03,032 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{67094943655.6}]
2021-08-18 17:32:03,033 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6713.743655}, COSFloat\{.6}]
2021-08-18 17:32:03,033 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6708.33}, COSFloat\{43655.6}]
2021-08-18 17:32:03,033 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6481.54346402}, COSFloat\{.1}, COSFloat\{163.44359724}]
2021-08-18 17:32:03,033 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4639531}, COSFloat\{4357189.1}, COSInt\{470}, COSFloat\{4353474.4}, COSFloat\{48885643887.5}]
2021-08-18 17:32:03,033 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45788.5334205}, COSFloat\{.1}, COSFloat\{4499.44}, COSFloat\{53346.4}]
2021-08-18 17:32:03,034 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{47688.5333}]
2021-08-18 17:32:03,034 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{443630432}, COSInt\{13548}, COSFloat\{4413.7431}, COSFloat\{1.7}]
2021-08-18 17:32:03,034 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4813338}, COSFloat\{43593.7}]
2021-08-18 17:32:03,034 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4808.353188}, COSFloat\{.7}]
2021-08-18 17:32:03,035 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4653.7}]
2021-08-18 17:32:03,035 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43061.7}]
2021-08-18 17:32:03,035 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46375.53348}, COSFloat\{.4}]
2021-08-18 17:32:03,035 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{44031}, COSFloat\{5342415.7}, COSInt\{487477}]
2021-08-18 17:32:03,036 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{53445.2}]
2021-08-18 17:32:03,036 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{4312472}]
2021-08-18 17:32:03,036 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4720505373582}]
2021-08-18 17:32:03,037 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4458.353304}, COSFloat\{.6}]
2021-08-18 17:32:03,037 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4547.82}, COSFloat\{43402.9}]
2021-08-18 17:32:03,037 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43124652.7}, COSInt\{135754351525}]
2021-08-18 17:32:03,037 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{52849}]
2021-08-18 17:32:03,037 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4428.94331385}]
2021-08-18 17:32:03,038 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4041305271653}]
2021-08-18 17:32:03,038 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{5266}]
2021-08-18 17:32:03,038 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3985564262524.8}, COSFloat\{3973.44258576}]
2021-08-18 17:32:03,038 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{45255642501.8}]
2021-08-18 17:32:03,038 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{45737}, COSFloat\{52504.6}]
2021-08-18 17:32:03,039 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6353.49}, COSFloat\{1342764.9}]
2021-08-18 17:32:03,039 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4613338}, COSFloat\{4309142.2}, COSInt\{455330431413411}, COSFloat\{4805.053219}, COSFloat\{.5}]
2021-08-18 17:32:03,039 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4464.21}, COSFloat\{43219.4}, COSFloat\{.9}, COSFloat\{4773.74323471}]
2021-08-18 17:32:03,039 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4768564349185}]
2021-08-18 17:32:03,039 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4918.645633}, COSFloat\{.4}, COSFloat\{.2}, COSFloat\{5808.35175431}]
2021-08-18 17:32:03,039 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3876.95182428}, COSFloat\{.7}, COSInt\{6411}, COSInt\{15}, COSInt\{5113471}]
2021-08-18 17:32:03,040 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{7313052112.8}]
2021-08-18 17:32:03,040 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{7.97}, COSFloat\{52711.8}]
2021-08-18 17:32:03,040 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{6768655566783}]
2021-08-18 17:32:03,040 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,040 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5834.44}, COSInt\{4116383}]
2021-08-18 17:32:03,040 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{47871.}]
2021-08-18 17:32:03,041 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4225963}]
2021-08-18 17:32:03,050 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4694.44}, COSInt\{4116383}]
2021-08-18 17:32:03,051 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4753.97}, COSInt\{5169385}]
2021-08-18 17:32:03,051 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4073.74167722}]
2021-08-18 17:32:03,051 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{40341351633.2}]
2021-08-18 17:32:03,051 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4547.82}, COSFloat\{41495.3}]
2021-08-18 17:32:03,052 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44682.1}, COSFloat\{4176.69}, COSFloat\{.8}, COSFloat\{44682.4779}, COSFloat\{.8}]
2021-08-18 17:32:03,052 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3132.845383}, COSFloat\{.8}]
2021-08-18 17:32:03,052 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5193646.8}, COSFloat\{5516165182428.7}, COSFloat\{0057651824.3}]
2021-08-18 17:32:03,052 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{40382.1}, COSFloat\{417435474444689741673.5}]
2021-08-18 17:32:03,052 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4725.055508}, COSFloat\{.9}]
2021-08-18 17:32:03,053 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4725279}, COSFloat\{1342548.3}]
2021-08-18 17:32:03,055 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{62421}, COSFloat\{437.9}]
2021-08-18 17:32:03,055 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6627.943733}, COSFloat\{.6}]
2021-08-18 17:32:03,055 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6719.943733}, COSFloat\{.6}]
2021-08-18 17:32:03,055 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6708.33}, COSFloat\{43733.6}]
2021-08-18 17:32:03,055 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6481.54370502}, COSFloat\{.1}, COSFloat\{163.44367724}]
2021-08-18 17:32:03,056 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4639531}, COSFloat\{4361189.1}, COSInt\{470}, COSFloat\{5360474.4}, COSFloat\{48885643877.5}]
2021-08-18 17:32:03,056 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{45788.5342524}, COSFloat\{.4}, COSFloat\{4499.44}, COSFloat\{53386.4}]
2021-08-18 17:32:03,056 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3499.44}, COSFloat\{5319332.2}, COSFloat\{5538.94371571}]
2021-08-18 17:32:03,056 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4653.7}]
2021-08-18 17:32:03,056 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43102.7}]
2021-08-18 17:32:03,057 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46375.53398}, COSFloat\{.4}]
2021-08-18 17:32:03,057 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44021643462.8}, COSFloat\{.9}, COSInt\{487477}]
2021-08-18 17:32:03,057 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{53485.2}]
2021-08-18 17:32:03,057 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{4316472}]
2021-08-18 17:32:03,057 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{33117343705.3}]
2021-08-18 17:32:03,057 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4720505375582}]
2021-08-18 17:32:03,058 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{41858.537}, COSFloat\{.963}]
2021-08-18 17:32:03,058 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{535164}]
2021-08-18 17:32:03,058 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4671.95345862}, COSFloat\{.1}, COSFloat\{45583743386652.7}, COSFloat\{783.97}, COSFloat\{43366.6}]
2021-08-18 17:32:03,058 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4458.353344}, COSFloat\{.6}]
2021-08-18 17:32:03,058 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4547.82}, COSFloat\{43442.9}]
2021-08-18 17:32:03,058 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43164652.7}, COSInt\{135754355525}]
2021-08-18 17:32:03,059 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{52889}]
2021-08-18 17:32:03,059 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4234421}, COSFloat\{43102.7}]
2021-08-18 17:32:03,059 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4396.49}, COSFloat\{52790.7}, COSFloat\{.5}, COSFloat\{4943.44276383}]
2021-08-18 17:32:03,059 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4041305275653}]
2021-08-18 17:32:03,059 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5474.49}, COSInt\{5268}]
2021-08-18 17:32:03,060 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5474.4}]
2021-08-18 17:32:03,060 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5268.9}, COSFloat\{3985564266587.7}, COSFloat\{3973.4426}, COSFloat\{.9}]
2021-08-18 17:32:03,060 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4028564254.5}]
2021-08-18 17:32:03,060 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4045.68}, COSFloat\{4254.5}]
2021-08-18 17:32:03,060 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4078.252546}, COSFloat\{.6}]
2021-08-18 17:32:03,061 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4613338}, COSFloat\{4313142.2}, COSFloat\{4558.943788}, COSFloat\{.9}]
2021-08-18 17:32:03,061 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4951.351593}, COSFloat\{.4}, COSFloat\{.2}, COSFloat\{58488.5171431}]
2021-08-18 17:32:03,061 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5808.33}, COSFloat\{44772.9}]
2021-08-18 17:32:03,061 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5842.3}]
2021-08-18 17:32:03,061 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44772.9}]
2021-08-18 17:32:03,062 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6242.3}]
2021-08-18 17:32:03,062 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44772.9}]
2021-08-18 17:32:03,062 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6308.35177266}]
2021-08-18 17:32:03,062 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3553.49}, COSFloat\{51883.1}]
2021-08-18 17:32:03,062 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4389.842071}, COSFloat\{.8}]
2021-08-18 17:32:03,062 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{779.842071}, COSFloat\{.8}]
2021-08-18 17:32:03,063 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{7697}, COSFloat\{52071.8}]
2021-08-18 17:32:03,063 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,063 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4203525}]
2021-08-18 17:32:03,063 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5808.3}]
2021-08-18 17:32:03,063 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{42258.7}]
2021-08-18 17:32:03,063 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44271.}]
2021-08-18 17:32:03,064 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4583.71}, COSFloat\{41455.3}]
2021-08-18 17:32:03,064 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4353.344772}, COSFloat\{.9}]
2021-08-18 17:32:03,064 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4337.71}, COSFloat\{44772.9}]
2021-08-18 17:32:03,064 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5056.8}]
2021-08-18 17:32:03,064 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4479556}]
2021-08-18 17:32:03,065 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{50531947799.6}]
2021-08-18 17:32:03,065 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{468441684.4}]
2021-08-18 17:32:03,065 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4522.35176}, COSFloat\{.73}, COSFloat\{.7}, COSFloat\{46517344772.9}]
2021-08-18 17:32:03,065 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5779171}, COSFloat\{44772.9}]
2021-08-18 17:32:03,065 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5874.44}, COSFloat\{4171495.7}, COSFloat\{4874.44}, COSInt\{415}, COSFloat\{1.7}]
2021-08-18 17:32:03,065 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4879.85111618}, COSFloat\{.2}, COSFloat\{4869.755461}, COSFloat\{.7}]
2021-08-18 17:32:03,066 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4855279}, COSFloat\{1342506.7}]
2021-08-18 17:32:03,066 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{62821}, COSInt\{43685}]
2021-08-18 17:32:03,066 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6667.943655}, COSFloat\{.6}]
2021-08-18 17:32:03,066 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6753.743655}, COSFloat\{.6}]
2021-08-18 17:32:03,068 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6708.33}, COSFloat\{43655.6}]
2021-08-18 17:32:03,068 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6721.54346402}, COSFloat\{.1}, COSFloat\{4071.4359724}]
2021-08-18 17:32:03,069 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4673531}, COSFloat\{4357189.1}, COSFloat\{47414356974.4}, COSInt\{5929564353576}]
2021-08-18 17:32:03,069 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4819171}, COSFloat\{43719.7}]
2021-08-18 17:32:03,069 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.71}, COSFloat\{4319541.4}, COSFloat\{4888.353188}, COSFloat\{.7}]
2021-08-18 17:32:03,069 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6488.5316424}, COSFloat\{.3}, COSInt\{58262}, COSFloat\{43214.3}]
2021-08-18 17:32:03,069 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{56375.5331817}, COSFloat\{.4}, COSFloat\{4649.253324}, COSFloat\{.9}]
2021-08-18 17:32:03,069 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46745.53355}, COSFloat\{.1}]
2021-08-18 17:32:03,070 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{44431}, COSFloat\{5342415.7}, COSInt\{491777}]
2021-08-18 17:32:03,070 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{53445.2}]
2021-08-18 17:32:03,070 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4455.05328361}, COSFloat\{.4}, COSInt\{4847}, COSInt\{15}, COSFloat\{53355.1}]
2021-08-18 17:32:03,070 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4583.71}, COSInt\{4330146}]
2021-08-18 17:32:03,070 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4839.343780}, COSFloat\{.3}, COSFloat\{.1}, COSInt\{3708564375176}]
2021-08-18 17:32:03,071 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4053.91}, COSFloat\{53424652.7}, COSInt\{107774351423}]
2021-08-18 17:32:03,071 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4553304341844}]
2021-08-18 17:32:03,071 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{52843.9}]
2021-08-18 17:32:03,071 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4468.94331385}]
2021-08-18 17:32:03,071 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{3039.85272483}]
2021-08-18 17:32:03,072 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4826.84291133}]
2021-08-18 17:32:03,072 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5394.4}]
2021-08-18 17:32:03,072 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5264}]
2021-08-18 17:32:03,072 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5265}]
2021-08-18 17:32:03,072 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4028564262524.8}, COSFloat\{4015.742489}]
2021-08-18 17:32:03,072 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{45675642501.8}]
2021-08-18 17:32:03,073 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4585.68}, COSFloat\{4250.5}]
2021-08-18 17:32:03,073 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4758.252506}, COSFloat\{.6}]
2021-08-18 17:32:03,073 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5242407.3}, COSFloat\{6796.84251526}, COSFloat\{.6}, COSFloat\{4756.842506}, COSFloat\{.7}]
2021-08-18 17:32:03,073 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6666.49}, COSFloat\{1342764.9}]
2021-08-18 17:32:03,073 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4653.71}, COSFloat\{4309142.2}, COSInt\{459330431413411}, COSFloat\{4845.053219}, COSFloat\{.5}]
2021-08-18 17:32:03,074 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4507171}, COSFloat\{43211.2}]
2021-08-18 17:32:03,074 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4708564349185}]
2021-08-18 17:32:03,074 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5394.4}]
2021-08-18 17:32:03,074 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44427.8}]
2021-08-18 17:32:03,074 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4398.95442753}, COSFloat\{.2}, COSInt\{4073895449153507}, COSInt\{721}, COSFloat\{44708.8}]
2021-08-18 17:32:03,075 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4358.354804}, COSFloat\{.8}]
2021-08-18 17:32:03,075 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{43585354871.2}]
2021-08-18 17:32:03,075 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.49}, COSFloat\{56708.8}]
2021-08-18 17:32:03,075 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{38734623371.2}, COSFloat\{4834.34669246}]
2021-08-18 17:32:03,075 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4925.38}, COSFloat\{56072.3}]
2021-08-18 17:32:03,076 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{403838}]
2021-08-18 17:32:03,076 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46073.6}]
2021-08-18 17:32:03,076 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4934.44}, COSInt\{4481122}]
2021-08-18 17:32:03,076 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4934.44}, COSFloat\{44877.6}]
2021-08-18 17:32:03,076 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{403838}]
2021-08-18 17:32:03,076 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44349.2}]
2021-08-18 17:32:03,077 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44358.1}]
2021-08-18 17:32:03,077 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{488316}]
2021-08-18 17:32:03,077 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44358.1}]
2021-08-18 17:32:03,077 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4905.6}]
2021-08-18 17:32:03,077 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44871.2}]
2021-08-18 17:32:03,077 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4905.6}]
2021-08-18 17:32:03,078 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6709.33}, COSFloat\{4403821.4}, COSInt\{4733187}, COSInt\{550468}]
2021-08-18 17:32:03,078 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6267.94467832}, COSFloat\{.2}, COSInt\{4684564500576}]
2021-08-18 17:32:03,078 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4673.45449158}]
2021-08-18 17:32:03,078 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{3388.3}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4373513}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4744245445176}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4813.74473958}, COSFloat\{.1}, COSInt\{46049}, COSInt\{5440413}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43642354778.8}, COSFloat\{.1}, COSFloat\{4664.21}, COSFloat\{45355.1}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{486316}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44358.1}]
2021-08-18 17:32:03,079 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4358.4}]
2021-08-18 17:32:03,080 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{42795356515434.9}, COSFloat\{458.71}, COSInt\{4653}]
2021-08-18 17:32:03,080 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46689356515.9}]
2021-08-18 17:32:03,080 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{486316}]
2021-08-18 17:32:03,080 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4673923}]
2021-08-18 17:32:03,080 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{486316}]
2021-08-18 17:32:03,080 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4873.49}, COSFloat\{56399.5}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4885.244395}, COSFloat\{.9}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43119.7}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4905.6}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4457805}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4905.6}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4457805}]
2021-08-18 17:32:03,081 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{627953}]
2021-08-18 17:32:03,082 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44546547446558.54458805}]
2021-08-18 17:32:03,082 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4359575452.0}, COSFloat\{.9}, COSFloat\{637.54}]
2021-08-18 17:32:03,082 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{34444771.4}, COSFloat\{4194.44}, COSInt\{4464945}]
2021-08-18 17:32:03,082 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{3037244}, COSFloat\{44649.8}]
2021-08-18 17:32:03,082 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4358.95444753}, COSFloat\{.2}, COSInt\{4033895445153507}, COSFloat\{0.82}, COSFloat\{44669.8}]
2021-08-18 17:32:03,083 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4459308}]
2021-08-18 17:32:03,083 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4813.49}, COSFloat\{56708.1}]
2021-08-18 17:32:03,083 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{48334669275}]
2021-08-18 17:32:03,083 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.44315146}]
2021-08-18 17:32:03,083 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4}, COSInt\{46838}]
2021-08-18 17:32:03,083 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4396.6}]
2021-08-18 17:32:03,084 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4487122}]
2021-08-18 17:32:03,084 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4396.6}]
2021-08-18 17:32:03,084 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4463365}]
2021-08-18 17:32:03,084 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4903.6}]
2021-08-18 17:32:03,084 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44303.2}]
2021-08-18 17:32:03,084 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44318.1}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{484316}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44318.1}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{642370549681.6}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4689621}, COSFloat\{44916.460}, COSInt\{6193187}, COSInt\{550068}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{6593834452895}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44749.2}]
2021-08-18 17:32:03,085 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4633.45445158}]
2021-08-18 17:32:03,086 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4374513}]
2021-08-18 17:32:03,086 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4704245441542.7}, COSFloat\{4773.74469059}]
2021-08-18 17:32:03,086 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{45621}, COSInt\{4456413}]
2021-08-18 17:32:03,086 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44318.7}, COSFloat\{.1}, COSFloat\{4274.44}, COSInt\{4487685}]
2021-08-18 17:32:03,086 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4354.4}]
2021-08-18 17:32:03,086 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4657935645.3}, COSFloat\{.2}, COSInt\{4279171}, COSFloat\{44684.1}]
2021-08-18 17:32:03,087 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4849175}, COSFloat\{755.9}]
2021-08-18 17:32:03,087 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4984}]
2021-08-18 17:32:03,087 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43105054785.40}, COSInt\{673957}]
2021-08-18 17:32:03,087 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{34448771.4}, COSFloat\{4194.44}, COSInt\{4468945}]
2021-08-18 17:32:03,087 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{3037244}, COSFloat\{44689.8}]
2021-08-18 17:32:03,088 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4358.95448753}, COSFloat\{.2}, COSInt\{4033895449153507}, COSFloat\{0.82}, COSFloat\{44708.8}]
2021-08-18 17:32:03,088 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4318.354804}, COSFloat\{.8}]
2021-08-18 17:32:03,088 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{43185354871.2}]
2021-08-18 17:32:03,088 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4813.49}, COSFloat\{56708.8}]
2021-08-18 17:32:03,088 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{38334623371.2}, COSFloat\{4854.34669246}]
2021-08-18 17:32:03,088 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46073.6}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4396.6}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4481122}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4396.6}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4467365}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4903.6}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44349.2}]
2021-08-18 17:32:03,089 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44358.1}]
2021-08-18 17:32:03,090 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{484316}]
2021-08-18 17:32:03,090 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44358.1}]
2021-08-18 17:32:03,090 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6689621}, COSFloat\{4403821.4}, COSInt\{4193187}, COSInt\{550468}]
2021-08-18 17:32:03,090 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{6593834456895}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44789.2}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4633.45449158}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{3348.3}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4373513}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4704245445176}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4773.74473958}, COSFloat\{.1}, COSInt\{45621}, COSInt\{4440413}]
2021-08-18 17:32:03,091 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43242354778.8}, COSFloat\{.1}, COSFloat\{4624.21}, COSFloat\{45355.1}]
2021-08-18 17:32:03,092 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{482316}]
2021-08-18 17:32:03,092 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44358.1}]
2021-08-18 17:32:03,092 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4358.4}]
2021-08-18 17:32:03,092 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{42395356515434.9}, COSFloat\{448.71}, COSInt\{4653}]
2021-08-18 17:32:03,092 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46489356515.9}]
2021-08-18 17:32:03,092 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{482917}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4849175}, COSFloat\{795.9}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46119.7}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4863.6}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4457805}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{623953}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44546547446548.54458805}]
2021-08-18 17:32:03,093 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4310505452.0}, COSFloat\{.9}, COSFloat\{633.54}]
2021-08-18 17:32:03,094 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44447.8}]
2021-08-18 17:32:03,094 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4398.95444753}, COSFloat\{.2}, COSInt\{4073895445153507}, COSInt\{721}, COSFloat\{44669.8}]
2021-08-18 17:32:03,094 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4459308}]
2021-08-18 17:32:03,094 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4853.49}, COSFloat\{56708.1}]
2021-08-18 17:32:03,094 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{48734669275}]
2021-08-18 17:32:03,095 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4893.44315146}]
2021-08-18 17:32:03,095 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4925.38}, COSFloat\{56032.3}]
2021-08-18 17:32:03,095 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{403838}]
2021-08-18 17:32:03,095 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4}, COSInt\{46838}]
2021-08-18 17:32:03,095 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4934.44}, COSInt\{4487122}]
2021-08-18 17:32:03,095 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4934.44}, COSFloat\{44837.6}]
2021-08-18 17:32:03,096 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{403838}]
2021-08-18 17:32:03,096 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4476}]
2021-08-18 17:32:03,096 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44303.2}]
2021-08-18 17:32:03,096 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44318.1}]
2021-08-18 17:32:03,096 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{488316}]
2021-08-18 17:32:03,097 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44318.1}]
2021-08-18 17:32:03,097 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4905.6}]
2021-08-18 17:32:03,097 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44831.2}]
2021-08-18 17:32:03,097 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4905.6}]
2021-08-18 17:32:03,097 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{646370549681.6}]
2021-08-18 17:32:03,098 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4709.33}, COSFloat\{44916.460}, COSInt\{6733187}, COSInt\{550068}]
2021-08-18 17:32:03,098 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6267.94461832}, COSFloat\{.2}, COSInt\{46845644916}]
2021-08-18 17:32:03,098 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{4673.45445158}]
2021-08-18 17:32:03,098 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{4374513}]
2021-08-18 17:32:03,098 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4744245441542.7}, COSFloat\{4813.74469059}]
2021-08-18 17:32:03,098 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{46049}, COSInt\{5456413}]
2021-08-18 17:32:03,099 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44318.7}, COSFloat\{.1}, COSFloat\{4394.44}, COSInt\{4487685}]
2021-08-18 17:32:03,099 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4354.4}]
2021-08-18 17:32:03,099 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4697935645.3}, COSFloat\{.2}, COSFloat\{4394.21}, COSFloat\{44684.1}]
2021-08-18 17:32:03,099 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4889175}, COSFloat\{755.9}]
2021-08-18 17:32:03,099 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{40.3}]
2021-08-18 17:32:03,099 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{44506547446558.54454805}]
2021-08-18 17:32:03,100 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{43595754785.40}, COSFloat\{677.54}]
2021-08-18 17:32:03,100 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{1347423.2}]
2021-08-18 17:32:03,100 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{67085647771.8}]
2021-08-18 17:32:03,100 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{0413057771.8}]
2021-08-18 17:32:03,101 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{69171}, COSFloat\{47771.8}]
2021-08-18 17:32:03,101 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{099.34777108}, COSFloat\{.2}, COSFloat\{008564773565.3}, COSInt\{4944871}, COSInt\{4714576}]
2021-08-18 17:32:03,101 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4969175767501.4}, COSFloat\{4969.95}, COSFloat\{47164.9}]
2021-08-18 17:32:03,101 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4971.35765524}, COSFloat\{.8}, COSFloat\{4991.357648}, COSFloat\{.3}]
2021-08-18 17:32:03,101 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6525.68}, COSFloat\{47633.8}]
2021-08-18 17:32:03,101 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{073.747119}, COSFloat\{.7}]
2021-08-18 17:32:03,102 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6513.2575888}, COSFloat\{.91}, COSInt\{166233}, COSInt\{4756724}]
2021-08-18 17:32:03,102 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46913057533.2}]
2021-08-18 17:32:03,102 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6239.347504}, COSFloat\{.8}]
2021-08-18 17:32:03,102 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6768653}, COSFloat\{4747630.8}, COSFloat\{478305744436.2}, COSFloat\{43442457.3}]
2021-08-18 17:32:03,102 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{485599421}, COSFloat\{4763.5}, COSFloat\{4864444.4}, COSFloat\{6415.74871458}]
2021-08-18 17:32:03,102 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6666.84865146}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6666.81}, COSInt\{4}, COSFloat\{63541.4}, COSFloat\{6234.44}, COSFloat\{615.9}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4359831}, COSFloat\{48559.7}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6354.84855966}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{48824.3}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{469213}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{48984.4}]
2021-08-18 17:32:03,103 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4895475.1}, COSFloat\{4563.948627}, COSFloat\{.8}]
2021-08-18 17:32:03,104 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4555.05811474}, COSFloat\{.4}, COSInt\{455357}]
2021-08-18 17:32:03,104 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5812861}, COSInt\{4}, COSFloat\{4826.84812828}]
2021-08-18 17:32:03,104 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3037.74812828}]
2021-08-18 17:32:03,104 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3084.44}, COSInt\{5812828}]
2021-08-18 17:32:03,104 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4291.44793546}]
2021-08-18 17:32:03,104 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4336.49}, COSInt\{5793546}]
2021-08-18 17:32:03,105 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4497.6}]
2021-08-18 17:32:03,105 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57114.8}]
2021-08-18 17:32:03,105 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4697.6}]
2021-08-18 17:32:03,105 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46834.2}]
2021-08-18 17:32:03,105 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4727.95699505}, COSFloat\{.6}, COSFloat\{4788.157114}, COSFloat\{.8}]
2021-08-18 17:32:03,105 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4788.17}, COSInt\{5793546}]
2021-08-18 17:32:03,106 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4788.1}]
2021-08-18 17:32:03,106 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5793546}]
2021-08-18 17:32:03,106 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{709.1}]
2021-08-18 17:32:03,106 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57278.30}, COSFloat\{.549}, COSFloat\{.357235}, COSFloat\{.3}]
2021-08-18 17:32:03,106 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5793546}]
2021-08-18 17:32:03,107 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{551.8}]
2021-08-18 17:32:03,107 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5793546}]
2021-08-18 17:32:03,107 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5793546}]
2021-08-18 17:32:03,107 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{560.34}, COSInt\{4793546}]
2021-08-18 17:32:03,108 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4633.54710515}, COSFloat\{.6}, COSInt\{6413577179}]
2021-08-18 17:32:03,108 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6012668}, COSFloat\{477.935}]
2021-08-18 17:32:03,108 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{65675647733.6}]
2021-08-18 17:32:03,108 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{60413057733.6}]
2021-08-18 17:32:03,108 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6029179}, COSFloat\{57733.6}]
2021-08-18 17:32:03,108 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5985.65773301}, COSFloat\{.4}, COSFloat\{4969564772565.3}, COSInt\{4935069}, COSInt\{5770576}]
2021-08-18 17:32:03,109 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4929175763458.2}, COSInt\{4426971}, COSFloat\{47614.9}]
2021-08-18 17:32:03,109 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4938.64761524}, COSFloat\{.8}, COSFloat\{4951.357606}, COSFloat\{.7}]
2021-08-18 17:32:03,109 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{4658305749158}]
2021-08-18 17:32:03,109 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4691.347462}, COSFloat\{.8}, COSFloat\{.9}, COSFloat\{4709.33}, COSFloat\{47432.9}]
2021-08-18 17:32:03,109 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6625751}, COSInt\{485}, COSFloat\{1.7}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46913058575.9}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6463.94854887}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4984.3583717}, COSFloat\{.4}, COSFloat\{4969.82}, COSFloat\{48348.1}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4941.74831}, COSFloat\{.3}, COSFloat\{.2}, COSFloat\{4958.258264}, COSFloat\{.1}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{4969588388}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4319831}, COSFloat\{48519.7}]
2021-08-18 17:32:03,110 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6344.84851266}]
2021-08-18 17:32:03,111 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4902539.6482917}]
2021-08-18 17:32:03,111 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4585105796887.3}, COSInt\{4434871}, COSFloat\{4794522.1}, COSFloat\{4794.347942}, COSFloat\{.9}]
2021-08-18 17:32:03,111 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44662347942.9}]
2021-08-18 17:32:03,111 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4496.49}, COSFloat\{57942.9}]
2021-08-18 17:32:03,111 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4607.6}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57074.8}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4607.6}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5695537.3}, COSFloat\{46025686.}, COSFloat\{.2}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{46843.2}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4687.95695505}, COSFloat\{.6}, COSFloat\{46775.57074}, COSFloat\{.8}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4678.17}, COSFloat\{57942.9}]
2021-08-18 17:32:03,112 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4678.1}]
2021-08-18 17:32:03,113 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57942.9}]
2021-08-18 17:32:03,113 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4589.1}]
2021-08-18 17:32:03,113 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57942.9}]
2021-08-18 17:32:03,113 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5788.8}]
2021-08-18 17:32:03,113 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47942.9}]
2021-08-18 17:32:03,113 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5399.1}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57942.9}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5455.0}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47942.9}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{577389}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{48568952.7577389}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{1347423.2}]
2021-08-18 17:32:03,114 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4633.54714515}, COSFloat\{.6}, COSFloat\{641547758.91}, COSInt\{12668}, COSInt\{4776935}]
2021-08-18 17:32:03,115 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{65675647773.6}]
2021-08-18 17:32:03,115 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{60413057773.6}]
2021-08-18 17:32:03,115 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6029179}, COSFloat\{57773.6}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5985.65777301}, COSFloat\{.4}, COSFloat\{4969564776565.3}, COSInt\{4935069}, COSInt\{5774576}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4929175767458.2}, COSInt\{4426971}, COSFloat\{47664.9}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4938.64765524}, COSFloat\{.8}, COSFloat\{4951.357646}, COSFloat\{.7}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5985.68}, COSFloat\{47633.8}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{033.747119}, COSFloat\{.7}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6073.9475888}, COSFloat\{.91}, COSInt\{116233}, COSInt\{4756724}]
2021-08-18 17:32:03,116 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46583057533.2}]
2021-08-18 17:32:03,117 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6691.347504}, COSFloat\{.8}]
2021-08-18 17:32:03,117 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6709.33}, COSFloat\{47472.9}]
2021-08-18 17:32:03,117 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6267305744436.2}, COSFloat\{43042457.9}]
2021-08-18 17:32:03,117 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{485599421}, COSFloat\{4963.5}, COSFloat\{4864541.2}, COSFloat\{637.274871458}]
2021-08-18 17:32:03,119 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6626.84865146}]
2021-08-18 17:32:03,119 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{6625751}, COSFloat\{4863541.4}, COSFloat\{66913058615.9}]
2021-08-18 17:32:03,119 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6463.94858887}]
2021-08-18 17:32:03,120 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4984.358511}, COSFloat\{.32}, COSFloat\{4969.82}, COSFloat\{48388.1}]
2021-08-18 17:32:03,120 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{4969588488}]
2021-08-18 17:32:03,120 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4319831}, COSFloat\{48559.7}]
2021-08-18 17:32:03,120 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6344.84855266}]
2021-08-18 17:32:03,120 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4895475.1}, COSFloat\{4526.848627}, COSFloat\{.8}]
2021-08-18 17:32:03,120 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4904245887.3}, COSFloat\{.2}, COSFloat\{4811.41}, COSInt\{4884576}]
2021-08-18 17:32:03,121 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{48639949.6467953}]
2021-08-18 17:32:03,121 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4906539.6482917}]
2021-08-18 17:32:03,121 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3057.74812828}]
2021-08-18 17:32:03,121 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{3034.44}, COSInt\{5812828}]
2021-08-18 17:32:03,121 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4585105797887.3}, COSInt\{4434871}, COSFloat\{4798522.1}, COSFloat\{4794.347982}, COSFloat\{.9}]
2021-08-18 17:32:03,121 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{44662347982.9}]
2021-08-18 17:32:03,122 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4496.49}, COSFloat\{57982.9}]
2021-08-18 17:32:03,122 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4607.6}]
2021-08-18 17:32:03,122 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57114.8}]
2021-08-18 17:32:03,122 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4607.6}]
2021-08-18 17:32:03,122 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{46883.2}]
2021-08-18 17:32:03,122 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4687.95699505}, COSFloat\{.6}, COSFloat\{46775.57114}, COSFloat\{.8}]
2021-08-18 17:32:03,123 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4678.17}, COSFloat\{57982.9}]
2021-08-18 17:32:03,123 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4678.1}]
2021-08-18 17:32:03,123 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57982.9}]
2021-08-18 17:32:03,123 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4589.1}]
2021-08-18 17:32:03,124 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57982.9}]
2021-08-18 17:32:03,124 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5788.8}]
2021-08-18 17:32:03,124 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47982.9}]
2021-08-18 17:32:03,124 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5399.1}]
2021-08-18 17:32:03,124 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57982.9}]
2021-08-18 17:32:03,124 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{5455.0}]
2021-08-18 17:32:03,125 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{47982.9}]
2021-08-18 17:32:03,125 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{577389}]
2021-08-18 17:32:03,125 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{1347389.2}]
2021-08-18 17:32:03,125 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4673.54710515}, COSFloat\{.6}, COSInt\{6453577179}]
2021-08-18 17:32:03,125 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{67085647731.8}]
2021-08-18 17:32:03,125 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{0413057731.8}]
2021-08-18 17:32:03,126 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{69171}, COSFloat\{47731.8}]
2021-08-18 17:32:03,126 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{099.34773108}, COSFloat\{.2}, COSFloat\{008564772565.3}, COSInt\{4944871}, COSInt\{4710576}]
2021-08-18 17:32:03,126 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4969175763501.4}, COSFloat\{4969.95}, COSFloat\{47124.9}]
2021-08-18 17:32:03,126 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4971.35761524}, COSFloat\{.8}, COSFloat\{4991.357608}, COSFloat\{.3}]
2021-08-18 17:32:03,126 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSInt\{4691305749158}]
2021-08-18 17:32:03,126 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{6666.81}, COSInt\{4}, COSInt\{5}, COSFloat\{1.7}]
2021-08-18 17:32:03,127 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4733.748575}, COSFloat\{.9}]
2021-08-18 17:32:03,127 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{66255}, COSFloat\{483717.4}, COSFloat\{008.82}, COSFloat\{48348.1}]
2021-08-18 17:32:03,127 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4954.74831}, COSFloat\{.3}, COSFloat\{.2}, COSFloat\{4958.958264}, COSFloat\{.1}]
2021-08-18 17:32:03,127 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{48279.7}]
2021-08-18 17:32:03,127 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{4359831}, COSFloat\{48519.7}]
2021-08-18 17:32:03,127 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{6354.84851966}]
2021-08-18 17:32:03,128 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{48944.4}]
2021-08-18 17:32:03,128 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4929175899541.2}, COSFloat\{4681305899541.2}, COSFloat\{4663.97}, COSFloat\{5899541.2}, COSFloat\{4646.94816387}]
2021-08-18 17:32:03,128 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4697.6}]
2021-08-18 17:32:03,128 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSInt\{5803513}]
2021-08-18 17:32:03,128 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4291.44794546}]
2021-08-18 17:32:03,129 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4336.49}, COSInt\{5794546}]
2021-08-18 17:32:03,129 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4497.6}]
2021-08-18 17:32:03,129 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{57074.8}]
2021-08-18 17:32:03,129 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4697.6}]
2021-08-18 17:32:03,129 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{5695537.3}, COSFloat\{46.24686}, COSInt\{0}, COSFloat\{.2}]
2021-08-18 17:32:03,129 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{46844.2}]
2021-08-18 17:32:03,130 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4727.95695505}, COSFloat\{.6}, COSFloat\{4788.157074}, COSFloat\{.8}]
2021-08-18 17:32:03,130 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{4788.17}, COSInt\{5794546}]
2021-08-18 17:32:03,130 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{4788.1}]
2021-08-18 17:32:03,130 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5794546}]
2021-08-18 17:32:03,130 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{709.1}]
2021-08-18 17:32:03,130 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5794546}]
2021-08-18 17:32:03,131 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{551.8}]
2021-08-18 17:32:03,131 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5794546}]
2021-08-18 17:32:03,131 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{5794546}]
2021-08-18 17:32:03,131 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{560.34}, COSInt\{4794546}]
2021-08-18 17:32:03,131 WARN [PDFStreamEngine.java :670] No current font, will use default
2021-08-18 17:32:03,314 WARN [GlyphCache.java :68] No glyph for code 0 in PDType1Font Helvetica (embedded or system font used: ArialMT)
2021-08-18 17:32:03,314 WARN [GlyphCache.java :68] No glyph for code 21 in PDType1Font Helvetica (embedded or system font used: ArialMT)
2021-08-18 17:32:03,315 WARN [GlyphCache.java :68] No glyph for code 19 in PDType1Font Helvetica (embedded or system font used: ArialMT)
2021-08-18 17:32:03,315 WARN [GlyphCache.java :68] No glyph for code 20 in PDType1Font Helvetica (embedded or system font used: ArialMT)
2021-08-18 17:32:03,315 WARN [GlyphCache.java :68] No glyph for code 16 in PDType1Font Helvetica (embedded or system font used: ArialMT)
2021-08-18 17:32:03,315 WARN [GlyphCache.java :68] No glyph for code 27 in PDType1Font Helvetica (embedded or system font used: ArialMT)
2021-08-18 17:32:03,316 WARN [PDFStreamEngine.java :670] No current font, will use default
2021-08-18 17:32:03,316 WARN [PDFStreamEngine.java :670] No current font, will use default
2021-08-18 17:32:03,317 WARN [PDFStreamEngine.java :670] No current font, will use default
2021-08-18 17:32:03,318 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{687}]
2021-08-18 17:32:03,318 ERROR [PDFStreamEngine.java :886] Operator m has too few operands: [COSFloat\{28753.7}]
2021-08-18 17:32:03,318 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{649}]
2021-08-18 17:32:03,318 ERROR [PDFStreamEngine.java :886] Operator l has too few operands: [COSFloat\{28753.7}]
2021-08-18 17:32:03,318 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSInt\{649}]
2021-08-18 17:32:03,318 ERROR [PDFStreamEngine.java :886] Operator c has too few operands: [COSFloat\{28165.67}, COSInt\{687}]",,,,,,,,,,,PDFBOX-4718,,,,,"18/Aug/21 09:33;chenjh;1628753334187.pdf;https://issues.apache.org/jira/secure/attachment/13032111/1628753334187.pdf","18/Aug/21 09:36;chenjh;image-2021-08-18-17-36-21-462.png;https://issues.apache.org/jira/secure/attachment/13032110/image-2021-08-18-17-36-21-462.png",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Aug 21 14:44:13 UTC 2021,,,,,,,,,,"0|z0u0co:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Aug/21 13:35;mkl;As an aside:

{quote}maybe this pdf have some problem{quote}

It definitively does have issues. Numerous issues actually.

Nonetheless the result shouldn't be a blocked process.;;;","19/Aug/21 03:34;tilman;It's a java problem when clipping, related to PDFBOX-4718.;;;","21/Aug/21 14:44;tilman;Closed as duplicate of PDFBOX-4718. I'll add you as a watcher there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Process hangs with PdfBox 2.0.24,PDFBOX-5259,13395530,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Cannot Reproduce,,jdaigle,jdaigle,16/Aug/21 18:23,25/Aug/21 18:44,07/May/23 20:06,25/Aug/21 18:44,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AcroForm,,,,0,,,,"I have a java process that got stuck randomly while setting values into a pdf form with PDFBOX 2.0.24

the ""strace"" command return :
{code:java}
root@appname:/tmp# strace -p 26734
strace: Process 26734 attached
futex(0x7f97791589d0, FUTEX_WAIT, 26735, NULL 

root@appname:/tmp# strace -p 26735
strace: Process 26735 attached
write(2, ""Aug 13, 2021 11:12:13 AM org.apa""..., 232{code}
I added the jstack output of the process in the jstack.out attachment
 Seem to happen completely randomly.

I don't have any issue if I rerun manually the same command.

java.lang.Thread.State: RUNNABLE at java.io.FileOutputStream.writeBytes(java.base@11.0.11/Native Method) at java.io.FileOutputStream.write(java.base@11.0.11/FileOutputStream.java:354) at java.io.BufferedOutputStream.write(java.base@11.0.11/BufferedOutputStream.java:123) - locked <0x00000000c246e910> (a java.io.BufferedOutputStream) at java.io.PrintStream.write(java.base@11.0.11/PrintStream.java:559) - locked <0x00000000c246e8e8> (a java.io.PrintStream) at sun.nio.cs.StreamEncoder.writeBytes(java.base@11.0.11/StreamEncoder.java:233) at sun.nio.cs.StreamEncoder.implFlushBuffer(java.base@11.0.11/StreamEncoder.java:312) at sun.nio.cs.StreamEncoder.implFlush(java.base@11.0.11/StreamEncoder.java:316) at sun.nio.cs.StreamEncoder.flush(java.base@11.0.11/StreamEncoder.java:153) - locked <0x00000000c363d1c8> (a java.io.OutputStreamWriter) at java.io.OutputStreamWriter.flush(java.base@11.0.11/OutputStreamWriter.java:251) at java.util.logging.StreamHandler.flush(java.logging@11.0.11/StreamHandler.java:247) - locked <0x00000000c363d178> (a java.util.logging.ConsoleHandler) at java.util.logging.ConsoleHandler.publish(java.logging@11.0.11/ConsoleHandler.java:96) at java.util.logging.Logger.log(java.logging@11.0.11/Logger.java:979) at java.util.logging.Logger.doLog(java.logging@11.0.11/Logger.java:1006) at java.util.logging.Logger.logp(java.logging@11.0.11/Logger.java:1172) at org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87) at org.apache.commons.logging.impl.Jdk14Logger.info(Jdk14Logger.java:176) at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.getFormattedValue(AppearanceGeneratorHelper.java:255) at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.setAppearanceValue(AppearanceGeneratorHelper.java:172) at org.apache.pdfbox.pdmodel.interactive.form.PDTextField.constructAppearances(PDTextField.java:264) at org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.applyChange(PDTerminalField.java:228) at org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(PDTextField.java:219) at pdf.XFDFMerger.trySetValue(XFDFMerger.java:396) at pdf.XFDFMerger.importFDFField(XFDFMerger.java:219) at pdf.XFDFMerger.importFDFDocument(XFDFMerger.java:187) at pdf.XFDFMerger.mergeFields(XFDFMerger.java:107) at pdf.XFDFMerger.mergeXFDF(XFDFMerger.java:59) at commands.MergeXFDFCommand.run(MergeXFDFCommand.java:33) at picocli.CommandLine.executeUserObject(CommandLine.java:1919) at picocli.CommandLine.access$1100(CommandLine.java:145) at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332) at picocli.CommandLine$RunLast.handle(CommandLine.java:2326) at picocli.CommandLine$RunLast.handle(CommandLine.java:2291) at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152) at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530) at picocli.CommandLine.run(CommandLine.java:2988) at picocli.CommandLine.run(CommandLine.java:2925) at pdfbox.main(pdfbox.java:15)

","openjdk 11.0.11 2021-04-20
OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.18.04)
OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.18.04, mixed mode, sharing)",,,,,,,,,,,,,,,"16/Aug/21 18:16;jdaigle;jstack.out;https://issues.apache.org/jira/secure/attachment/13032042/jstack.out",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,java,Wed Aug 25 18:44:02 UTC 2021,,,,,,,,,,"0|z0tyf4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Aug/21 18:41;tilman;Assuming that the stack trace is the moment when it is stuck, then it is in logging when bringing the ""Field contains a formatting action but no ScriptingHandler has been supplied - formatted value might be incorrect"" INFO. So I'd say this is a logging problem, maybe try to disable logging (temporarly)?;;;","16/Aug/21 18:55;jdaigle;Thanks for the quick response, I found a discussion where someone seems to have a similar problem and disabling the log seems indeed to be a solution. I will do so.;;;","16/Aug/21 19:10;tilman;Another thing to try would be to attach + configure log4j to see if gets better. You're using java default logging. It seems to be writing to a file. Is this file on a slow network where it could block?;;;","16/Aug/21 20:02;jdaigle;In our case, we have a command line application where the logs output go directly into the console. 
And we are using the default logging from java.

So if i'm not mistaken, in linux those logs go into  ""/proc/<pid>/fd/1"" (1 = stdout, 2 = stderr)

There is no network folder or anything similar that I could think of that could get on the way in our situation.

I will look at Log4j if it could also help.;;;","17/Aug/21 02:37;tilman;This is weird... logging shouldn't be a problem. Try updating / reinstalling your jdk. Amazon Corretto is at 11.0.12_7 so you should update anyway. If it still happens, can you try to run with jdk8 or jdk16 ?;;;","25/Aug/21 18:44;tilman;closing, no further feedback. You can still comment and/or reopen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NumberFormatException in merge if fieldname is ""dummyFieldName1#1""",PDFBOX-5257,13394716,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,tilman,tilman,11/Aug/21 16:09,17/Dec/21 06:50,07/May/23 20:06,11/Aug/21 17:29,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Utilities,,,,0,,,,"{code}
nextFieldNum = Math.max(nextFieldNum, Integer.parseInt(fieldName.substring(prefixLength)) + 1);
{code}
needs to be changed to take into account that text after ""dummyFieldName"" might not be a number.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,https://stackoverflow.com/questions/68740928/pdfbox-java-lang-numberformatexception-for-input-string-11,,,,,,,,,,9223372036854775807,,,,Wed Aug 11 17:15:39 UTC 2021,,,,,,,,,,"0|z0tte8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Aug/21 17:15;jira-bot;Commit 1892239 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1892239 ]

PDFBOX-5257: avoid NumberFormatException;;;","11/Aug/21 17:15;jira-bot;Commit 1892240 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1892240 ]

PDFBOX-5257: avoid NumberFormatException;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Corrupted fonts with rendering inside SwingWorker,PDFBOX-5252,13394006,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Cannot Reproduce,,MVoloshin,MVoloshin,07/Aug/21 09:12,11/Aug/21 18:02,07/May/23 20:06,11/Aug/21 18:02,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FontBox,Rendering,,,0,concurrency,multithreading,,"Page rendering is a time-consuming operation, so I try to perform it in separate thread (via Swing Worker). It's mostly working, but sometimes I face error messages in my log. Then, in some cases fonts on rendered page might become corrupted (just like on attached picture, where word ""istream"" is rendered like ""istrea"" with wide ""a""). I don't remember such issues using single-thread, but that's not suitable for me (application UI freezes if I perform rendering in the same thread).
Here's a link to my PDF: https://disk.yandex.ru/i/bZMPleH_GosWug

{code:java}
авг 07, 2021 12:16:56 PM org.apache.pdfbox.filter.FlateFilter decompressавг 07, 2021 12:16:56 PM org.apache.pdfbox.filter.FlateFilter decompressWARNING: FlateFilter: premature end of stream due to a DataFormatExceptionавг 07, 2021 12:16:56 PM org.apache.pdfbox.pdmodel.font.PDCIDFontType0 <init>SEVERE: Can't read the embedded CFF font Fd2121547java.io.IOException: illegal offset value 132698 in CFF font at org.apache.fontbox.cff.CFFParser.readIndexDataOffsets(CFFParser.java:192) at org.apache.fontbox.cff.CFFParser.readIndexData(CFFParser.java:201) at org.apache.fontbox.cff.CFFParser.parseFont(CFFParser.java:486) at org.apache.fontbox.cff.CFFParser.parse(CFFParser.java:122) at org.apache.fontbox.cff.CFFParser.parse(CFFParser.java:75) at org.apache.pdfbox.pdmodel.font.PDCIDFontType0.<init>(PDCIDFontType0.java:100) at org.apache.pdfbox.pdmodel.font.PDFontFactory.createDescendantFont(PDFontFactory.java:135) at org.apache.pdfbox.pdmodel.font.PDType0Font.<init>(PDType0Font.java:196) at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:97) at org.apache.pdfbox.pdmodel.PDResources.getFont(PDResources.java:146) at org.apache.pdfbox.contentstream.operator.text.SetFontAndSize.process(SetFontAndSize.java:66) at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:933) at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:514) at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:492) at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:155) at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:277) at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:347) at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:268) at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:228) at MainWindow$pageLoader.doInBackground(MainWindow.java:286) at MainWindow$pageLoader.doInBackground(MainWindow.java:1) at javax.swing.SwingWorker$1.call(Unknown Source) at java.util.concurrent.FutureTask.run(Unknown Source) at javax.swing.SwingWorker.run(Unknown Source) at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) at java.lang.Thread.run(Unknown Source)
авг 07, 2021 12:16:57 PM org.apache.pdfbox.pdmodel.font.PDCIDFontType0 <init>WARNING: Using fallback LiberationSans for CID-keyed font Fd2121547{code}",,,,,,,,,,,,,,,,"07/Aug/21 09:19;MVoloshin;MainWindow.java;https://issues.apache.org/jira/secure/attachment/13031607/MainWindow.java","07/Aug/21 09:24;MVoloshin;Снимок.PNG;https://issues.apache.org/jira/secure/attachment/13031606/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA.PNG",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Sun Aug 08 03:05:39 UTC 2021,,,,,,,,,,"0|z0tp0g:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Aug/21 09:42;lehmi;PDFBox isn't threadsafe, see http://pdfbox.apache.org/2.0/faq.html

It shouldn't be a problem do render a file using a single thread. Have a look at our PDFDebugger.;;;","07/Aug/21 10:03;MVoloshin;Give me some extra information, please. I'm using PDFBox library for the first time and I need to somehow separate page rendering from main UI thread, because otherwise my application just freezes if some page has not finished rendering yet.;;;","07/Aug/21 10:12;lehmi;I'm not a swing-expert but maybe a look at {{org.apache.pdfbox.debugger.pagepane.PagePane}} might help. It somehow uses a background thread for rendering although PDFBox isn't threadsafe;;;","07/Aug/21 12:01;MVoloshin;Hmm... PagePane seems to use Swing Worker too...
https://github.com/apache/pdfbox/blob/trunk/debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java;;;","07/Aug/21 12:02;tilman;You need to find a way to let the thread finish before starting the next on the same PDDocument, or use a different PDDocument object. IIRC we have the same problem with PDFDebugger that when quickly moving from page to page sometimes this goes wrong.;;;","07/Aug/21 13:09;MVoloshin;volatile boolean isRendering seems to solve the issue (each thread waits until rendering in previous thread is complete). Is my approach correct?;;;","07/Aug/21 13:19;tilman;It makes sense. (I didn't test your code);;;","07/Aug/21 15:18;tilman;Can you attach your file? This is more for ""archiving"" purpose, in case we decide to work on this in the future. Or does this happen with every file you tried?;;;","07/Aug/21 17:59;MVoloshin;https://disk.yandex.ru/i/bZMPleH_GosWug;;;","08/Aug/21 03:05;tilman;That page is in russian, and none of the links on that page is the download link, it seems this requires login.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Grey area appears white,PDFBOX-5251,13393319,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,tilman,tilman,03/Aug/21 18:51,03/Sep/21 08:23,07/May/23 20:06,,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,Top left rect should be grey but is white,,,,,,,,,,,,,,,,"04/Aug/21 17:46;tilman;PDFBOX-5251-SO68635723-only_one_graph.pdf;https://issues.apache.org/jira/secure/attachment/13031452/PDFBOX-5251-SO68635723-only_one_graph.pdf","03/Aug/21 18:52;tilman;PDFBOX-5251-SO68635723.pdf;https://issues.apache.org/jira/secure/attachment/13031421/PDFBOX-5251-SO68635723.pdf","02/Sep/21 10:54;Brunarskyi;PDFBOX-5251-SO686357231.png;https://issues.apache.org/jira/secure/attachment/13032896/PDFBOX-5251-SO686357231.png",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,https://stackoverflow.com/questions/68635723/,,,,,,,,,,9223372036854775807,,,,Fri Sep 03 08:23:50 UTC 2021,,,,,,,,,,"0|z0tkrs:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Sep/21 10:57;Brunarskyi;java -jar pdfbox-app-2.0.24.jar PDFToImage -imageType png PDFBOX-5251-SO68635723.pdf

looks good for me or I missed something? !PDFBOX-5251-SO686357231.png!



 ;;;","02/Sep/21 17:52;tilman;The top left group of rectangles is all white, but one of the four (also top left) should be grey. PDF.js has the same bug. You should look at the file with Adobe Reader.;;;","03/Sep/21 08:23;Brunarskyi;Yep, you're right. I've just opened it with Chrome, and all top rectangles are grey and the bottom ones are blue. Sorry for bothering you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Colors in PDF Tile Patterns are off,PDFBOX-5250,13392702,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,,,rototor,rototor,30/Jul/21 09:02,31/Jul/21 13:13,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rendering,,,,0,,,,"I've implementing for my customer some ""text with pattern"" features. In the attached PDF you see that in action.

There is a color mapping problem in the patterned text in the left bottom corner in the PDFBox debugger. The colors are way to bright. Acrobat and MacOS Preview render this fine. FoxIt Reader also has some rendering issues with this (image seems distorted...).

I've also attached the ""base"" PDF used for the pattern.

It think the way I embed this should be fine:
{code:java}
return new OurPDColorCarrier((PDPageContentStream contentStream) -> {
   PDImageResult pdImage = throwing(() -> textureImage.getPDImageXObject(document, colorSpaceRegistry));
   Objects.requireNonNull(pdImage);

   PDTilingPattern pattern = new PDTilingPattern();
   pattern.setPaintType(PDTilingPattern.PAINT_COLORED);
   pattern.setTilingType(PDTilingPattern.TILING_NO_DISTORTION);

   var anchorInfo = TextRenderer.getTextureTileAnchor(textureImage);

   float textureImageWidth = (float) anchorInfo.originalWidth;
   float textureImageHeight = (float) anchorInfo.originalHeight;
   pattern.setBBox(
         new PDRectangle(0f, 0f, (float) dpi2mm(textureImageWidth), (float) dpi2mm(textureImageHeight)));
   pattern.setXStep((float) anchorInfo.anchor.getWidth());
   pattern.setYStep((float) anchorInfo.anchor.getHeight());

   double scaleFactor = pageWidth / renderTarget.width;

   /* Die Matrix ist lt. Spec für die Phasenverschiebung des Patterns da. */
   double countPhasen = (renderTarget.pageSize.getHeight() / anchorInfo.anchor.getHeight());
   double rest = renderTarget.pageSize.getHeight()
         - DoubleMath.roundToInt(countPhasen, RoundingMode.DOWN) * anchorInfo.anchor.getHeight();

   pattern.setMatrix(AffineTransform.getTranslateInstance(scaleFactor * currentTransform.getTranslateX(),
         renderTarget.pageSize.getHeight() - (scaleFactor * currentTransform.getTranslateY()) + rest));

   PDAppearanceStream appearance = new PDAppearanceStream(document);
   appearance.setResources(pattern.getResources());
   appearance.setBBox(pattern.getBBox());

   PDPageContentStream imageContentStream = new PDPageContentStream(document, appearance,
         ((COSStream) pattern.getCOSObject()).createOutputStream());

   if (pdImage.image instanceof PDFormXObject) {
      imageContentStream.transform(Matrix.getScaleInstance((float) (anchorInfo.originalWidth),
            (float) (anchorInfo.originalHeight)));
      pattern.setBBox(new PDRectangle(0f, 0f, (float) (anchorInfo.originalWidth),
            (float) (anchorInfo.originalHeight)));
      imageContentStream.drawForm((PDFormXObject) pdImage.image);
   } else {
      pattern.setMatrix(AffineTransform.getTranslateInstance(
            scaleFactor * currentTransform.getTranslateX(), renderTarget.pageSize.getHeight()
                  - (scaleFactor * currentTransform.getTranslateY()) + rest / scaleFactor));
      imageContentStream.transform(
            Matrix.getScaleInstance((float) (anchorInfo.anchor.getWidth() / textureImageWidth),
                  (float) (anchorInfo.anchor.getHeight() / textureImageHeight)));
      imageContentStream.drawImage((PDImageXObject) pdImage.image, 0, 0);
   }
   imageContentStream.close();

   PDResources resources = ModelUtils.getPrivateField(contentStream, ""resources"");
   COSName tilingPatternName = resources.add(pattern);
   return new PDColor(tilingPatternName, new PDPattern(null));
});

 {code}
Yes, in the third bottom line the 
{code:java}
PDResources resources = ModelUtils.getPrivateField(contentStream, ""resources""); {code}
is an ugly reflection hack - any reason why the ContentStream does not expose its resources with a public API?

This is with Java 11 on MacOS BigSur.",,,,,,,,,,,,,,,,"30/Jul/21 09:02;rototor;kachel4.pdf;https://issues.apache.org/jira/secure/attachment/13031255/kachel4.pdf","30/Jul/21 09:02;rototor;pattern_colors_broken.pdf;https://issues.apache.org/jira/secure/attachment/13031256/pattern_colors_broken.pdf",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jul 31 13:13:53 UTC 2021,,,,,,,,,,"0|z0tgz4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Jul/21 13:13;tilman;Maybe related to PDFBOX-4914. No idea what's going on.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Space in pdf returns c2 a0 characters instead of 20,PDFBOX-5247,13391827,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Not A Bug,,flywire,flywire,26/Jul/21 08:02,28/Jul/21 14:30,07/May/23 20:06,28/Jul/21 12:00,1.8.16,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Text extraction,,,,0,,,,"*pdf containing:*

SelfWealth Limited ABN: 52 154 324 428 AFSL 421789 W: www.selfwealth.com.au E: support@selfwealth.com.au
This trade was executed and cleared by OpenMarkets Australia Ltd ABN 38 090 472 012,
AFSL 246 705, Market Particpant of ASX, CHI­X and NSX.
Buy Confirmation

 

*Gives (see hex on right side):*

!https://user-images.githubusercontent.com/11288701/126945391-18c0ccb4-289d-49cd-85a8-8714e145df3f.png!

 ","Portfolio Performance
Version: 0.54.0 (Jul. 2021)
Platform: win32, x86_64
Java: 11.0.4+11-LTS, Azul Systems, Inc.
Locale: AU",,,,,,,,,,,,,,,"28/Jul/21 09:43;flywire;PDFBoxSpaceSample.pdf;https://issues.apache.org/jira/secure/attachment/13031147/PDFBoxSpaceSample.pdf","28/Jul/21 09:43;flywire;PDFBoxSpaceSample.pdf.txt;https://issues.apache.org/jira/secure/attachment/13031148/PDFBoxSpaceSample.pdf.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 28 14:30:06 UTC 2021,,,,,,,,,,"0|z0tbko:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Jul/21 08:52;flywire;Will [https://pdfbox.apache.org/2.0/commandline.html#pdfdebugger] help identify the problem? Can I dump a file from it?

 

Root:DictionaryCatalog), Pages:Dictionary(Pages), Kids:Array, [0]Dictionary(Page), Resources:Dictionary, Font:Dictionary, mcaffj...:

    Basefont:Arial, Encoding:WinAnsiEncoding, FirstChar:30;;;","26/Jul/21 11:17;msahyoun;[~flywire] which PDFBox version are you using? Could you attach the PDF in question?;;;","26/Jul/21 11:43;flywire;Image shows PDFBox Version: 1.8.16. Unfortunately, the pdf is confidential so I was wondering if I could extract information from pdfdebugger. (I'll try and get a demo file from the supplier.)

Interestingly:
 - `java -jar pdfbox-app-1.8.10.jar ExtractText PrivateBuy.pdf` uses `a0` as space character
 - `java -jar pdfbox-app-2.0.24.jar ExtractText PrivateBuy.pdf` uses `c2 a0` as space character, same as `v1.8.16`;;;","26/Jul/21 15:50;tilman;That would be a non-breaking space. Maybe it's really there?;;;","27/Jul/21 12:54;flywire;pdf document contains 5 objects with:
{code:java}
/Type /XObject
/Subtype /Form
/Resources <<
/ProcSet [/PDF /Text /ImageC]
...
/Filter /FlateDecode
{code}
 

How can I remove the confidential objects on Win10? (One of the 2 is clear by object fonts.) Even better if I could decode, change and recode the text.

Once done I'll upload the file.;;;","27/Jul/21 17:48;tilman;It's tricky but you could use pdfbox-app and run WriteDecodedDoc. Then edit that file with a hex editor and replace text with blanks. However it's possible that the interesting text isn't visible as such so you won't be able to find it, or that it is in an image.;;;","28/Jul/21 03:59;flywire;Used https://pdfbox.apache.org/2.0/commandline.html#writedecodeddoc

All the confidential text is in 1 of 35 objects:

{code:java}
// BUY CONFIRMATION
BT
/YLFOZY+Arial-BoldMT 21.00000 Tf
425.00 608.00 Td
1.00000 0.00000 0.00000 rg
-0.06673 Tc
 ( % X \\  & R Q I L U P D W L R Q)  Tj
 ET
Q
 Q
q
q
{code}

Tj line:
20 28 00 25 00 58 00 5c 5c 00 03 00 26 00 52 00 51 00 49 00 4c 00 55 00 50 00 44 00 57 00 4c 00 52 00 51 29 20 20 54 6a

00 03 is the space character. How do I find out what it is mapped to? There are 4 obj with CMAP.

NP++ using UTF-8 encoding


;;;","28/Jul/21 06:36;tilman;Probably by looking at the /ToUnicode entry of the ""YLFOZY+Arial-BoldMT"" font.;;;","28/Jul/21 09:44;flywire;8 0 obj contents deleted (check footer):  [^PDFBoxSpaceSample.pdf]  [^PDFBoxSpaceSample.pdf.txt] ;;;","28/Jul/21 11:20;tilman;Have a look at
{noformat}
Root/Pages/Kids/[0]/Resources/XObject/jkaahoimibbckoocopjiokcnkejahbid/Resources/XObject/bafedaeelmmlkoiaaaodjnmjdeleffbf/Resources/Font/PFLLBD+TimesNewRomanPSMT/ToUnicode
{noformat}
and you'll see this
{noformat}
<0003><0003><00A0>
{noformat}
A0 is the non breaking space.
https://en.wikipedia.org/wiki/Non-breaking_space
C2 A0 when in UTF8.;;;","28/Jul/21 11:55;flywire;Yes, I saw the Wikipedia article and that coding but I couldn't interpret it -  _Every_ space! BIG THANK YOU.

Should PDFBox override that during processing? If so, how?;;;","28/Jul/21 11:59;tilman;No, if you don't like it, do your own postprocessing. It's unusual but valid.;;;","28/Jul/21 14:30;flywire;Extracts from the file using font and cmap to decode characters to text:

 

 
{noformat}

...
BT
/PFLLBD+TimesNewRomanPSMT 11.00000 Tf
8.00 11.00 Td
0.50196 0.50196 0.50196 rg
0.26403 Tc
 ( * H Q H U D W H G  $ W      $ S U                $ 0) Tj
 ET
...
25 0 obj
<<
/Type /Font
/Subtype /Type0
/BaseFont /PFLLBD+TimesNewRomanPSMT
/Name /PFLLBD+TimesNewRomanPSMT
/DescendantFonts [29 0 R]
/ToUnicode 30 0 R
/Encoding /Identity-H
>>
endobj
...
30 0 obj
<<
/Length 1317
>>
stream
/CIDInit /ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def
/CMapName /Adobe-Identity-UCS def
/CMapType 2 def
1 begincodespacerange
<0003><00b4>
endcodespacerange
52 beginbfrange
<0003><0003><00A0>
<000B><000B><0028>
<000C><000C><0029>
<000F><000F><002C>
<0010><0010><00AD>
<0011><0011><002E>
<0013><0013><0030>
<0014><0014><0031>
<0015><0015><0032>
<0017><0017><0034>
<001D><001D><003A>
<0024><0024><0041>
<0025><0025><0042>
<0026><0026><0043>
<0029><0029><0046>
<002A><002A><0047>
<002B><002B><0048>
<002C><002C><0049>
<002D><002D><004A>
<0030><0030><004D>
<0032><0032><004F>
<0033><0033><0050>
<0035><0035><0052>
<0036><0036><0053>
<0037><0037><0054>
<003A><003A><0057>
<003B><003B><0058>
<0044><0044><0061>
<0045><0045><0062>
<0046><0046><0063>
<0047><0047><0064>
<0048><0048><0065>
<0049><0049><0066>
<004A><004A><0067>
<004B><004B><0068>
<004C><004C><0069>
<004D><004D><006A>
<004E><004E><006B>
<004F><004F><006C>
<0050><0050><006D>
<0051><0051><006E>
<0052><0052><006F>
<0053><0053><0070>
<0054><0054><0071>
<0055><0055><0072>
<0056><0056><0073>
<0057><0057><0074>
<0058><0058><0075>
<0059><0059><0076>
<005A><005A><0077>
<005C><005C><0079>
<00B4><00B4><201D>
endbfrange
endcmap
CMapName currentdict /CMap defineresource pop
end end
endstream
endobj

Tj line as Hex
28 00 2a 00 48 00 51 00 48 00 55 00 44 00 57 00 
48 00 47 00 03 00 24 00 57 00 1d 00 03 00 13 00 
14 00 03 00 24 00 53 00 55 00 03 00 15 00 13 00 
15 00 14 00 03 00 13 00 14 00 1d 00 13 00 13 00 
1d 00 14 00 17 00 03 00 24 00 30 29 20 20 54 6a
{noformat}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
IOException: Unknown dir object c=')' cInt=41 peek=')' peekInt=41 at offset 8571 ,PDFBOX-5245,13391520,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Bug,,funaiy,funaiy,23/Jul/21 09:35,01/Oct/21 03:38,07/May/23 20:06,01/Oct/21 03:38,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Parsing,,,,0,,,,"we fetch the text and image content from pdf  by pdfbox, but some pdf files throw IoException; the pdfbox version is 2.0.24;pls help check

  
{code:java}
Caused by: java.io.IOException: Unknown dir object c=')' cInt=41 peek=')' peekInt=41 at offset 8571 (start offset: 8571)
	at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:913) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue(BaseParser.java:154) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair(BaseParser.java:288) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary(BaseParser.java:218) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:857) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.COSParser.parseFileObject(COSParser.java:907) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically(COSParser.java:876) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically(COSParser.java:796) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically(COSParser.java:2858) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.PDFParser.initialParse(PDFParser.java:175) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:226) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1228) ~[pdfbox-2.0.24.jar!/:2.0.24]
	at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1128) ~[pdfbox-2.0.24.jar!/:2.0.24]
{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 01 03:38:58 UTC 2021,,,,,,,,,,"0|z0t9og:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jul/21 09:41;funaiy; i can not upload the pdf file  because  i upload the file ,  and  the website  tips occur internal error;;;","23/Jul/21 09:42;funaiy;you can download the file from this url:  https://yidun-antispam.nos-eastchina1.126.net/CMS-a12041635f7f46319525e5f1bee44969.pdf?Signature=%2BhfbLlfXoJHEm8WdvKL4REr6idOGHvVGrJ15OvHYm0I%3D&Expires=1627633464&NOSAccessKeyId=a681ebcbcd5646a488d275c33acb16bd;;;","23/Jul/21 14:59;tilman;Your file is corrupt / has syntax errors.
{noformat}
11 0 obj<</CreationDate(D:20171219132506Z)
/GTS_PDFXVersiopâ:XøU:?&
/Producer(Adobe PDF Library 8.0)
/Author(Charlesworth, Alan)
/Creator(Adobe InDesign CS3 \(5.0.4\))
/Ußúd)
/ModDate(D:20180115001223+05'30')
/Title(Digital Marketing)
/Trapped/False
/GTS_PDFXConformance(PDF/X-3:2002)
/EBX_PUBLISHER(Taylor & Francis Ltd)>>endobj
{noformat}
You could try with 3.0.0 RC1, this uses a different approach for parsing, it parses on demand so bad objects aren't always hit. (I was able to display a few pages)
;;;","26/Jul/21 01:49;funaiy;tks for replay ！i will check it with 3.0.0

 ;;;","26/Jul/21 06:28;funaiy;[~tilman] , hi ! 

I have updated 3.0.0 RC1, but it also failed ; do we have any other suggestion for this issue ? 

 

Caused by: java.io.IOException: Unknown dir object c=')' cInt=41 peek=')' peekInt=41 at offset 5020 at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:865) ~[pdfbox-3.0.0-RC1.jar!/:3.0.0-RC1] at org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray(BaseParser.java:634) ~[pdfbox-3.0.0-RC1.jar!/:3.0.0-RC1] at org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken(PDFStreamParser.java:129) ~[pdfbox-3.0.0-RC1.jar!/:3.0.0-RC1];;;","26/Jul/21 06:43;tilman;Yeah, I see now it fails on the page 288 (labelled as 261). The content stream of that page is messed up too, the errors start at ""-TV"". If you trust that file, try to view that page with Adobe Reader, I expect that the page will be empty or incomplete.
{noformat}
[(Social )-58(media )-58(marketing )-TV)-492(shows)-492(tTJ
-1192(have00TT0 1 Tf
[( )-9.4 9)-8(pla 0 rais )-58(issue )-58(92(cont44005491opublished00492(k )-492(sThisr )l)-492(1sappreh92(-8(mean sreh92)-8(anh92)TV)-492(pro0TT0 aailme10003>-90<0-9.4 9)t )-8(do<<005300500345600030044005706<00503>-166-166<00
6<0076<00B2040066<0670J0>-1r00461<00503>40J0>-1r600052000B20C00
6<00F0J0>-1r0000003>0050C00
6<00>-1r304004C005107<00500052005500003>-3>66<004-166<062<0670J0>-1r600052000B20C00
6<00F0J0>-1r0000003>0050C00
6<00>-1r0>-00F005<00E0578 Tf
T*
[(br1<0053011>Tj
/T
Q

-58
{noformat};;;","01/Oct/21 03:38;tilman;Closing because this isn't a bug, it is a very bad file.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling constructor of PDFTextStripper throws java.lang.NoClassDefFoundError,PDFBOX-5241,13391080,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Cannot Reproduce,,Bettenburg,Bettenburg,21/Jul/21 07:24,23/Jul/21 06:12,07/May/23 20:06,23/Jul/21 06:12,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Text extraction,,,,0,jdk16,,,"Using 2.0.24

<dependency>
 <groupId>org.apache.pdfbox</groupId>
 <artifactId>pdfbox</artifactId>
 <version>2.0.24</version>
 </dependency>

On some of our customer's devices simply instantiating PDFTextStripper causes the JVM to crash

java.lang.NoClassDefFoundError: Could not initialize class org.apache.pdfbox.pdmodel.font.encoding.GlyphListjava.lang.NoClassDefFoundError: Could not initialize class org.apache.pdfbox.pdmodel.font.encoding.GlyphList at org.apache.pdfbox.text.LegacyPDFStreamEngine.<init>(LegacyPDFStreamEngine.java:120) at org.apache.pdfbox.text.PDFTextStripper.<init>(PDFTextStripper.java:214)

 

When running Java 11 this problem was not reported at all, so I guess this is a Java 16 issue.

If there is anything else I can provide please let me know

Thank you

 

EDIT: We cannot reproduce this issue on all machines, it seems to appear randomly ","Windows 10 (amd64)
Java-Version:   16.0.1 (Amazon Corretto)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 23 06:12:32 UTC 2021,,,,,,,,,,"0|z0t6yo:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Jul/21 17:33;tilman;try reinstall Corretto. Make sure to download the latest version from https://corretto.aws/downloads/latest/amazon-corretto-16-x64-windows-jdk.msi

Here's what I get with {{java -version}}
{noformat}
openjdk version ""16.0.1"" 2021-04-20
OpenJDK Runtime Environment Corretto-16.0.1.9.1 (build 16.0.1+9)
OpenJDK 64-Bit Server VM Corretto-16.0.1.9.1 (build 16.0.1+9, mixed mode, sharing)
{noformat}
16.0.2 is likely to come out soon, it has already been released by Oracle.

Also make sure that you have deleted all old pdfbox versions from your classpath, and that your jar files have the correct size, and do contain org.apache.pdfbox.pdmodel.font.encoding.GlyphList, it should be at org\apache\pdfbox\pdmodel\font\encoding\GlyphList.class .
;;;","22/Jul/21 14:58;Bettenburg;Hi Tilman,

thanks for the fast reaction.

Actually we are using exactly the same version you mention here.

We double checked to have no other pdfbox version on the classpath as well. 

The .class file resides at the location you mention, too.

This issue is very strange and we cannot reproduce it on our machines. We'll need to observe it a little longer.

I'm not aware of all Java 16 changes but I guess something changed that can lead to this issue in very small number of cases, as we never had that issue in Java 11 (corretto)

Is nobody else having similar issues on Java 16? ;;;","23/Jul/21 03:37;tilman;It's the first time I hear this, I think.

Sometimes there's really weird reports, and the solution to reinstall the jdk has helped.

On the machines where it happens, does it always happen?;;;","23/Jul/21 06:10;Bettenburg;Actually no - Calling this constructor is wrapped in an object which has a lifecycle itself (like a plugin).

The user says it happens every ~ 20th time when restarting the plugin.

You're definitely right, this is a weird issue.

We wrapped the call in a looping trying it several times to hopefully mitigate the problem. I'll let you know if it's reported again.

Thanks so far;;;","23/Jul/21 06:12;tilman;OK I'm closing this issue for now, feel free to reopen / comment when new developments.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
preflight SMask entry check incorrect,PDFBOX-5240,13390252,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Fixed,tilman,tilman,tilman,17/Jul/21 15:30,17/Dec/21 06:50,07/May/23 20:06,17/Jul/21 15:36,1.8.16,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,1.8.17,2.0.25,3.0.0 PDFBox,Preflight,,,,0,,,,"checkSMask works wrongly in all versions: in 1.8 and 2.0 it allows a string, in 3.0 it calls getCOSDictionary.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jul 17 15:36:17 UTC 2021,,,,,,,,,,"0|z0t1uw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jul/21 15:34;jira-bot;Commit 1891613 from Tilman Hausherr in branch 'pdfbox/branches/1.8'
[ https://svn.apache.org/r1891613 ]

PDFBOX-5240: expect a COSName only;;;","17/Jul/21 15:34;jira-bot;Commit 1891614 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891614 ]

PDFBOX-5240: expect a COSName only;;;","17/Jul/21 15:36;jira-bot;Commit 1891615 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891615 ]

PDFBOX-5240: expect a COSName only;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PageLayout.TWO_COLUMN_RIGHT is not working as expected,PDFBOX-5237,13388887,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Not A Problem,,ibrahim,ibrahim,11/Jul/21 14:52,13/Jul/21 17:46,07/May/23 20:06,12/Jul/21 14:43,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,"applying the following code:
{code:java}
final PDDocument document = Loader.loadPDF(new File(""C:/Users/Ebrahim/Desktop/hafs.pdf""));
final PDDocumentCatalog docCatalog = document.getDocumentCatalog();
docCatalog.setPageLayout(PageLayout.TWO_COLUMN_RIGHT);
document.save(""C:/Users/Ebrahim/Desktop/hafs_new.pdf"");
document.close();
{code}
to this file:

[https://maknoon.com/hafs.pdf]

 

resulted in 'odd' pages to the left (using SumatraPDF) where it should be to the right.

using adobe reader, the first page is displayed alone and then odd pages to the left, this resulted in very strange ordering for the pages.

what i need is to display odd number to the right so that pages (for RTL language) can be displayed as follow:

#####

2    1

4    3

6    5",,,,,,,,,,,,,,,,"11/Jul/21 18:34;msahyoun;6Pages-PageLayout-TwoColumn.png;https://issues.apache.org/jira/secure/attachment/13030444/6Pages-PageLayout-TwoColumn.png","11/Jul/21 18:34;msahyoun;6Pages-PageLayout-TwoColumnRight.png;https://issues.apache.org/jira/secure/attachment/13030443/6Pages-PageLayout-TwoColumnRight.png","11/Jul/21 18:28;msahyoun;6pages-PageLayout-TwoColumnLeft.pdf;https://issues.apache.org/jira/secure/attachment/13030439/6pages-PageLayout-TwoColumnLeft.pdf","11/Jul/21 18:28;msahyoun;6pages-PageLayout-TwoColumnRight.pdf;https://issues.apache.org/jira/secure/attachment/13030440/6pages-PageLayout-TwoColumnRight.pdf","11/Jul/21 18:28;msahyoun;6pages-PageLayout-TwoPageLeft.pdf;https://issues.apache.org/jira/secure/attachment/13030441/6pages-PageLayout-TwoPageLeft.pdf","11/Jul/21 18:28;msahyoun;6pages-PageLayout-TwoPageRight.pdf;https://issues.apache.org/jira/secure/attachment/13030442/6pages-PageLayout-TwoPageRight.pdf","11/Jul/21 17:37;tilman;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13030437/screenshot-1.png",,,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 13 17:46:19 UTC 2021,,,,,,,,,,"0|z0stgg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Jul/21 15:39;tilman;Can you attach a document that works the way you want?;;;","11/Jul/21 16:07;ibrahim;ok, i found online tool to merge multiple pages in one:

[https://maknoon.com/hafs-demo.pdf]

 

the tool actually merge 2 pages in one sheet which is not what i want here. but it is just to show the order of the pages and how it should be;;;","11/Jul/21 17:37;tilman;That doesn't help; the reason I asked not that I didn't understand, it is because I wonder if it is possible at all. The part of the code you're using is rather simple.

 !screenshot-1.png! ;;;","11/Jul/21 17:45;ibrahim;i understood that ""TWO_COLUMN_RIGHT"" will achieve this , if this behaviour is not applicable, this bug is not valid.

 

but i wonder what does it mean, i tried all of the Two* options and all gave me the same result;;;","11/Jul/21 18:08;msahyoun;let me create a sample document to inspect the settings ;;;","11/Jul/21 18:41;msahyoun;When setting the PageLayout in Adobe Acrobat the UI has different terms which, I think clarify the intend
- 2up
- 2up continuos
- 2up Frontpage
- 2up Frontpage

where continuous means that, when zooming, all pages are displayed where without the setting continous only pairs are displayed. It doesn't have anything today with LTR or RTL language settings.

Make sure to view the sample documents I've uploaded using Adobe Reader get the intended display


;;;","12/Jul/21 04:19;ibrahim;thank you all for the support and clarifications, it seems i didn't understand the logic correctly. i guess this ticket is not valid.

 

it will be great if we can have such feature to layout the pages from RTL i.e.

#####

2 1

4 3

6 5

#####

and

#####

1

3   2

5   4

     6;;;","12/Jul/21 08:00;mkl;Have you tried also setting the *Direction* entry in the viewer preferences dictionary to *R2L*?

According to the spec:


||Key||Type||Value||
|*Direction*|name|_(Optional; PDF 1.3)_ The predominant logical content order for text:
_L2R_ Left to right
_R2L_ Right to left (including vertical writing systems, such as Chinese, Japanese, and Korean)
This entry has no direct effect on the document’s contents or page numbering but may be used to determine the relative positioning of pages when displayed side by side or printed _n_-up. Default value: _L2R_.|

_(ISO 32000-2:2020 Table 147 — Entries in a viewer preferences dictionary)_;;;","12/Jul/21 14:42;ibrahim;much appreciated, {color:#000000}PDViewerPreferences solved the issue.
{color}

{color:#000000}thanks everyone for the great support{color};;;","13/Jul/21 17:46;tilman;Thank you so much [~mkl], I've added a notice in the javadoc as part of PDFBOX-4892.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDPageContentStream.setLineWidth(float) not allowed in text block,PDFBOX-5236,13388509,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,lehmi,tmvander,tmvander,09/Jul/21 01:16,17/Dec/21 06:50,07/May/23 20:06,10/Jul/21 12:03,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,PDModel,,,,0,,,,"PDPageContentStream.setLineWidth(float) incorrectly throws an exception that setLineWidth is not allowed within a text block.  setLineWidth uses PDF operator ""w"", which according to the PDF specification, it is allowed and is used to set the stroke line width for text outlines when using either STROKE or FILL_STROKE rendering modes.  This is shown on page 392 of the specification at [https://www.adobe.com/content/dam/acom/en/devnet/pdf/pdf_reference_archive/pdf_reference_1-7.pdf] in Example 5.4.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Jul 11 18:40:04 UTC 2021,,,,,,,,,,"0|z0sr4o:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jul/21 09:13;mkl;Indeed, and that's not the only incorrectly rejected instruction.

According to ISO 32000-2:2020, _Figure 9 — Graphics objects_ does allow _General graphics state_ operators in text objects. And not only *w* is in this category, *w, J, j, M, d, ri, i, gs, q, Q* are.

Yes, in the 2020 update of ISO 32000-2 *q* and *Q* have become general graphics state operators, too. This might break some code. (Admittedly I only have access to the FDIS, so it would be great if someone could look up the final ISO 32000-2:2020 and confirm.);;;","10/Jul/21 11:00;jira-bot;Commit 1891430 from lehmi@apache.org in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891430 ]

PDFBOX-5236: allow general graphics state operators within text mode;;;","10/Jul/21 11:02;jira-bot;Commit 1891431 from lehmi@apache.org in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891431 ]

PDFBOX-5236: allow general graphics state operators within text mode;;;","10/Jul/21 11:11;lehmi;I've removed the checks for all general graphics state operators but *q* and *Q*  as this is part of pdf 2.0 and we haven't decided how to support the upcoming pdf version;;;","10/Jul/21 12:04;lehmi;[~tmvander] thanks for the report, [~mkl] thanks for your input;;;","11/Jul/21 11:15;jira-bot;Commit 1891444 from lehmi@apache.org in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891444 ]

PDFBOX-5236: add assertion to test case, sonar fix;;;","11/Jul/21 11:15;jira-bot;Commit 1891445 from lehmi@apache.org in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891445 ]

PDFBOX-5236: add assertion to test case, sonar fix;;;","11/Jul/21 18:40;tmvander;Glad to help.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LayerUtility().importPageAsForm() doesn't return,PDFBOX-5232,13387194,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,tilman,tilman,02/Jul/21 04:11,17/Dec/21 06:50,07/May/23 20:06,03/Jul/21 17:55,2.0.24,3.0.0 PDFBox,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Utilities,,,,0,,,,"{code}
PDDocument pdDocument = PDDocument.load(imported);
new LayerUtility(pdDocument).importPageAsForm(pdDocument, 0);
{code}",,,,,,,,,,,,,,,,"02/Jul/21 04:11;tilman;Pour Ronald - PDF Autocad reduit.pdf;https://issues.apache.org/jira/secure/attachment/13027565/Pour+Ronald+-+PDF+Autocad+reduit.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,https://stackoverflow.com/questions/68213927/pdfbox-small-pdf-file-cant-be-open-in-pdformxobject,,,,,,,,,,9223372036854775807,,,,Sat Jul 03 17:55:41 UTC 2021,,,,,,,,,,"0|z0sj20:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Jul/21 07:11;tilman;I wonder if this is somehow a recursion because it comes from the same document.;;;","02/Jul/21 17:37;mkl;{quote}I wonder if this is somehow a recursion because it comes from the same document.{quote}
It is an endless loop of an array being added to itself, see the [stack overflow question|https://stackoverflow.com/a/68229200/1729265].;;;","03/Jul/21 16:46;jira-bot;Commit 1891232 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891232 ]

PDFBOX-5232: skip identical target to avoid endless loop, as suggested by Michael Klink in SO 68213927; add test;;;","03/Jul/21 16:46;jira-bot;Commit 1891233 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891233 ]

PDFBOX-5232: skip identical target to avoid endless loop, as suggested by Michael Klink in SO 68213927; add test;;;","03/Jul/21 17:55;tilman;Thanks [~mkl]!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException: arraycopy: length -2 is negative in PDPanose.getPanose,PDFBOX-5228,13386010,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,Fixed,tilman,tilman,tilman,26/Jun/21 16:25,17/Dec/21 06:50,07/May/23 20:06,26/Jun/21 16:46,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0.25,3.0.0 PDFBox,,Rendering,,,,0,,,,Mailing list mail send to moderation without meaningful text and a file attachment turned out to be genuine problem: an empty panose string.,,,,,,,,,,,,,,,,"26/Jun/21 16:23;tilman;CMRA76.15491101040043467_20210520_259850201_15302598502015193702.pdf;https://issues.apache.org/jira/secure/attachment/13027322/CMRA76.15491101040043467_20210520_259850201_15302598502015193702.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 29 03:41:34 UTC 2021,,,,,,,,,,"0|z0sbr4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Jun/21 16:30;jira-bot;Commit 1891061 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891061 ]

PDFBOX-5228: add length constant;;;","26/Jun/21 16:30;jira-bot;Commit 1891062 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891062 ]

PDFBOX-5228: add length constant;;;","26/Jun/21 16:33;jira-bot;Commit 1891063 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891063 ]

PDFBOX-5228: check length;;;","26/Jun/21 16:33;jira-bot;Commit 1891064 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891064 ]

PDFBOX-5228: check length;;;","26/Jun/21 16:45;tilman;Snapshot at
https://repository.apache.org/content/groups/snapshots/org/apache/pdfbox/pdfbox-app/2.0.25-SNAPSHOT/;;;","27/Jun/21 17:58;jira-bot;Commit 1891088 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891088 ]

PDFBOX-5228: check length;;;","27/Jun/21 17:58;jira-bot;Commit 1891089 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891089 ]

PDFBOX-5228: check length;;;","28/Jun/21 17:06;jira-bot;Commit 1891110 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891110 ]

PDFBOX-5228: Sonar fix;;;","28/Jun/21 17:07;jira-bot;Commit 1891111 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891111 ]

PDFBOX-5228: Sonar fix;;;","29/Jun/21 03:41;jira-bot;Commit 1891129 from Tilman Hausherr in branch 'pdfbox/branches/2.0'
[ https://svn.apache.org/r1891129 ]

PDFBOX-5228: update mockito;;;","29/Jun/21 03:41;jira-bot;Commit 1891130 from Tilman Hausherr in branch 'pdfbox/trunk'
[ https://svn.apache.org/r1891130 ]

PDFBOX-5228: update mockito;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Flattening removes all annotations when widget annotation has no page,PDFBOX-5225,13385959,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Major,,,tilman,tilman,26/Jun/21 04:13,12/Aug/21 13:59,07/May/23 20:06,,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AcroForm,,,,0,,,,"{code}
        PDAcroForm acroForm = doc.getDocumentCatalog().getAcroForm();
        List<PDField> list = new ArrayList<>();
        list.add(acroForm.getField(""VN_NAME""));
        acroForm.flatten(list, true); 
{code}
The code from buildPagesWidgetsMap that is run when there are widgets with missing page references does not consider the field list. So all widgets end up in the map instead of only those we care about.",,,,,,,,,,,,,,,,"26/Jun/21 04:13;tilman;SourceFailure.pdf;https://issues.apache.org/jira/secure/attachment/13027311/SourceFailure.pdf",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Aug 12 13:59:06 UTC 2021,,,,,,,,,,"0|z0sbfs:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Jun/21 05:03;msahyoun;[~tilman] in addition to fixing the issue with {{buildPagesWidgetsMap}} we could provide a FixUp processor (maybe as a sample) one could execute. WDYT?;;;","26/Jun/21 12:34;tilman;No opinion from me at this time because I don't know what this would do. Remove the widgets? Set the page? In this case here, I suspect that the widget isn't assigned to a page and that no page exists.;;;","26/Jun/21 12:36;tilman;My thought was to change the second part of that method to this:
{code}

        Set<COSDictionary> widgetDictionarySet = new HashSet<>();
        for (PDField field : fields)
        {
            List<PDAnnotationWidget> widgets = field.getWidgets();
            for (PDAnnotationWidget widget : widgets)
            {
                widgetDictionarySet.add(widget.getCOSObject());
            }
        }

        for (PDPage page : document.getPages())
        {
            for (PDAnnotation annotation : page.getAnnotations())
            {
                if (widgetDictionarySet.contains(annotation.getCOSObject()))
                {
                    fillPagesAnnotationMap(pagesAnnotationsMap, page, (PDAnnotationWidget) annotation);
                }
            }
        }
{code}
It seems to work but now the annotations are direct objects, and the file can't be opened with Adobe Reader.

Update: it also fails a flatten test. This is getting tricky.;;;","27/Jun/21 16:29;msahyoun;I've taken a look at the spec as I wasn't sure if /P is a required entry for an annotation - it is not. So nothing to correct which would be handled by a FixUp. No sure if your above code is valid or if the issues you mentioned after the code are still valid?  ;;;","28/Jun/21 04:02;tilman;The direct object thing may be related to PDFBOX-5227. I have not yet investigated the flatten code failure, it fails claiming that the field list isn't empty when it should be empty.;;;","28/Jun/21 05:44;msahyoun;If you're fine with it I'll take that issue and work on it later today.;;;","28/Jun/21 07:09;tilman;Yes thanks!;;;","29/Jun/21 19:42;msahyoun;The test is failing for https://issues.apache.org/jira/secure/attachment/13005793/f1040sb%20test.pdf from PDFBOX-4889. Need to investigate further;;;","07/Jul/21 06:02;lehmi;I've fixed PDFBOX-5227. 

[~msahyoun] That failing test maybe isn't related to your changes. I've experienced some concurrency issues with that test in the past, see my comments at PDFBOX-5214;;;","12/Aug/21 13:59;msahyoun;The failing test is because of the fix up kicking in so somewhat unrelated. I've created a small JUnit test which uses the proposed code and removes the /P entry from the widget.  That works. Need to further check why after the change the test fails.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDFTextStripper adds next line symbol after sup values (regression) ,PDFBOX-5213,13383709,Bug,Open,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,,,Postrigan,Postrigan,14/Jun/21 11:40,21/Jun/21 08:16,07/May/23 20:06,,2.0.22,2.0.23,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Text extraction,,,,1,regression,,,"Since version 2.0.22

PDFTextStripper adds next line symbol after sup values.

Like earlier

""Other (12) 1,505 832""

Now:

""Other (12)
 1,505 832""

 

You can see this by comparing files GS-2010-q4-earnings.pdf_expected.html (2.0.21 and earlier) and GS-2010-q4-earnings.pdf_result.html (2.0.22 and higher)

  !image-2021-06-14-14-50-08-236.png!

If I took latest version of PDFbox like 2.0.24 and copy code of PDFTextStripper from 2.0.21 and use it then I don't see this issue. So it's regression only in PDFTextStripper.

 

To reproduce, you can use next simple code (copied from your examples). pageBytes is file GS-2010-q4-earnings.pdf

List<String> pages = new ArrayList<>();

PDDocument pdDocument = null;
 try {
 String pass = """";
 PDFParser parser = new PDFParser(new RandomAccessReadBuffer(pageBytes), pass);
 pdDocument = parser.parse();

int numberOfPages = pdDocument.getNumberOfPages();
 if (limit < numberOfPages)

{ numberOfPages = limit; }

// //

for (int i = 0; i < numberOfPages; i++)

{ PDFTextStripper stripper = new PDFTextStripper(); stripper.setStartPage(i + 1); stripper.setEndPage(i + 1); pages.add(stripper.getText(pdDocument)); }

} catch (Exception e)

{ log.error(e.getMessage(), e);  }

finally {
 if (pdDocument != null)

{ try

{ pdDocument.close(); }

catch (IOException e) \{ log.error(e.getMessage(), e);  }

}
 }

 

 

 ",,,,,,,,,,,,,,,PDFBOX-5002,"14/Jun/21 11:38;Postrigan;GS-2010-q4-earnings.pdf;https://issues.apache.org/jira/secure/attachment/13026806/GS-2010-q4-earnings.pdf","14/Jun/21 11:39;Postrigan;GS-2010-q4-earnings.pdf_expected.html;https://issues.apache.org/jira/secure/attachment/13026805/GS-2010-q4-earnings.pdf_expected.html","14/Jun/21 11:39;Postrigan;GS-2010-q4-earnings.pdf_result.html;https://issues.apache.org/jira/secure/attachment/13026804/GS-2010-q4-earnings.pdf_result.html","14/Jun/21 11:50;Postrigan;image-2021-06-14-14-50-08-236.png;https://issues.apache.org/jira/secure/attachment/13026807/image-2021-06-14-14-50-08-236.png",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 21 08:15:54 UTC 2021,,,,,,,,,,"0|z0rxkg:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Jun/21 17:28;tilman;[~tguerin] any idea about this?;;;","21/Jun/21 08:15;tguerin;Seems strange, looks like the superscript is ""too high"" and triggers a new block of text. I'll have a look tomorrow to see if it can be adjusted without breaking everything ;);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot create document containing certain characters in Symbol font,PDFBOX-5212,13383387,Bug,Closed,PDFBOX,PDFBox,software,lehmi,The Apache PDFBox® library is an open source Java tool for working with PDF documents. Apache PDFBox is published under the Apache License v2.0.,http://pdfbox.apache.org/,Minor,Invalid,,rainer.pichler,rainer.pichler,11/Jun/21 10:47,14/Jun/21 07:04,07/May/23 20:06,14/Jun/21 07:04,2.0.24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PDModel,,,,0,,,,"I try to generate a document using the Standard 14 Font PDType1Font.SYMBOL.
Using this font constant should neither result in embedding and nor require the font on the document-generating system as each reader supplies a compatible font (https://pdfbox.apache.org/1.8/cookbook/workingwithfonts.html).

This initally works. But for verifying completeness, I wrote the attached a sample code that contains all Symbol characters.
Several characters cannot be written (see attached output.txt). There are two distinct error cases:

1.) Characters not in the file glyphlist.txt, e.g. U+220D ('.notdef') is not available in this font Symbol encoding: SymbolEncoding

2.) Characters that are in the file glyphlist.txt but cannot be mapped to the SymbolEncoding due to a missing entry or different name, e.g. U+0394 ('Deltagreek') is not available in this font Symbol encoding: SymbolEncoding
In this case, the problem can be addressed by replacing the ""wrong"" mapping by (0104, ""Deltagreek"") in SymbolEncoding.

As I understand, this approach should work as it translates the encoding via the glyphlist.txt and SymbolEncoding.","Windows 10, Java 8",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 14 07:04:22 UTC 2021,,,,,,,,,,"0|z0rvkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Jun/21 15:00;tilman;The symbol U+220D (∍) is not in the symbol set in the PDF specification (search for ""Symbol Set and Encoding"")
https://www.adobe.com/content/dam/acom/en/devnet/pdf/pdfs/PDF32000_2008.pdf

For delta, you need to use U+2206, which is ""Delta"". ""Deltagreek"" is not in the set.;;;","14/Jun/21 07:04;rainer.pichler;Thank you. That only a certain symbol set is supported explains the issue. I removed the invalid example.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
